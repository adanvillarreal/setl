   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 435:Stack  : PROGRAM . LexToken(ID,'aPlusB',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : PROGRAM ID . LexToken(;,';',1,14)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 435:Stack  : PROGRAM ID ; . LexToken(INT,'int',1,17)
   yacc.py: 474:Action : Reduce rule [n_main_quad -> <empty>] with [] and goto state 5
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad . LexToken(INT,'int',1,17)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad INT . LexToken(ID,'i',1,21)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 20
   yacc.py: 506:Result : <str @ 0x7f4a032b8d50> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype . LexToken(ID,'i',1,21)
   yacc.py: 445:Action : Shift and goto state 38
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype ID . LexToken(,,',',1,22)
   yacc.py: 445:Action : Shift and goto state 53
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype ID , . LexToken(ID,'j',1,24)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype ID , ID . LexToken(;,';',1,25)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype ID , ID ; . LexToken(VOID,'void',1,28)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype ID , ID var2 . LexToken(VOID,'void',1,28)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['j',None] and goto state 60
   yacc.py: 506:Result : <str @ 0x7f4a048c68a0> ('j')
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype ID , var1 . LexToken(VOID,'void',1,28)
   yacc.py: 471:Action : Reduce rule [var1 -> ID , var1] with ['i',',','j'] and goto state 37
   yacc.py: 506:Result : <str @ 0x7f4a032b8f08> ('i j')
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype var1 . LexToken(VOID,'void',1,28)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int','i j'] and goto state 13
   yacc.py: 506:Result : <str @ 0x7f4a031749f0> ('int i j')
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var . LexToken(VOID,'void',1,28)
   yacc.py: 445:Action : Shift and goto state 6
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID . LexToken(ID,'uno',1,33)
   yacc.py: 445:Action : Shift and goto state 25
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID ID . LexToken((,'(',1,36)
   yacc.py: 445:Action : Shift and goto state 40
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID ID ( . LexToken(INT,'int',1,37)
   yacc.py: 471:Action : Reduce rule [proca2 -> ID (] with ['uno','('] and goto state 26
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 . LexToken(INT,'int',1,37)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 INT . LexToken(ID,'a',1,41)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 31
   yacc.py: 506:Result : <str @ 0x7f4a032b8f30> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 datatype . LexToken(ID,'a',1,41)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 datatype ID . LexToken(),')',1,42)
   yacc.py: 471:Action : Reduce rule [n_push_variable -> datatype ID] with ['int','a'] and goto state 30
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 n_push_variable . LexToken(),')',1,42)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 17
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 n_push_variable empty . LexToken(),')',1,42)
   yacc.py: 471:Action : Reduce rule [proc2 -> empty] with [None] and goto state 46
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 430:Defaulted state 46: Reduce using 14
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 n_push_variable proc2 . LexToken(),')',1,42)
   yacc.py: 471:Action : Reduce rule [proc1 -> n_push_variable proc2] with [None,None] and goto state 28
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 . LexToken(),')',1,42)
   yacc.py: 445:Action : Shift and goto state 43
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) . LexToken({,'{',1,43)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { . LexToken(INT,'int',1,47)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { INT . LexToken(ID,'i',1,51)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 66
   yacc.py: 506:Result : <str @ 0x7f4a032b8f30> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { datatype . LexToken(ID,'i',1,51)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { datatype ID . LexToken(;,';',1,52)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { datatype ID ; . LexToken(ID,'i',1,56)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { datatype ID var2 . LexToken(ID,'i',1,56)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['i',None] and goto state 37
   yacc.py: 506:Result : <str @ 0x7f4a048ddaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { datatype var1 . LexToken(ID,'i',1,56)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int','i'] and goto state 65
   yacc.py: 506:Result : <str @ 0x7f4a03174b40> ('int i')
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var . LexToken(ID,'i',1,56)
   yacc.py: 474:Action : Reduce rule [n_quad_counter -> <empty>] with [] and goto state 64
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter . LexToken(ID,'i',1,56)
   yacc.py: 445:Action : Shift and goto state 92
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter ID . LexToken(ASSIGNATOR,':=',1,58)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['i'] and goto state 82
   yacc.py: 506:Result : <str @ 0x7f4a048ddaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 . LexToken(ASSIGNATOR,':=',1,58)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR . LexToken(ID,'a',1,61)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 169
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 169
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign . LexToken(ID,'a',1,61)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign empty . LexToken(ID,'a',1,61)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(ID,'a',1,61)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not ID . LexToken(*,'*',1,63)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not ID empty . LexToken(*,'*',1,63)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['a',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048c65a8> ('a')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(*,'*',1,63)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['a'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(*,'*',1,63)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(*,'*',1,63)
   yacc.py: 445:Action : Shift and goto state 196
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv * . LexToken(CTE_INT,'2',1,65)
   yacc.py: 471:Action : Reduce rule [muldiv -> *] with ['*'] and goto state 199
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 199
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv . LexToken(CTE_INT,'2',1,65)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv CTE_INT . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['2'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv varcte1 . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv varcte . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 215
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 215
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor . LexToken(;,';',1,66)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 226
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 226
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv . LexToken(;,';',1,66)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv n_quad_not . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 232
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 232
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv term2 . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [term2 -> muldiv factor n_quad_muldiv term2] with [None,None,None,None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term . LexToken(;,';',1,66)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,66)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,66)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 153
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 151
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 189
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 30
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['i',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter assignment . LexToken(;,';',1,66)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement1 . LexToken(;,';',1,66)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement1 ; . LexToken(IF,'if',1,70)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 83
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement . LexToken(IF,'if',1,70)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF . LexToken((,'(',1,73)
   yacc.py: 445:Action : Shift and goto state 127
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( . LexToken(ID,'i',1,74)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( empty . LexToken(ID,'i',1,74)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( term_not . LexToken(ID,'i',1,74)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( term_not ID . LexToken(<,'<',1,76)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( term_not ID empty . LexToken(<,'<',1,76)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048ddaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( term_not varcte . LexToken(<,'<',1,76)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( term_not factor . LexToken(<,'<',1,76)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( term_not factor n_quad_muldiv . LexToken(<,'<',1,76)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( term_not factor n_quad_muldiv n_quad_not . LexToken(<,'<',1,76)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( term_not factor n_quad_muldiv term2 . LexToken(<,'<',1,76)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( term . LexToken(<,'<',1,76)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( term empty . LexToken(<,'<',1,76)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( term exp2 . LexToken(<,'<',1,76)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp . LexToken(<,'<',1,76)
   yacc.py: 445:Action : Shift and goto state 160
   yacc.py: 410:
   yacc.py: 411:State  : 160
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp < . LexToken(ID,'a',1,78)
   yacc.py: 471:Action : Reduce rule [relop -> <] with ['<'] and goto state 155
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop . LexToken(ID,'a',1,78)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop empty . LexToken(ID,'a',1,78)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term_not . LexToken(ID,'a',1,78)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term_not ID . LexToken(+,'+',1,80)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term_not ID empty . LexToken(+,'+',1,80)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['a',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048c65a8> ('a')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term_not varcte . LexToken(+,'+',1,80)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['a'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term_not factor . LexToken(+,'+',1,80)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term_not factor n_quad_muldiv . LexToken(+,'+',1,80)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term_not factor n_quad_muldiv n_quad_not . LexToken(+,'+',1,80)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term_not factor n_quad_muldiv term2 . LexToken(+,'+',1,80)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term . LexToken(+,'+',1,80)
   yacc.py: 445:Action : Shift and goto state 145
   yacc.py: 410:
   yacc.py: 411:State  : 145
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term + . LexToken(CTE_INT,'4',1,82)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 147
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub . LexToken(CTE_INT,'4',1,82)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub empty . LexToken(CTE_INT,'4',1,82)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term_not . LexToken(CTE_INT,'4',1,82)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term_not CTE_INT . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['4'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term_not varcte1 . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term_not varcte . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term_not factor . LexToken(),')',1,83)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term_not factor n_quad_muldiv . LexToken(),')',1,83)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term_not factor n_quad_muldiv term2 . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term . LexToken(),')',1,83)
   yacc.py: 474:Action : Reduce rule [n_quad_addsub -> <empty>] with [] and goto state 201
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term n_quad_addsub . LexToken(),')',1,83)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term n_quad_addsub empty . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 217
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 217
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term addsub term n_quad_addsub exp2 . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term n_quad_addsub exp2] with [None,None,None,None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop term exp2 . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 181
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp relop exp . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [exp02 -> relop exp] with [None,None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp exp02 . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp0 . LexToken(),')',1,83)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 153
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp0 empty . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 151
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( exp0 expression2 . LexToken(),')',1,83)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 174
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 174
   yacc.py: 430:Defaulted state 174: Reduce using 40
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression . LexToken(),')',1,83)
   yacc.py: 474:Action : Reduce rule [n_while_2 -> <empty>] with [] and goto state 193
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 193
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 . LexToken(),')',1,83)
   yacc.py: 445:Action : Shift and goto state 213
   yacc.py: 410:
   yacc.py: 411:State  : 213
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) . LexToken({,'{',1,85)
   yacc.py: 445:Action : Shift and goto state 223
   yacc.py: 410:
   yacc.py: 411:State  : 223
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { . LexToken(ID,'uno',1,91)
   yacc.py: 445:Action : Shift and goto state 92
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { ID . LexToken((,'(',1,94)
   yacc.py: 445:Action : Shift and goto state 124
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { ID ( . LexToken(ID,'a',1,95)
   yacc.py: 471:Action : Reduce rule [n_era_size -> ID (] with ['uno','('] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size . LexToken(ID,'a',1,95)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 123
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size empty . LexToken(ID,'a',1,95)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term_not . LexToken(ID,'a',1,95)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term_not ID . LexToken(+,'+',1,97)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term_not ID empty . LexToken(+,'+',1,97)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['a',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048c65a8> ('a')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term_not varcte . LexToken(+,'+',1,97)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['a'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term_not factor . LexToken(+,'+',1,97)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term_not factor n_quad_muldiv . LexToken(+,'+',1,97)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term_not factor n_quad_muldiv n_quad_not . LexToken(+,'+',1,97)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term_not factor n_quad_muldiv term2 . LexToken(+,'+',1,97)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term . LexToken(+,'+',1,97)
   yacc.py: 445:Action : Shift and goto state 145
   yacc.py: 410:
   yacc.py: 411:State  : 145
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term + . LexToken(CTE_INT,'1',1,99)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 147
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub . LexToken(CTE_INT,'1',1,99)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub empty . LexToken(CTE_INT,'1',1,99)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term_not . LexToken(CTE_INT,'1',1,99)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term_not CTE_INT . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['1'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term_not varcte1 . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term_not varcte . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term_not factor . LexToken(),')',1,100)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term_not factor n_quad_muldiv . LexToken(),')',1,100)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term_not factor n_quad_muldiv term2 . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term . LexToken(),')',1,100)
   yacc.py: 474:Action : Reduce rule [n_quad_addsub -> <empty>] with [] and goto state 201
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term n_quad_addsub . LexToken(),')',1,100)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term n_quad_addsub empty . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 217
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 217
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term addsub term n_quad_addsub exp2 . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term n_quad_addsub exp2] with [None,None,None,None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size term exp2 . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size exp . LexToken(),')',1,100)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size exp empty . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size exp exp02 . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size exp0 . LexToken(),')',1,100)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 153
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size exp0 empty . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 151
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size exp0 expression2 . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 121
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 121
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size expression . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [n_verify_argument -> expression] with [None] and goto state 122
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size n_verify_argument . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [function_call2 -> n_verify_argument] with [None] and goto state 119
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 430:Defaulted state 119: Reduce using 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size function_call2 . LexToken(),')',1,100)
   yacc.py: 471:Action : Reduce rule [function_call1 -> function_call2] with [None] and goto state 120
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size function_call1 . LexToken(),')',1,100)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { n_era_size function_call1 ) . LexToken(;,';',1,101)
   yacc.py: 471:Action : Reduce rule [function_call -> n_era_size function_call1 )] with [None,None,')'] and goto state 77
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 430:Defaulted state 77: Reduce using 72
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { function_call . LexToken(;,';',1,101)
   yacc.py: 471:Action : Reduce rule [statement1 -> function_call] with [None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { statement1 . LexToken(;,';',1,101)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { statement1 ; . LexToken(},'}',1,105)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 102
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { statement . LexToken(},'}',1,105)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 103
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 430:Defaulted state 103: Reduce using 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { statement empty . LexToken(},'}',1,105)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 430:Defaulted state 129: Reduce using 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { statement statement_aux . LexToken(},'}',1,105)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 228
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { statement_aux . LexToken(},'}',1,105)
   yacc.py: 445:Action : Shift and goto state 234
   yacc.py: 410:
   yacc.py: 411:State  : 234
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) { statement_aux } . LexToken(PRINT,'print',1,109)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 224
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 224
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) block . LexToken(PRINT,'print',1,109)
   yacc.py: 474:Action : Reduce rule [n_if_3 -> <empty>] with [] and goto state 229
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 229
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) block n_if_3 . LexToken(PRINT,'print',1,109)
   yacc.py: 471:Action : Reduce rule [condition1 -> n_if_3] with [None] and goto state 231
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 231
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement IF ( expression n_while_2 ) block condition1 . LexToken(PRINT,'print',1,109)
   yacc.py: 471:Action : Reduce rule [condition -> IF ( expression n_while_2 ) block condition1] with ['if','(',None,None,')',None,None] and goto state 93
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement condition . LexToken(PRINT,'print',1,109)
   yacc.py: 471:Action : Reduce rule [statement2 -> condition] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement2 . LexToken(PRINT,'print',1,109)
   yacc.py: 471:Action : Reduce rule [statement -> statement2] with [None] and goto state 83
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement . LexToken(PRINT,'print',1,109)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT . LexToken((,'(',1,114)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( . LexToken(ID,'i',1,115)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( empty . LexToken(ID,'i',1,115)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( term_not . LexToken(ID,'i',1,115)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( term_not ID . LexToken(),')',1,116)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( term_not ID empty . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048ddaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( term_not varcte . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( term_not factor . LexToken(),')',1,116)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( term_not factor n_quad_muldiv . LexToken(),')',1,116)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( term_not factor n_quad_muldiv term2 . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( term . LexToken(),')',1,116)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( term empty . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( term exp2 . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( exp . LexToken(),')',1,116)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( exp empty . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( exp exp02 . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( exp0 . LexToken(),')',1,116)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 153
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( exp0 empty . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 151
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( exp0 expression2 . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 167
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( expression . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [n_output_quad -> expression] with [None] and goto state 166
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( n_output_quad . LexToken(),')',1,116)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 188
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 48
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( n_output_quad empty . LexToken(),')',1,116)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 186
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( n_output_quad output1 . LexToken(),')',1,116)
   yacc.py: 445:Action : Shift and goto state 206
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 430:Defaulted state 206: Reduce using 46
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement PRINT ( n_output_quad output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( n_output_quad output1 )] with ['print','(',None,None,')'] and goto state 98
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 430:Defaulted state 98: Reduce using 66
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement statement1 . LexToken(;,';',1,117)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement statement1 ; . LexToken(},'}',1,119)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 83
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement statement . LexToken(},'}',1,119)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 85
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 430:Defaulted state 85: Reduce using 23
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement statement empty . LexToken(},'}',1,119)
   yacc.py: 471:Action : Reduce rule [proc4 -> empty] with [None] and goto state 117
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 430:Defaulted state 117: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement statement proc4 . LexToken(},'}',1,119)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 117
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 430:Defaulted state 117: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement statement proc4 . LexToken(},'}',1,119)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 117
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 430:Defaulted state 117: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter statement proc4 . LexToken(},'}',1,119)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 80
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 430:Defaulted state 80: Reduce using 20
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var n_quad_counter proc4 . LexToken(},'}',1,119)
   yacc.py: 471:Action : Reduce rule [proc3 -> n_quad_counter proc4] with [None,None] and goto state 99
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 430:Defaulted state 99: Reduce using 19
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { var proc3 . LexToken(},'}',1,119)
   yacc.py: 471:Action : Reduce rule [proc3 -> var proc3] with ['int i',None] and goto state 63
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { proc3 . LexToken(},'}',1,119)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 proc1 ) { proc3 } . LexToken(INT,'int',1,122)
   yacc.py: 471:Action : Reduce rule [procA -> proc1 ) { proc3 }] with [None,')','{',None,'}'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var VOID proca2 procA . LexToken(INT,'int',1,122)
   yacc.py: 471:Action : Reduce rule [proc -> VOID proca2 procA] with ['void',None,None] and goto state 15
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 15
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc . LexToken(INT,'int',1,122)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc INT . LexToken(ID,'dos',1,126)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 35
   yacc.py: 506:Result : <str @ 0x7f4a032b8f30> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc datatype . LexToken(ID,'dos',1,126)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc datatype ID . LexToken((,'(',1,129)
   yacc.py: 445:Action : Shift and goto state 52
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc datatype ID ( . LexToken(INT,'int',1,130)
   yacc.py: 471:Action : Reduce rule [proca1 -> datatype ID (] with ['int','dos','('] and goto state 12
   yacc.py: 506:Result : <str @ 0x7f4a03174ae0> ('intdos')
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 . LexToken(INT,'int',1,130)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 INT . LexToken(ID,'b',1,134)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 31
   yacc.py: 506:Result : <str @ 0x7f4a03199198> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 datatype . LexToken(ID,'b',1,134)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 datatype ID . LexToken(),')',1,135)
   yacc.py: 471:Action : Reduce rule [n_push_variable -> datatype ID] with ['int','b'] and goto state 30
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 n_push_variable . LexToken(),')',1,135)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 17
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 n_push_variable empty . LexToken(),')',1,135)
   yacc.py: 471:Action : Reduce rule [proc2 -> empty] with [None] and goto state 46
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 430:Defaulted state 46: Reduce using 14
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 n_push_variable proc2 . LexToken(),')',1,135)
   yacc.py: 471:Action : Reduce rule [proc1 -> n_push_variable proc2] with [None,None] and goto state 28
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 . LexToken(),')',1,135)
   yacc.py: 445:Action : Shift and goto state 43
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) . LexToken({,'{',1,136)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { . LexToken(ID,'b',1,140)
   yacc.py: 474:Action : Reduce rule [n_quad_counter -> <empty>] with [] and goto state 64
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter . LexToken(ID,'b',1,140)
   yacc.py: 445:Action : Shift and goto state 92
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter ID . LexToken(ASSIGNATOR,':=',1,142)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['b'] and goto state 82
   yacc.py: 506:Result : <str @ 0x7f4a048c65d0> ('b')
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 . LexToken(ASSIGNATOR,':=',1,142)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR . LexToken(ID,'b',1,145)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 169
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 169
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign . LexToken(ID,'b',1,145)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign empty . LexToken(ID,'b',1,145)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(ID,'b',1,145)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not ID . LexToken(*,'*',1,146)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not ID empty . LexToken(*,'*',1,146)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['b',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048c65d0> ('b')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(*,'*',1,146)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['b'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(*,'*',1,146)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(*,'*',1,146)
   yacc.py: 445:Action : Shift and goto state 196
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv * . LexToken(ID,'i',1,147)
   yacc.py: 471:Action : Reduce rule [muldiv -> *] with ['*'] and goto state 199
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 199
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv . LexToken(ID,'i',1,147)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv ID . LexToken(+,'+',1,149)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv ID empty . LexToken(+,'+',1,149)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048ddaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv varcte . LexToken(+,'+',1,149)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 215
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 215
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor . LexToken(+,'+',1,149)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 226
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 226
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv . LexToken(+,'+',1,149)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv n_quad_not . LexToken(+,'+',1,149)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 232
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 232
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv term2 . LexToken(+,'+',1,149)
   yacc.py: 471:Action : Reduce rule [term2 -> muldiv factor n_quad_muldiv term2] with [None,None,None,None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(+,'+',1,149)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term . LexToken(+,'+',1,149)
   yacc.py: 445:Action : Shift and goto state 145
   yacc.py: 410:
   yacc.py: 411:State  : 145
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term + . LexToken(ID,'j',1,151)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 147
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub . LexToken(ID,'j',1,151)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub empty . LexToken(ID,'j',1,151)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term_not . LexToken(ID,'j',1,151)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term_not ID . LexToken(;,';',1,152)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term_not ID empty . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['j',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048c68a0> ('j')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term_not varcte . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['j'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor . LexToken(;,';',1,152)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv . LexToken(;,';',1,152)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv term2 . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term . LexToken(;,';',1,152)
   yacc.py: 474:Action : Reduce rule [n_quad_addsub -> <empty>] with [] and goto state 201
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub . LexToken(;,';',1,152)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub empty . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 217
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 217
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub exp2 . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term n_quad_addsub exp2] with [None,None,None,None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,152)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,152)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 153
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 151
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 189
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 30
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['b',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter assignment . LexToken(;,';',1,152)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement1 . LexToken(;,';',1,152)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement1 ; . LexToken(RETURN,'return',1,156)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 83
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement . LexToken(RETURN,'return',1,156)
   yacc.py: 445:Action : Shift and goto state 74
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN . LexToken(ID,'b',1,163)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN empty . LexToken(ID,'b',1,163)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not . LexToken(ID,'b',1,163)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not ID . LexToken(*,'*',1,164)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not ID empty . LexToken(*,'*',1,164)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['b',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048c65d0> ('b')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not varcte . LexToken(*,'*',1,164)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['b'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor . LexToken(*,'*',1,164)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor n_quad_muldiv . LexToken(*,'*',1,164)
   yacc.py: 445:Action : Shift and goto state 196
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor n_quad_muldiv * . LexToken(CTE_INT,'2',1,165)
   yacc.py: 471:Action : Reduce rule [muldiv -> *] with ['*'] and goto state 199
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 199
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor n_quad_muldiv muldiv . LexToken(CTE_INT,'2',1,165)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor n_quad_muldiv muldiv CTE_INT . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['2'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor n_quad_muldiv muldiv varcte1 . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor n_quad_muldiv muldiv varcte . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 215
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 215
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor n_quad_muldiv muldiv factor . LexToken(;,';',1,166)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 226
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 226
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor n_quad_muldiv muldiv factor n_quad_muldiv . LexToken(;,';',1,166)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor n_quad_muldiv muldiv factor n_quad_muldiv n_quad_not . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 232
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 232
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor n_quad_muldiv muldiv factor n_quad_muldiv term2 . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [term2 -> muldiv factor n_quad_muldiv term2] with [None,None,None,None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term_not factor n_quad_muldiv term2 . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term . LexToken(;,';',1,166)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term empty . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN term exp2 . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN exp . LexToken(;,';',1,166)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN exp empty . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN exp exp02 . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN exp0 . LexToken(;,';',1,166)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 153
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN exp0 empty . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 151
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN exp0 expression2 . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 58
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement RETURN expression . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [return -> RETURN expression] with ['return',None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 430:Defaulted state 86: Reduce using 69
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement return . LexToken(;,';',1,166)
   yacc.py: 471:Action : Reduce rule [statement1 -> return] with [None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement statement1 . LexToken(;,';',1,166)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement statement1 ; . LexToken(},'}',1,168)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 83
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement statement . LexToken(},'}',1,168)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 85
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 430:Defaulted state 85: Reduce using 23
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement statement empty . LexToken(},'}',1,168)
   yacc.py: 471:Action : Reduce rule [proc4 -> empty] with [None] and goto state 117
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 430:Defaulted state 117: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement statement proc4 . LexToken(},'}',1,168)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 117
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 430:Defaulted state 117: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter statement proc4 . LexToken(},'}',1,168)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 80
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 430:Defaulted state 80: Reduce using 20
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { n_quad_counter proc4 . LexToken(},'}',1,168)
   yacc.py: 471:Action : Reduce rule [proc3 -> n_quad_counter proc4] with [None,None] and goto state 63
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { proc3 . LexToken(},'}',1,168)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 proc1 ) { proc3 } . LexToken(MAIN,'main',1,171)
   yacc.py: 471:Action : Reduce rule [procA -> proc1 ) { proc3 }] with [None,')','{',None,'}'] and goto state 32
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 procA . LexToken(MAIN,'main',1,171)
   yacc.py: 474:Action : Reduce rule [n_check_has_return -> <empty>] with [] and goto state 48
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proca1 procA n_check_has_return . LexToken(MAIN,'main',1,171)
   yacc.py: 471:Action : Reduce rule [proc -> proca1 procA n_check_has_return] with ['intdos',None,None] and goto state 15
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 15
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc . LexToken(MAIN,'main',1,171)
   yacc.py: 445:Action : Shift and goto state 24
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 430:Defaulted state 24: Reduce using 135
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN . None
   yacc.py: 474:Action : Reduce rule [n_clear_scope -> <empty>] with [] and goto state 39
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 430:Defaulted state 39: Reduce using 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope . None
   yacc.py: 474:Action : Reduce rule [n_main_quad2 -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 . LexToken({,'{',1,176)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { . LexToken(ID,'i',1,180)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 72
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { empty . LexToken(ID,'i',1,180)
   yacc.py: 471:Action : Reduce rule [vars_aux -> empty] with [None] and goto state 70
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 70
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux . LexToken(ID,'i',1,180)
   yacc.py: 445:Action : Shift and goto state 92
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux ID . LexToken(ASSIGNATOR,':=',1,182)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['i'] and goto state 82
   yacc.py: 506:Result : <str @ 0x7f4a048ddaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 . LexToken(ASSIGNATOR,':=',1,182)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR . LexToken(CTE_INT,'2',1,185)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 169
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 169
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign . LexToken(CTE_INT,'2',1,185)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign empty . LexToken(CTE_INT,'2',1,185)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(CTE_INT,'2',1,185)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not CTE_INT . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['2'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not varcte1 . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(;,';',1,186)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(;,';',1,186)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term . LexToken(;,';',1,186)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,186)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,186)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 153
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 151
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 189
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 30
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['i',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment . LexToken(;,';',1,186)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement1 . LexToken(;,';',1,186)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement1 ; . LexToken(ID,'j',1,190)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 102
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement . LexToken(ID,'j',1,190)
   yacc.py: 445:Action : Shift and goto state 92
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement ID . LexToken(ASSIGNATOR,':=',1,192)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['j'] and goto state 82
   yacc.py: 506:Result : <str @ 0x7f4a048c68a0> ('j')
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 . LexToken(ASSIGNATOR,':=',1,192)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR . LexToken(ID,'i',1,195)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 169
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 169
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign . LexToken(ID,'i',1,195)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign empty . LexToken(ID,'i',1,195)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(ID,'i',1,195)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not ID . LexToken(*,'*',1,197)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not ID empty . LexToken(*,'*',1,197)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048ddaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(*,'*',1,197)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(*,'*',1,197)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(*,'*',1,197)
   yacc.py: 445:Action : Shift and goto state 196
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv * . LexToken(CTE_INT,'2',1,199)
   yacc.py: 471:Action : Reduce rule [muldiv -> *] with ['*'] and goto state 199
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 199
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv . LexToken(CTE_INT,'2',1,199)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv CTE_INT . LexToken(-,'-',1,201)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['2'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv varcte1 . LexToken(-,'-',1,201)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv varcte . LexToken(-,'-',1,201)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 215
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 215
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor . LexToken(-,'-',1,201)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 226
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 226
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv . LexToken(-,'-',1,201)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv n_quad_not . LexToken(-,'-',1,201)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 232
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 232
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv term2 . LexToken(-,'-',1,201)
   yacc.py: 471:Action : Reduce rule [term2 -> muldiv factor n_quad_muldiv term2] with [None,None,None,None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(-,'-',1,201)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term . LexToken(-,'-',1,201)
   yacc.py: 445:Action : Shift and goto state 146
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term - . LexToken(CTE_INT,'1',1,203)
   yacc.py: 471:Action : Reduce rule [addsub -> -] with ['-'] and goto state 147
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub . LexToken(CTE_INT,'1',1,203)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub empty . LexToken(CTE_INT,'1',1,203)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not . LexToken(CTE_INT,'1',1,203)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not CTE_INT . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['1'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not varcte1 . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not varcte . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor . LexToken(;,';',1,204)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv . LexToken(;,';',1,204)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv term2 . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term . LexToken(;,';',1,204)
   yacc.py: 474:Action : Reduce rule [n_quad_addsub -> <empty>] with [] and goto state 201
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub . LexToken(;,';',1,204)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub empty . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 217
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 217
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub exp2 . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term n_quad_addsub exp2] with [None,None,None,None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,204)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,204)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 153
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 151
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 189
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 30
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['j',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement assignment . LexToken(;,';',1,204)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement1 . LexToken(;,';',1,204)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement1 ; . LexToken(ID,'uno',1,208)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 102
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement . LexToken(ID,'uno',1,208)
   yacc.py: 445:Action : Shift and goto state 92
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement ID . LexToken((,'(',1,211)
   yacc.py: 445:Action : Shift and goto state 124
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement ID ( . LexToken(ID,'j',1,212)
   yacc.py: 471:Action : Reduce rule [n_era_size -> ID (] with ['uno','('] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size . LexToken(ID,'j',1,212)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 123
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size empty . LexToken(ID,'j',1,212)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size term_not . LexToken(ID,'j',1,212)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size term_not ID . LexToken(),')',1,213)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size term_not ID empty . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['j',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048c68a0> ('j')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size term_not varcte . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['j'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size term_not factor . LexToken(),')',1,213)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size term_not factor n_quad_muldiv . LexToken(),')',1,213)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size term_not factor n_quad_muldiv term2 . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size term . LexToken(),')',1,213)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size term empty . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size term exp2 . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size exp . LexToken(),')',1,213)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size exp empty . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size exp exp02 . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size exp0 . LexToken(),')',1,213)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 153
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size exp0 empty . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 151
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size exp0 expression2 . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 121
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 121
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size expression . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [n_verify_argument -> expression] with [None] and goto state 122
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size n_verify_argument . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [function_call2 -> n_verify_argument] with [None] and goto state 119
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 430:Defaulted state 119: Reduce using 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size function_call2 . LexToken(),')',1,213)
   yacc.py: 471:Action : Reduce rule [function_call1 -> function_call2] with [None] and goto state 120
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size function_call1 . LexToken(),')',1,213)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement n_era_size function_call1 ) . LexToken(;,';',1,214)
   yacc.py: 471:Action : Reduce rule [function_call -> n_era_size function_call1 )] with [None,None,')'] and goto state 77
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 430:Defaulted state 77: Reduce using 72
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement function_call . LexToken(;,';',1,214)
   yacc.py: 471:Action : Reduce rule [statement1 -> function_call] with [None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement1 . LexToken(;,';',1,214)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement1 ; . LexToken(PRINT,'print',1,218)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 102
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement . LexToken(PRINT,'print',1,218)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT . LexToken((,'(',1,223)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( . LexToken(ID,'i',1,224)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( empty . LexToken(ID,'i',1,224)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term_not . LexToken(ID,'i',1,224)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term_not ID . LexToken(+,'+',1,226)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term_not ID empty . LexToken(+,'+',1,226)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048ddaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term_not varcte . LexToken(+,'+',1,226)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term_not factor . LexToken(+,'+',1,226)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term_not factor n_quad_muldiv . LexToken(+,'+',1,226)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term_not factor n_quad_muldiv n_quad_not . LexToken(+,'+',1,226)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term_not factor n_quad_muldiv term2 . LexToken(+,'+',1,226)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term . LexToken(+,'+',1,226)
   yacc.py: 445:Action : Shift and goto state 145
   yacc.py: 410:
   yacc.py: 411:State  : 145
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term + . LexToken(ID,'dos',1,228)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 147
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub . LexToken(ID,'dos',1,228)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub empty . LexToken(ID,'dos',1,228)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not . LexToken(ID,'dos',1,228)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not ID . LexToken((,'(',1,231)
   yacc.py: 445:Action : Shift and goto state 124
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not ID ( . LexToken(ID,'i',1,232)
   yacc.py: 471:Action : Reduce rule [n_era_size -> ID (] with ['dos','('] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size . LexToken(ID,'i',1,232)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 123
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size empty . LexToken(ID,'i',1,232)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term_not . LexToken(ID,'i',1,232)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term_not ID . LexToken(+,'+',1,234)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term_not ID empty . LexToken(+,'+',1,234)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048ddaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term_not varcte . LexToken(+,'+',1,234)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term_not factor . LexToken(+,'+',1,234)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term_not factor n_quad_muldiv . LexToken(+,'+',1,234)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term_not factor n_quad_muldiv n_quad_not . LexToken(+,'+',1,234)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term_not factor n_quad_muldiv term2 . LexToken(+,'+',1,234)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term . LexToken(+,'+',1,234)
   yacc.py: 445:Action : Shift and goto state 145
   yacc.py: 410:
   yacc.py: 411:State  : 145
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term + . LexToken(ID,'j',1,236)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 147
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub . LexToken(ID,'j',1,236)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub empty . LexToken(ID,'j',1,236)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term_not . LexToken(ID,'j',1,236)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term_not ID . LexToken(),')',1,237)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 178
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term_not ID empty . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['j',None] and goto state 132
   yacc.py: 506:Result : <str @ 0x7f4a048c68a0> ('j')
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term_not varcte . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['j'] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term_not factor . LexToken(),')',1,237)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term_not factor n_quad_muldiv . LexToken(),')',1,237)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term_not factor n_quad_muldiv term2 . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term . LexToken(),')',1,237)
   yacc.py: 474:Action : Reduce rule [n_quad_addsub -> <empty>] with [] and goto state 201
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term n_quad_addsub . LexToken(),')',1,237)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term n_quad_addsub empty . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 217
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 217
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term addsub term n_quad_addsub exp2 . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term n_quad_addsub exp2] with [None,None,None,None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size term exp2 . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size exp . LexToken(),')',1,237)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size exp empty . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size exp exp02 . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size exp0 . LexToken(),')',1,237)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 153
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size exp0 empty . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 151
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size exp0 expression2 . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 121
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 121
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size expression . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [n_verify_argument -> expression] with [None] and goto state 122
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size n_verify_argument . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [function_call2 -> n_verify_argument] with [None] and goto state 119
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 430:Defaulted state 119: Reduce using 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size function_call2 . LexToken(),')',1,237)
   yacc.py: 471:Action : Reduce rule [function_call1 -> function_call2] with [None] and goto state 120
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size function_call1 . LexToken(),')',1,237)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not n_era_size function_call1 ) . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [function_call -> n_era_size function_call1 )] with [None,None,')'] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not function_call . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [varcte1 -> function_call] with [None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not varcte1 . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not varcte . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not factor . LexToken(),')',1,238)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not factor n_quad_muldiv . LexToken(),')',1,238)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 197
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 195
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term_not factor n_quad_muldiv term2 . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term . LexToken(),')',1,238)
   yacc.py: 474:Action : Reduce rule [n_quad_addsub -> <empty>] with [] and goto state 201
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term n_quad_addsub . LexToken(),')',1,238)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 148
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term n_quad_addsub empty . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 217
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 217
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term addsub term n_quad_addsub exp2 . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term n_quad_addsub exp2] with [None,None,None,None] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( term exp2 . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( exp . LexToken(),')',1,238)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( exp empty . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( exp exp02 . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( exp0 . LexToken(),')',1,238)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 153
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( exp0 empty . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 151
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( exp0 expression2 . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 167
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( expression . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [n_output_quad -> expression] with [None] and goto state 166
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( n_output_quad . LexToken(),')',1,238)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 188
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 48
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( n_output_quad empty . LexToken(),')',1,238)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 186
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( n_output_quad output1 . LexToken(),')',1,238)
   yacc.py: 445:Action : Shift and goto state 206
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 430:Defaulted state 206: Reduce using 46
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement PRINT ( n_output_quad output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( n_output_quad output1 )] with ['print','(',None,None,')'] and goto state 98
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 430:Defaulted state 98: Reduce using 66
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement1 . LexToken(;,';',1,239)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement1 ; . LexToken(},'}',1,241)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 102
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement . LexToken(},'}',1,241)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 103
   yacc.py: 548:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 430:Defaulted state 103: Reduce using 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement empty . LexToken(},'}',1,241)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 430:Defaulted state 129: Reduce using 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement_aux . LexToken(},'}',1,241)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 430:Defaulted state 129: Reduce using 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement_aux . LexToken(},'}',1,241)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 430:Defaulted state 129: Reduce using 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement_aux . LexToken(},'}',1,241)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 430:Defaulted state 129: Reduce using 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement_aux . LexToken(},'}',1,241)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement_aux . LexToken(},'}',1,241)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 430:Defaulted state 128: Reduce using 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement_aux } . None
   yacc.py: 471:Action : Reduce rule [main -> MAIN n_clear_scope n_main_quad2 { vars_aux statement_aux }] with ['main',None,None,'{',None,None,'}'] and goto state 14
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 430:Defaulted state 14: Reduce using 6
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc main . None
   yacc.py: 471:Action : Reduce rule [program2 -> main] with [None] and goto state 34
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 34
   yacc.py: 430:Defaulted state 34: Reduce using 5
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc proc program2 . None
   yacc.py: 471:Action : Reduce rule [program2 -> proc program2] with [None,None] and goto state 34
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 34
   yacc.py: 430:Defaulted state 34: Reduce using 5
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var proc program2 . None
   yacc.py: 471:Action : Reduce rule [program2 -> proc program2] with [None,None] and goto state 11
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 430:Defaulted state 11: Reduce using 4
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var program2 . None
   yacc.py: 471:Action : Reduce rule [program1 -> program2] with [None] and goto state 33
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 430:Defaulted state 33: Reduce using 3
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var program1 . None
   yacc.py: 471:Action : Reduce rule [program1 -> var program1] with ['int i j',None] and goto state 10
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 430:Defaulted state 10: Reduce using 1
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad program1 . None
   yacc.py: 471:Action : Reduce rule [program -> PROGRAM ID ; n_main_quad program1] with ['program','aPlusB',';',None,None] and goto state 1
   yacc.py: 506:Result : <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 435:Stack  : program . $end
   yacc.py: 571:Done   : Returning <NoneType @ 0x55b85a6fd560> (None)
   yacc.py: 572:PLY: PARSE DEBUG END
