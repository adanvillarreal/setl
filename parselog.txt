   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 435:Stack  : PROGRAM . LexToken(ID,'aPlusB',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : PROGRAM ID . LexToken(;,';',1,14)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 435:Stack  : PROGRAM ID ; . LexToken(SET,'set',1,17)
   yacc.py: 474:Action : Reduce rule [n_main_quad -> <empty>] with [] and goto state 5
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad . LexToken(SET,'set',1,17)
   yacc.py: 445:Action : Shift and goto state 9
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad SET . LexToken(<,'<',1,20)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad SET < . LexToken(INT,'int',1,21)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad SET < INT . LexToken(>,'>',1,24)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7f3084645260> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad SET < datatype . LexToken(>,'>',1,24)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad SET < datatype > . LexToken(ID,'primes',1,26)
   yacc.py: 471:Action : Reduce rule [set_definition -> SET < datatype >] with ['set','<','int','>'] and goto state 19
   yacc.py: 506:Result : <str @ 0x7f30844a6120> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad set_definition . LexToken(ID,'primes',1,26)
   yacc.py: 471:Action : Reduce rule [datatype -> set_definition] with ['set<int>'] and goto state 20
   yacc.py: 506:Result : <str @ 0x7f30844a6120> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype . LexToken(ID,'primes',1,26)
   yacc.py: 445:Action : Shift and goto state 38
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype ID . LexToken(;,';',1,32)
   yacc.py: 445:Action : Shift and goto state 53
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype ID ; . LexToken(MAP,'map',1,34)
   yacc.py: 471:Action : Reduce rule [var1 -> ID ;] with ['primes',';'] and goto state 37
   yacc.py: 506:Result : <str @ 0x7f30844a6150> ('primes')
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad datatype var1 . LexToken(MAP,'map',1,34)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['set<int>','primes'] and goto state 13
   yacc.py: 506:Result : <str @ 0x7f3084518110> ('set<int> primes')
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var . LexToken(MAP,'map',1,34)
   yacc.py: 445:Action : Shift and goto state 18
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var MAP . LexToken(<,'<',1,37)
   yacc.py: 445:Action : Shift and goto state 36
   yacc.py: 410:
   yacc.py: 411:State  : 36
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var MAP < . LexToken(INT,'int',1,38)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var MAP < INT . LexToken(,,',',1,41)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 50
   yacc.py: 506:Result : <str @ 0x7f3084645260> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var MAP < datatype . LexToken(,,',',1,41)
   yacc.py: 445:Action : Shift and goto state 58
   yacc.py: 410:
   yacc.py: 411:State  : 58
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var MAP < datatype , . LexToken(BOOL,'bool',1,43)
   yacc.py: 445:Action : Shift and goto state 23
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var MAP < datatype , BOOL . LexToken(>,'>',1,47)
   yacc.py: 471:Action : Reduce rule [datatype -> BOOL] with ['bool'] and goto state 67
   yacc.py: 506:Result : <str @ 0x7f30844a61b0> ('bool')
   yacc.py: 410:
   yacc.py: 411:State  : 67
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var MAP < datatype , datatype . LexToken(>,'>',1,47)
   yacc.py: 445:Action : Shift and goto state 98
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var MAP < datatype , datatype > . LexToken(ID,'M',1,49)
   yacc.py: 471:Action : Reduce rule [map_definition -> MAP < datatype , datatype >] with ['map','<','int',',','bool','>'] and goto state 7
   yacc.py: 506:Result : <str @ 0x7f3084518148> ('map<int,bool>')
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var map_definition . LexToken(ID,'M',1,49)
   yacc.py: 471:Action : Reduce rule [datatype -> map_definition] with ['map<int,bool>'] and goto state 20
   yacc.py: 506:Result : <str @ 0x7f3084518148> ('map<int,bool>')
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var datatype . LexToken(ID,'M',1,49)
   yacc.py: 445:Action : Shift and goto state 38
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var datatype ID . LexToken(;,';',1,50)
   yacc.py: 445:Action : Shift and goto state 53
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var datatype ID ; . LexToken(SET,'set',1,52)
   yacc.py: 471:Action : Reduce rule [var1 -> ID ;] with ['M',';'] and goto state 37
   yacc.py: 506:Result : <str @ 0x7f3085c180f8> ('M')
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var datatype var1 . LexToken(SET,'set',1,52)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['map<int,bool>','M'] and goto state 13
   yacc.py: 506:Result : <str @ 0x7f30844a71f0> ('map<int,bool> M')
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var . LexToken(SET,'set',1,52)
   yacc.py: 445:Action : Shift and goto state 9
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var SET . LexToken(<,'<',1,55)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var SET < . LexToken(INT,'int',1,56)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var SET < INT . LexToken(>,'>',1,59)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7f3084645260> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var SET < datatype . LexToken(>,'>',1,59)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var SET < datatype > . LexToken(ID,'union',1,61)
   yacc.py: 471:Action : Reduce rule [set_definition -> SET < datatype >] with ['set','<','int','>'] and goto state 19
   yacc.py: 506:Result : <str @ 0x7f30844a6210> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var set_definition . LexToken(ID,'union',1,61)
   yacc.py: 471:Action : Reduce rule [datatype -> set_definition] with ['set<int>'] and goto state 20
   yacc.py: 506:Result : <str @ 0x7f30844a6210> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var datatype . LexToken(ID,'union',1,61)
   yacc.py: 445:Action : Shift and goto state 38
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var datatype ID . LexToken(,,',',1,66)
   yacc.py: 445:Action : Shift and goto state 52
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var datatype ID , . LexToken(ID,'intersection',1,68)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var datatype ID , ID . LexToken(,,',',1,80)
   yacc.py: 445:Action : Shift and goto state 52
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var datatype ID , ID , . LexToken(ID,'dif',1,82)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var datatype ID , ID , ID . LexToken(;,';',1,85)
   yacc.py: 445:Action : Shift and goto state 53
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var datatype ID , ID , ID ; . LexToken(SET,'set',1,88)
   yacc.py: 471:Action : Reduce rule [var1 -> ID ;] with ['dif',';'] and goto state 59
   yacc.py: 506:Result : <str @ 0x7f30846453a0> ('dif')
   yacc.py: 410:
   yacc.py: 411:State  : 59
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var datatype ID , ID , var1 . LexToken(SET,'set',1,88)
   yacc.py: 471:Action : Reduce rule [var1 -> ID , var1] with ['intersection',',','dif'] and goto state 59
   yacc.py: 506:Result : <str @ 0x7f30844a7298> ('intersection dif')
   yacc.py: 410:
   yacc.py: 411:State  : 59
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var datatype ID , var1 . LexToken(SET,'set',1,88)
   yacc.py: 471:Action : Reduce rule [var1 -> ID , var1] with ['union',',',<str @ 0x7f30844a7298>] and goto state 37
   yacc.py: 506:Result : <str @ 0x7f30844c38f0> ('union intersection dif')
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var datatype var1 . LexToken(SET,'set',1,88)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['set<int>',<str @ 0x7f30844c38f0>] and goto state 13
   yacc.py: 506:Result : <str @ 0x7f30844aac90> ('set<int> union intersection dif')
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var . LexToken(SET,'set',1,88)
   yacc.py: 445:Action : Shift and goto state 9
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var SET . LexToken(<,'<',1,91)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var SET < . LexToken(INT,'int',1,92)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var SET < INT . LexToken(>,'>',1,95)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7f30846453f0> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var SET < datatype . LexToken(>,'>',1,95)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var SET < datatype > . LexToken(ID,'fib',1,97)
   yacc.py: 471:Action : Reduce rule [set_definition -> SET < datatype >] with ['set','<','int','>'] and goto state 19
   yacc.py: 506:Result : <str @ 0x7f30844a62a0> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var set_definition . LexToken(ID,'fib',1,97)
   yacc.py: 471:Action : Reduce rule [datatype -> set_definition] with ['set<int>'] and goto state 20
   yacc.py: 506:Result : <str @ 0x7f30844a62a0> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var datatype . LexToken(ID,'fib',1,97)
   yacc.py: 445:Action : Shift and goto state 38
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var datatype ID . LexToken(;,';',1,100)
   yacc.py: 445:Action : Shift and goto state 53
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var datatype ID ; . LexToken(VOID,'void',1,103)
   yacc.py: 471:Action : Reduce rule [var1 -> ID ;] with ['fib',';'] and goto state 37
   yacc.py: 506:Result : <str @ 0x7f3084645418> ('fib')
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var datatype var1 . LexToken(VOID,'void',1,103)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['set<int>','fib'] and goto state 13
   yacc.py: 506:Result : <str @ 0x7f30844a72d0> ('set<int> fib')
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var . LexToken(VOID,'void',1,103)
   yacc.py: 445:Action : Shift and goto state 6
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID . LexToken(ID,'fibonacci',1,108)
   yacc.py: 445:Action : Shift and goto state 25
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID ID . LexToken((,'(',1,117)
   yacc.py: 445:Action : Shift and goto state 40
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID ID ( . LexToken(INT,'int',1,118)
   yacc.py: 471:Action : Reduce rule [proca2 -> ID (] with ['fibonacci','('] and goto state 26
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 . LexToken(INT,'int',1,118)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 INT . LexToken(ID,'n',1,122)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 31
   yacc.py: 506:Result : <str @ 0x7f3084645260> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 datatype . LexToken(ID,'n',1,122)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 datatype ID . LexToken(),')',1,123)
   yacc.py: 471:Action : Reduce rule [n_push_variable -> datatype ID] with ['int','n'] and goto state 30
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 n_push_variable . LexToken(),')',1,123)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 17
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 n_push_variable empty . LexToken(),')',1,123)
   yacc.py: 471:Action : Reduce rule [proc2 -> empty] with [None] and goto state 46
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 430:Defaulted state 46: Reduce using 14
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 n_push_variable proc2 . LexToken(),')',1,123)
   yacc.py: 471:Action : Reduce rule [proc1 -> n_push_variable proc2] with [None,None] and goto state 28
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 . LexToken(),')',1,123)
   yacc.py: 445:Action : Shift and goto state 43
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) . LexToken({,'{',1,124)
   yacc.py: 445:Action : Shift and goto state 56
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { . LexToken(INT,'int',1,128)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { INT . LexToken(ID,'first',1,132)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 65
   yacc.py: 506:Result : <str @ 0x7f3084645260> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { datatype . LexToken(ID,'first',1,132)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { datatype ID . LexToken(,,',',1,137)
   yacc.py: 445:Action : Shift and goto state 52
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { datatype ID , . LexToken(ID,'second',1,139)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { datatype ID , ID . LexToken(,,',',1,145)
   yacc.py: 445:Action : Shift and goto state 52
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { datatype ID , ID , . LexToken(ID,'aux',1,147)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { datatype ID , ID , ID . LexToken(;,';',1,150)
   yacc.py: 445:Action : Shift and goto state 53
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { datatype ID , ID , ID ; . LexToken(ID,'first',1,154)
   yacc.py: 471:Action : Reduce rule [var1 -> ID ;] with ['aux',';'] and goto state 59
   yacc.py: 506:Result : <str @ 0x7f3084645670> ('aux')
   yacc.py: 410:
   yacc.py: 411:State  : 59
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { datatype ID , ID , var1 . LexToken(ID,'first',1,154)
   yacc.py: 471:Action : Reduce rule [var1 -> ID , var1] with ['second',',','aux'] and goto state 59
   yacc.py: 506:Result : <str @ 0x7f30844a63c0> ('second aux')
   yacc.py: 410:
   yacc.py: 411:State  : 59
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { datatype ID , var1 . LexToken(ID,'first',1,154)
   yacc.py: 471:Action : Reduce rule [var1 -> ID , var1] with ['first',',','second aux'] and goto state 37
   yacc.py: 506:Result : <str @ 0x7f30844a74c8> ('first second aux')
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { datatype var1 . LexToken(ID,'first',1,154)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int',<str @ 0x7f30844a74c8>] and goto state 64
   yacc.py: 506:Result : <str @ 0x7f30844c39f0> ('int first second aux')
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var . LexToken(ID,'first',1,154)
   yacc.py: 474:Action : Reduce rule [n_quad_counter -> <empty>] with [] and goto state 63
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter . LexToken(ID,'first',1,154)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter ID . LexToken(ASSIGNATOR,':=',1,160)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['first'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f30844a6420> ('first')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 . LexToken(ASSIGNATOR,':=',1,160)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR . LexToken(CTE_INT,'0',1,163)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign . LexToken(CTE_INT,'0',1,163)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign empty . LexToken(CTE_INT,'0',1,163)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(CTE_INT,'0',1,163)
   yacc.py: 445:Action : Shift and goto state 136
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not CTE_INT . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['0'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not varcte1 . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(;,';',1,164)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(;,';',1,164)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term . LexToken(;,';',1,164)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,164)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,164)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['first',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter assignment . LexToken(;,';',1,164)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement1 . LexToken(;,';',1,164)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement1 ; . LexToken(ID,'second',1,168)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 82
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement . LexToken(ID,'second',1,168)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement ID . LexToken(ASSIGNATOR,':=',1,175)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['second'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f30844a62a0> ('second')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 . LexToken(ASSIGNATOR,':=',1,175)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR . LexToken(CTE_INT,'1',1,178)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign . LexToken(CTE_INT,'1',1,178)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign empty . LexToken(CTE_INT,'1',1,178)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(CTE_INT,'1',1,178)
   yacc.py: 445:Action : Shift and goto state 136
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign term_not CTE_INT . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['1'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign term_not varcte1 . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(;,';',1,179)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(;,';',1,179)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign term . LexToken(;,';',1,179)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,179)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,179)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['second',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement assignment . LexToken(;,';',1,179)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement1 . LexToken(;,';',1,179)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement1 ; . LexToken(WHILE,'while',1,184)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 82
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement . LexToken(WHILE,'while',1,184)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 430:Defaulted state 77: Reduce using 38
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE . None
   yacc.py: 474:Action : Reduce rule [n_while_1 -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 . LexToken((,'(',1,189)
   yacc.py: 445:Action : Shift and goto state 163
   yacc.py: 410:
   yacc.py: 411:State  : 163
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( . LexToken(ID,'first',1,190)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( empty . LexToken(ID,'first',1,190)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not . LexToken(ID,'first',1,190)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not ID . LexToken(<,'<',1,196)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not ID empty . LexToken(<,'<',1,196)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['first',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f30844a6480> ('first')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not varcte . LexToken(<,'<',1,196)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['first'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not factor . LexToken(<,'<',1,196)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv . LexToken(<,'<',1,196)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv n_quad_not . LexToken(<,'<',1,196)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv term2 . LexToken(<,'<',1,196)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term . LexToken(<,'<',1,196)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term empty . LexToken(<,'<',1,196)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term exp2 . LexToken(<,'<',1,196)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp . LexToken(<,'<',1,196)
   yacc.py: 445:Action : Shift and goto state 158
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp < . LexToken(ID,'n',1,198)
   yacc.py: 471:Action : Reduce rule [relop -> <] with ['<'] and goto state 153
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop . LexToken(ID,'n',1,198)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop empty . LexToken(ID,'n',1,198)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not . LexToken(ID,'n',1,198)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not ID . LexToken(),')',1,199)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not ID empty . LexToken(),')',1,199)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['n',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8a800> ('n')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not varcte . LexToken(),')',1,199)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['n'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not factor . LexToken(),')',1,199)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv . LexToken(),')',1,199)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,199)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv term2 . LexToken(),')',1,199)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term . LexToken(),')',1,199)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term empty . LexToken(),')',1,199)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term exp2 . LexToken(),')',1,199)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop exp . LexToken(),')',1,199)
   yacc.py: 471:Action : Reduce rule [exp02 -> relop exp] with [None,None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp exp02 . LexToken(),')',1,199)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp0 . LexToken(),')',1,199)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp0 empty . LexToken(),')',1,199)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp0 expression2 . LexToken(),')',1,199)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 183
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression . LexToken(),')',1,199)
   yacc.py: 445:Action : Shift and goto state 205
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 430:Defaulted state 205: Reduce using 39
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) . None
   yacc.py: 474:Action : Reduce rule [n_while_2 -> <empty>] with [] and goto state 217
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 217
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 . LexToken({,'{',1,200)
   yacc.py: 445:Action : Shift and goto state 220
   yacc.py: 410:
   yacc.py: 411:State  : 220
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { . LexToken(ID,'fib',1,206)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . LexToken(.,'.',1,209)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . . LexToken(OP_ARGS,'insert',1,210)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS . LexToken((,'(',1,216)
   yacc.py: 445:Action : Shift and goto state 190
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( . LexToken(ID,'first',1,217)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( empty . LexToken(ID,'first',1,217)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( term_not . LexToken(ID,'first',1,217)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( term_not ID . LexToken(),')',1,222)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( term_not ID empty . LexToken(),')',1,222)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['first',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f30844a62a0> ('first')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( term_not varcte . LexToken(),')',1,222)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['first'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( term_not factor . LexToken(),')',1,222)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( term_not factor n_quad_muldiv . LexToken(),')',1,222)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,222)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( term_not factor n_quad_muldiv term2 . LexToken(),')',1,222)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( term . LexToken(),')',1,222)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( term empty . LexToken(),')',1,222)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( term exp2 . LexToken(),')',1,222)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( exp . LexToken(),')',1,222)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( exp empty . LexToken(),')',1,222)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( exp exp02 . LexToken(),')',1,222)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( exp0 . LexToken(),')',1,222)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( exp0 empty . LexToken(),')',1,222)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( exp0 expression2 . LexToken(),')',1,222)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 209
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 209
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( expression . LexToken(),')',1,222)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . OP_ARGS ( expression ) . LexToken(;,';',1,223)
   yacc.py: 471:Action : Reduce rule [container_operation -> ID . OP_ARGS ( expression )] with ['fib','.','insert','(',None,')'] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 430:Defaulted state 89: Reduce using 65
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { container_operation . LexToken(;,';',1,223)
   yacc.py: 471:Action : Reduce rule [statement1 -> container_operation] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement1 . LexToken(;,';',1,223)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement1 ; . LexToken(ID,'aux',1,229)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement . LexToken(ID,'aux',1,229)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement ID . LexToken(ASSIGNATOR,':=',1,233)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['aux'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f3084645260> ('aux')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 . LexToken(ASSIGNATOR,':=',1,233)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR . LexToken(ID,'second',1,236)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign . LexToken(ID,'second',1,236)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign empty . LexToken(ID,'second',1,236)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(ID,'second',1,236)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not ID . LexToken(+,'+',1,243)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not ID empty . LexToken(+,'+',1,243)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['second',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f30844a62a0> ('second')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(+,'+',1,243)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['second'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(+,'+',1,243)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(+,'+',1,243)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(+,'+',1,243)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(+,'+',1,243)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term . LexToken(+,'+',1,243)
   yacc.py: 445:Action : Shift and goto state 142
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term + . LexToken(ID,'first',1,245)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub . LexToken(ID,'first',1,245)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub empty . LexToken(ID,'first',1,245)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not . LexToken(ID,'first',1,245)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not ID . LexToken(;,';',1,250)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not ID empty . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['first',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f30844a64e0> ('first')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not varcte . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['first'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor . LexToken(;,';',1,250)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv . LexToken(;,';',1,250)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv term2 . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 177
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term . LexToken(;,';',1,250)
   yacc.py: 474:Action : Reduce rule [n_quad_addsub -> <empty>] with [] and goto state 201
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub . LexToken(;,';',1,250)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub empty . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 214
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 214
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub exp2 . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term n_quad_addsub exp2] with [None,None,None,None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,250)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,250)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['aux',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment . LexToken(;,';',1,250)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement1 . LexToken(;,';',1,250)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement1 ; . LexToken(ID,'first',1,256)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement . LexToken(ID,'first',1,256)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement ID . LexToken(ASSIGNATOR,':=',1,262)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['first'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f30844a64e0> ('first')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 . LexToken(ASSIGNATOR,':=',1,262)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR . LexToken(ID,'second',1,265)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign . LexToken(ID,'second',1,265)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign empty . LexToken(ID,'second',1,265)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(ID,'second',1,265)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign term_not ID . LexToken(;,';',1,271)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign term_not ID empty . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['second',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f30844a6450> ('second')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['second'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(;,';',1,271)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(;,';',1,271)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign term . LexToken(;,';',1,271)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,271)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,271)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['first',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement assignment . LexToken(;,';',1,271)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement1 . LexToken(;,';',1,271)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement1 ; . LexToken(ID,'second',1,277)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement . LexToken(ID,'second',1,277)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement ID . LexToken(ASSIGNATOR,':=',1,284)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['second'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f30844a62a0> ('second')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 . LexToken(ASSIGNATOR,':=',1,284)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR . LexToken(ID,'aux',1,287)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign . LexToken(ID,'aux',1,287)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign empty . LexToken(ID,'aux',1,287)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(ID,'aux',1,287)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not ID . LexToken(;,';',1,290)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not ID empty . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['aux',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f30846457d8> ('aux')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['aux'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(;,';',1,290)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(;,';',1,290)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term . LexToken(;,';',1,290)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,290)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,290)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['second',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment . LexToken(;,';',1,290)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement1 . LexToken(;,';',1,290)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement1 ; . LexToken(},'}',1,294)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement . LexToken(},'}',1,294)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 101
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement empty . LexToken(},'}',1,294)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement statement_aux . LexToken(},'}',1,294)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement_aux . LexToken(},'}',1,294)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement_aux . LexToken(},'}',1,294)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement_aux . LexToken(},'}',1,294)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 225
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 225
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement_aux . LexToken(},'}',1,294)
   yacc.py: 445:Action : Shift and goto state 231
   yacc.py: 410:
   yacc.py: 411:State  : 231
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement_aux } . LexToken(},'}',1,297)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 224
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 224
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 block . LexToken(},'}',1,297)
   yacc.py: 474:Action : Reduce rule [n_while_3 -> <empty>] with [] and goto state 230
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 block n_while_3 . LexToken(},'}',1,297)
   yacc.py: 471:Action : Reduce rule [while -> WHILE n_while_1 ( expression ) n_while_2 block n_while_3] with ['while',None,'(',None,')',None,None,None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement while . LexToken(},'}',1,297)
   yacc.py: 471:Action : Reduce rule [statement2 -> while] with [None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement statement2 . LexToken(},'}',1,297)
   yacc.py: 471:Action : Reduce rule [statement -> statement2] with [None] and goto state 82
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement statement . LexToken(},'}',1,297)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 84
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 430:Defaulted state 84: Reduce using 23
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement statement empty . LexToken(},'}',1,297)
   yacc.py: 471:Action : Reduce rule [proc4 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 430:Defaulted state 115: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement statement proc4 . LexToken(},'}',1,297)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 430:Defaulted state 115: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement statement proc4 . LexToken(},'}',1,297)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 430:Defaulted state 115: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter statement proc4 . LexToken(},'}',1,297)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 20
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var n_quad_counter proc4 . LexToken(},'}',1,297)
   yacc.py: 471:Action : Reduce rule [proc3 -> n_quad_counter proc4] with [None,None] and goto state 97
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 19
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { var proc3 . LexToken(},'}',1,297)
   yacc.py: 471:Action : Reduce rule [proc3 -> var proc3] with [<str @ 0x7f30844c39f0>,None] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { proc3 . LexToken(},'}',1,297)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 proc1 ) { proc3 } . LexToken(VOID,'void',1,300)
   yacc.py: 471:Action : Reduce rule [procA -> proc1 ) { proc3 }] with [None,')','{',None,'}'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var VOID proca2 procA . LexToken(VOID,'void',1,300)
   yacc.py: 471:Action : Reduce rule [proc -> VOID proca2 procA] with ['void',None,None] and goto state 15
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 15
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc . LexToken(VOID,'void',1,300)
   yacc.py: 445:Action : Shift and goto state 6
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID . LexToken(ID,'sieve',1,305)
   yacc.py: 445:Action : Shift and goto state 25
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID ID . LexToken((,'(',1,310)
   yacc.py: 445:Action : Shift and goto state 40
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID ID ( . LexToken(INT,'int',1,311)
   yacc.py: 471:Action : Reduce rule [proca2 -> ID (] with ['sieve','('] and goto state 26
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 . LexToken(INT,'int',1,311)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 INT . LexToken(ID,'n',1,315)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 31
   yacc.py: 506:Result : <str @ 0x7f3084645260> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 datatype . LexToken(ID,'n',1,315)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 datatype ID . LexToken(),')',1,316)
   yacc.py: 471:Action : Reduce rule [n_push_variable -> datatype ID] with ['int','n'] and goto state 30
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 n_push_variable . LexToken(),')',1,316)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 17
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 n_push_variable empty . LexToken(),')',1,316)
   yacc.py: 471:Action : Reduce rule [proc2 -> empty] with [None] and goto state 46
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 430:Defaulted state 46: Reduce using 14
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 n_push_variable proc2 . LexToken(),')',1,316)
   yacc.py: 471:Action : Reduce rule [proc1 -> n_push_variable proc2] with [None,None] and goto state 28
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 . LexToken(),')',1,316)
   yacc.py: 445:Action : Shift and goto state 43
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) . LexToken({,'{',1,317)
   yacc.py: 445:Action : Shift and goto state 56
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { . LexToken(INT,'int',1,321)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { INT . LexToken(ID,'i',1,325)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 65
   yacc.py: 506:Result : <str @ 0x7f3084645260> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { datatype . LexToken(ID,'i',1,325)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { datatype ID . LexToken(,,',',1,326)
   yacc.py: 445:Action : Shift and goto state 52
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { datatype ID , . LexToken(ID,'j',1,328)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { datatype ID , ID . LexToken(;,';',1,329)
   yacc.py: 445:Action : Shift and goto state 53
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { datatype ID , ID ; . LexToken(ID,'i',1,333)
   yacc.py: 471:Action : Reduce rule [var1 -> ID ;] with ['j',';'] and goto state 59
   yacc.py: 506:Result : <str @ 0x7f3085c73878> ('j')
   yacc.py: 410:
   yacc.py: 411:State  : 59
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { datatype ID , var1 . LexToken(ID,'i',1,333)
   yacc.py: 471:Action : Reduce rule [var1 -> ID , var1] with ['i',',','j'] and goto state 37
   yacc.py: 506:Result : <str @ 0x7f3084645968> ('i j')
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { datatype var1 . LexToken(ID,'i',1,333)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int','i j'] and goto state 64
   yacc.py: 506:Result : <str @ 0x7f30844a6510> ('int i j')
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var . LexToken(ID,'i',1,333)
   yacc.py: 474:Action : Reduce rule [n_quad_counter -> <empty>] with [] and goto state 63
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter . LexToken(ID,'i',1,333)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter ID . LexToken(ASSIGNATOR,':=',1,335)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['i'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 . LexToken(ASSIGNATOR,':=',1,335)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR . LexToken(CTE_INT,'0',1,338)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign . LexToken(CTE_INT,'0',1,338)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign empty . LexToken(CTE_INT,'0',1,338)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(CTE_INT,'0',1,338)
   yacc.py: 445:Action : Shift and goto state 136
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not CTE_INT . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['0'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not varcte1 . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(;,';',1,339)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(;,';',1,339)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term . LexToken(;,';',1,339)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,339)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,339)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['i',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter assignment . LexToken(;,';',1,339)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement1 . LexToken(;,';',1,339)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement1 ; . LexToken(PRINT,'print',1,344)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 82
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement . LexToken(PRINT,'print',1,344)
   yacc.py: 445:Action : Shift and goto state 78
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT . LexToken((,'(',1,349)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( . LexToken(ID,'M',1,350)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( empty . LexToken(ID,'M',1,350)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not . LexToken(ID,'M',1,350)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID . LexToken([,'[',1,351)
   yacc.py: 445:Action : Shift and goto state 124
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ . LexToken(CTE_INT,'1',1,352)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ empty . LexToken(CTE_INT,'1',1,352)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ term_not . LexToken(CTE_INT,'1',1,352)
   yacc.py: 445:Action : Shift and goto state 136
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ term_not CTE_INT . LexToken(],']',1,353)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['1'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ term_not varcte1 . LexToken(],']',1,353)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ term_not varcte . LexToken(],']',1,353)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ term_not factor . LexToken(],']',1,353)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ term_not factor n_quad_muldiv . LexToken(],']',1,353)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ term_not factor n_quad_muldiv n_quad_not . LexToken(],']',1,353)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ term_not factor n_quad_muldiv term2 . LexToken(],']',1,353)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ term . LexToken(],']',1,353)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ term empty . LexToken(],']',1,353)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ term exp2 . LexToken(],']',1,353)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ exp . LexToken(],']',1,353)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ exp empty . LexToken(],']',1,353)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ exp exp02 . LexToken(],']',1,353)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ exp0 . LexToken(],']',1,353)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ exp0 empty . LexToken(],']',1,353)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ exp0 expression2 . LexToken(],']',1,353)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 172
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 172
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ expression . LexToken(],']',1,353)
   yacc.py: 445:Action : Shift and goto state 192
   yacc.py: 410:
   yacc.py: 411:State  : 192
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not ID [ expression ] . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [map_access -> ID [ expression ]] with ['M','[',None,']'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not map_access . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [varcte1 -> map_access] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not varcte1 . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not varcte . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not factor . LexToken(),')',1,354)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not factor n_quad_muldiv . LexToken(),')',1,354)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term_not factor n_quad_muldiv term2 . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term . LexToken(),')',1,354)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term empty . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( term exp2 . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( exp . LexToken(),')',1,354)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( exp empty . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( exp exp02 . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( exp0 . LexToken(),')',1,354)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( exp0 empty . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( exp0 expression2 . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( expression . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [n_output_quad -> expression] with [None] and goto state 164
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 164
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( n_output_quad . LexToken(),')',1,354)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 186
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 430:Defaulted state 186: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( n_output_quad empty . LexToken(),')',1,354)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 184
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 184
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( n_output_quad output1 . LexToken(),')',1,354)
   yacc.py: 445:Action : Shift and goto state 206
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 430:Defaulted state 206: Reduce using 45
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement PRINT ( n_output_quad output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( n_output_quad output1 )] with ['print','(',None,None,')'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 430:Defaulted state 96: Reduce using 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement1 . LexToken(;,';',1,355)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement1 ; . LexToken(WHILE,'while',1,360)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 82
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement . LexToken(WHILE,'while',1,360)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 430:Defaulted state 77: Reduce using 38
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE . None
   yacc.py: 474:Action : Reduce rule [n_while_1 -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 . LexToken((,'(',1,365)
   yacc.py: 445:Action : Shift and goto state 163
   yacc.py: 410:
   yacc.py: 411:State  : 163
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( . LexToken(ID,'i',1,366)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( empty . LexToken(ID,'i',1,366)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not . LexToken(ID,'i',1,366)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not ID . LexToken(<,'<',1,368)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not ID empty . LexToken(<,'<',1,368)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not varcte . LexToken(<,'<',1,368)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not factor . LexToken(<,'<',1,368)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv . LexToken(<,'<',1,368)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv n_quad_not . LexToken(<,'<',1,368)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv term2 . LexToken(<,'<',1,368)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term . LexToken(<,'<',1,368)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term empty . LexToken(<,'<',1,368)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( term exp2 . LexToken(<,'<',1,368)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp . LexToken(<,'<',1,368)
   yacc.py: 445:Action : Shift and goto state 158
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp < . LexToken(ID,'n',1,370)
   yacc.py: 471:Action : Reduce rule [relop -> <] with ['<'] and goto state 153
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop . LexToken(ID,'n',1,370)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop empty . LexToken(ID,'n',1,370)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not . LexToken(ID,'n',1,370)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not ID . LexToken(),')',1,371)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not ID empty . LexToken(),')',1,371)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['n',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8a800> ('n')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not varcte . LexToken(),')',1,371)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['n'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not factor . LexToken(),')',1,371)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv . LexToken(),')',1,371)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,371)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv term2 . LexToken(),')',1,371)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term . LexToken(),')',1,371)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term empty . LexToken(),')',1,371)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop term exp2 . LexToken(),')',1,371)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp relop exp . LexToken(),')',1,371)
   yacc.py: 471:Action : Reduce rule [exp02 -> relop exp] with [None,None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp exp02 . LexToken(),')',1,371)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp0 . LexToken(),')',1,371)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp0 empty . LexToken(),')',1,371)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( exp0 expression2 . LexToken(),')',1,371)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 183
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression . LexToken(),')',1,371)
   yacc.py: 445:Action : Shift and goto state 205
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 430:Defaulted state 205: Reduce using 39
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) . None
   yacc.py: 474:Action : Reduce rule [n_while_2 -> <empty>] with [] and goto state 217
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 217
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 . LexToken({,'{',1,372)
   yacc.py: 445:Action : Shift and goto state 220
   yacc.py: 410:
   yacc.py: 411:State  : 220
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { . LexToken(ID,'M',1,378)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . LexToken([,'[',1,379)
   yacc.py: 445:Action : Shift and goto state 124
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ . LexToken(ID,'i',1,380)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ empty . LexToken(ID,'i',1,380)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not . LexToken(ID,'i',1,380)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not ID . LexToken(],']',1,381)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not ID empty . LexToken(],']',1,381)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not varcte . LexToken(],']',1,381)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor . LexToken(],']',1,381)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv . LexToken(],']',1,381)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv n_quad_not . LexToken(],']',1,381)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv term2 . LexToken(],']',1,381)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term . LexToken(],']',1,381)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term empty . LexToken(],']',1,381)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term exp2 . LexToken(],']',1,381)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp . LexToken(],']',1,381)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp empty . LexToken(],']',1,381)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp exp02 . LexToken(],']',1,381)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp0 . LexToken(],']',1,381)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp0 empty . LexToken(],']',1,381)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp0 expression2 . LexToken(],']',1,381)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 172
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 172
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ expression . LexToken(],']',1,381)
   yacc.py: 445:Action : Shift and goto state 192
   yacc.py: 410:
   yacc.py: 411:State  : 192
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ expression ] . LexToken(ASSIGNATOR,':=',1,383)
   yacc.py: 471:Action : Reduce rule [map_access -> ID [ expression ]] with ['M','[',None,']'] and goto state 80
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access . LexToken(ASSIGNATOR,':=',1,383)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR . LexToken(CTE_BOOL,'true',1,386)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 166
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign . LexToken(CTE_BOOL,'true',1,386)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign empty . LexToken(CTE_BOOL,'true',1,386)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not . LexToken(CTE_BOOL,'true',1,386)
   yacc.py: 445:Action : Shift and goto state 139
   yacc.py: 410:
   yacc.py: 411:State  : 139
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not CTE_BOOL . LexToken(;,';',1,390)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_BOOL] with ['true'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not varcte1 . LexToken(;,';',1,390)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not varcte . LexToken(;,';',1,390)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not factor . LexToken(;,';',1,390)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(;,';',1,390)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,390)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,390)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term . LexToken(;,';',1,390)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,390)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,390)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 187
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 187
   yacc.py: 430:Defaulted state 187: Reduce using 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,390)
   yacc.py: 471:Action : Reduce rule [map_assignment -> map_access ASSIGNATOR n_quad_assign exp] with [None,':=',None,None] and goto state 94
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 430:Defaulted state 94: Reduce using 68
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { map_assignment . LexToken(;,';',1,390)
   yacc.py: 471:Action : Reduce rule [statement1 -> map_assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement1 . LexToken(;,';',1,390)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement1 ; . LexToken(ID,'i',1,396)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement . LexToken(ID,'i',1,396)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement ID . LexToken(ASSIGNATOR,':=',1,398)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['i'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 . LexToken(ASSIGNATOR,':=',1,398)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR . LexToken(ID,'i',1,401)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign . LexToken(ID,'i',1,401)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign empty . LexToken(ID,'i',1,401)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(ID,'i',1,401)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not ID . LexToken(+,'+',1,403)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not ID empty . LexToken(+,'+',1,403)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(+,'+',1,403)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(+,'+',1,403)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(+,'+',1,403)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(+,'+',1,403)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(+,'+',1,403)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term . LexToken(+,'+',1,403)
   yacc.py: 445:Action : Shift and goto state 142
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term + . LexToken(CTE_INT,'1',1,405)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub . LexToken(CTE_INT,'1',1,405)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub empty . LexToken(CTE_INT,'1',1,405)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not . LexToken(CTE_INT,'1',1,405)
   yacc.py: 445:Action : Shift and goto state 136
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not CTE_INT . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['1'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not varcte1 . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not varcte . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor . LexToken(;,';',1,406)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv . LexToken(;,';',1,406)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv term2 . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 177
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term . LexToken(;,';',1,406)
   yacc.py: 474:Action : Reduce rule [n_quad_addsub -> <empty>] with [] and goto state 201
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub . LexToken(;,';',1,406)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub empty . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 214
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 214
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub exp2 . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term n_quad_addsub exp2] with [None,None,None,None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,406)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,406)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['i',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment . LexToken(;,';',1,406)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement1 . LexToken(;,';',1,406)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement1 ; . LexToken(},'}',1,410)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement . LexToken(},'}',1,410)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 101
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement empty . LexToken(},'}',1,410)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement_aux . LexToken(},'}',1,410)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement_aux . LexToken(},'}',1,410)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 225
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 225
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement_aux . LexToken(},'}',1,410)
   yacc.py: 445:Action : Shift and goto state 231
   yacc.py: 410:
   yacc.py: 411:State  : 231
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 { statement_aux } . LexToken(ID,'i',1,415)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 224
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 224
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 block . LexToken(ID,'i',1,415)
   yacc.py: 474:Action : Reduce rule [n_while_3 -> <empty>] with [] and goto state 230
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement WHILE n_while_1 ( expression ) n_while_2 block n_while_3 . LexToken(ID,'i',1,415)
   yacc.py: 471:Action : Reduce rule [while -> WHILE n_while_1 ( expression ) n_while_2 block n_while_3] with ['while',None,'(',None,')',None,None,None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement while . LexToken(ID,'i',1,415)
   yacc.py: 471:Action : Reduce rule [statement2 -> while] with [None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement2 . LexToken(ID,'i',1,415)
   yacc.py: 471:Action : Reduce rule [statement -> statement2] with [None] and goto state 82
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement . LexToken(ID,'i',1,415)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement ID . LexToken(ASSIGNATOR,':=',1,417)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['i'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 . LexToken(ASSIGNATOR,':=',1,417)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR . LexToken(CTE_INT,'2',1,420)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign . LexToken(CTE_INT,'2',1,420)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign empty . LexToken(CTE_INT,'2',1,420)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(CTE_INT,'2',1,420)
   yacc.py: 445:Action : Shift and goto state 136
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not CTE_INT . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['2'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not varcte1 . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(;,';',1,421)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(;,';',1,421)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign term . LexToken(;,';',1,421)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,421)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,421)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['i',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement assignment . LexToken(;,';',1,421)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement1 . LexToken(;,';',1,421)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement1 ; . LexToken(WHILE,'while',1,426)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 82
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement . LexToken(WHILE,'while',1,426)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 430:Defaulted state 77: Reduce using 38
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE . None
   yacc.py: 474:Action : Reduce rule [n_while_1 -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 . LexToken((,'(',1,431)
   yacc.py: 445:Action : Shift and goto state 163
   yacc.py: 410:
   yacc.py: 411:State  : 163
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( . LexToken(ID,'i',1,432)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( empty . LexToken(ID,'i',1,432)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( term_not . LexToken(ID,'i',1,432)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( term_not ID . LexToken(<,'<',1,434)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( term_not ID empty . LexToken(<,'<',1,434)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( term_not varcte . LexToken(<,'<',1,434)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( term_not factor . LexToken(<,'<',1,434)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv . LexToken(<,'<',1,434)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv n_quad_not . LexToken(<,'<',1,434)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv term2 . LexToken(<,'<',1,434)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( term . LexToken(<,'<',1,434)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( term empty . LexToken(<,'<',1,434)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( term exp2 . LexToken(<,'<',1,434)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp . LexToken(<,'<',1,434)
   yacc.py: 445:Action : Shift and goto state 158
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp < . LexToken(ID,'n',1,436)
   yacc.py: 471:Action : Reduce rule [relop -> <] with ['<'] and goto state 153
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop . LexToken(ID,'n',1,436)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop empty . LexToken(ID,'n',1,436)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop term_not . LexToken(ID,'n',1,436)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop term_not ID . LexToken(),')',1,437)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop term_not ID empty . LexToken(),')',1,437)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['n',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8a800> ('n')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop term_not varcte . LexToken(),')',1,437)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['n'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop term_not factor . LexToken(),')',1,437)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv . LexToken(),')',1,437)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,437)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv term2 . LexToken(),')',1,437)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop term . LexToken(),')',1,437)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop term empty . LexToken(),')',1,437)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop term exp2 . LexToken(),')',1,437)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp relop exp . LexToken(),')',1,437)
   yacc.py: 471:Action : Reduce rule [exp02 -> relop exp] with [None,None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp exp02 . LexToken(),')',1,437)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp0 . LexToken(),')',1,437)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp0 empty . LexToken(),')',1,437)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( exp0 expression2 . LexToken(),')',1,437)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 183
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression . LexToken(),')',1,437)
   yacc.py: 445:Action : Shift and goto state 205
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 430:Defaulted state 205: Reduce using 39
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) . None
   yacc.py: 474:Action : Reduce rule [n_while_2 -> <empty>] with [] and goto state 217
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 217
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 . LexToken({,'{',1,438)
   yacc.py: 445:Action : Shift and goto state 220
   yacc.py: 410:
   yacc.py: 411:State  : 220
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { . LexToken(ID,'j',1,444)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . LexToken(ASSIGNATOR,':=',1,446)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['j'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f3085c73878> ('j')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 . LexToken(ASSIGNATOR,':=',1,446)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR . LexToken(CTE_INT,'2',1,449)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign . LexToken(CTE_INT,'2',1,449)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign empty . LexToken(CTE_INT,'2',1,449)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(CTE_INT,'2',1,449)
   yacc.py: 445:Action : Shift and goto state 136
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign term_not CTE_INT . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['2'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign term_not varcte1 . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(;,';',1,450)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(;,';',1,450)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign term . LexToken(;,';',1,450)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,450)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,450)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['j',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { assignment . LexToken(;,';',1,450)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement1 . LexToken(;,';',1,450)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement1 ; . LexToken(IF,'if',1,456)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement . LexToken(IF,'if',1,456)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF . LexToken((,'(',1,458)
   yacc.py: 445:Action : Shift and goto state 125
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( . LexToken(ID,'M',1,459)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( empty . LexToken(ID,'M',1,459)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not . LexToken(ID,'M',1,459)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID . LexToken([,'[',1,460)
   yacc.py: 445:Action : Shift and goto state 124
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ . LexToken(ID,'i',1,461)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ empty . LexToken(ID,'i',1,461)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ term_not . LexToken(ID,'i',1,461)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ term_not ID . LexToken(],']',1,462)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ term_not ID empty . LexToken(],']',1,462)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ term_not varcte . LexToken(],']',1,462)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ term_not factor . LexToken(],']',1,462)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ term_not factor n_quad_muldiv . LexToken(],']',1,462)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ term_not factor n_quad_muldiv n_quad_not . LexToken(],']',1,462)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ term_not factor n_quad_muldiv term2 . LexToken(],']',1,462)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ term . LexToken(],']',1,462)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ term empty . LexToken(],']',1,462)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ term exp2 . LexToken(],']',1,462)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ exp . LexToken(],']',1,462)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ exp empty . LexToken(],']',1,462)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ exp exp02 . LexToken(],']',1,462)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ exp0 . LexToken(],']',1,462)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ exp0 empty . LexToken(],']',1,462)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ exp0 expression2 . LexToken(],']',1,462)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 172
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 172
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ expression . LexToken(],']',1,462)
   yacc.py: 445:Action : Shift and goto state 192
   yacc.py: 410:
   yacc.py: 411:State  : 192
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not ID [ expression ] . LexToken(EQ,'==',1,464)
   yacc.py: 471:Action : Reduce rule [map_access -> ID [ expression ]] with ['M','[',None,']'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not map_access . LexToken(EQ,'==',1,464)
   yacc.py: 471:Action : Reduce rule [varcte1 -> map_access] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not varcte1 . LexToken(EQ,'==',1,464)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not varcte . LexToken(EQ,'==',1,464)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not factor . LexToken(EQ,'==',1,464)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not factor n_quad_muldiv . LexToken(EQ,'==',1,464)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not factor n_quad_muldiv n_quad_not . LexToken(EQ,'==',1,464)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term_not factor n_quad_muldiv term2 . LexToken(EQ,'==',1,464)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term . LexToken(EQ,'==',1,464)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term empty . LexToken(EQ,'==',1,464)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( term exp2 . LexToken(EQ,'==',1,464)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp . LexToken(EQ,'==',1,464)
   yacc.py: 445:Action : Shift and goto state 157
   yacc.py: 410:
   yacc.py: 411:State  : 157
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp EQ . LexToken(CTE_BOOL,'true',1,467)
   yacc.py: 471:Action : Reduce rule [relop -> EQ] with ['=='] and goto state 153
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop . LexToken(CTE_BOOL,'true',1,467)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop empty . LexToken(CTE_BOOL,'true',1,467)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop term_not . LexToken(CTE_BOOL,'true',1,467)
   yacc.py: 445:Action : Shift and goto state 139
   yacc.py: 410:
   yacc.py: 411:State  : 139
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop term_not CTE_BOOL . LexToken(),')',1,471)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_BOOL] with ['true'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop term_not varcte1 . LexToken(),')',1,471)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop term_not varcte . LexToken(),')',1,471)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop term_not factor . LexToken(),')',1,471)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop term_not factor n_quad_muldiv . LexToken(),')',1,471)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,471)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop term_not factor n_quad_muldiv term2 . LexToken(),')',1,471)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop term . LexToken(),')',1,471)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop term empty . LexToken(),')',1,471)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop term exp2 . LexToken(),')',1,471)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp relop exp . LexToken(),')',1,471)
   yacc.py: 471:Action : Reduce rule [exp02 -> relop exp] with [None,None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp exp02 . LexToken(),')',1,471)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp0 . LexToken(),')',1,471)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp0 empty . LexToken(),')',1,471)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( exp0 expression2 . LexToken(),')',1,471)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 173
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 430:Defaulted state 173: Reduce using 39
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression . LexToken(),')',1,471)
   yacc.py: 474:Action : Reduce rule [n_while_2 -> <empty>] with [] and goto state 193
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 193
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 . LexToken(),')',1,471)
   yacc.py: 445:Action : Shift and goto state 211
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) . LexToken({,'{',1,472)
   yacc.py: 445:Action : Shift and goto state 220
   yacc.py: 410:
   yacc.py: 411:State  : 220
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { . LexToken(ID,'primes',1,480)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . LexToken(.,'.',1,486)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . . LexToken(OP_ARGS,'insert',1,487)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS . LexToken((,'(',1,493)
   yacc.py: 445:Action : Shift and goto state 190
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( . LexToken(ID,'i',1,494)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( empty . LexToken(ID,'i',1,494)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( term_not . LexToken(ID,'i',1,494)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( term_not ID . LexToken(),')',1,495)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( term_not ID empty . LexToken(),')',1,495)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( term_not varcte . LexToken(),')',1,495)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( term_not factor . LexToken(),')',1,495)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( term_not factor n_quad_muldiv . LexToken(),')',1,495)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,495)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( term_not factor n_quad_muldiv term2 . LexToken(),')',1,495)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( term . LexToken(),')',1,495)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( term empty . LexToken(),')',1,495)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( term exp2 . LexToken(),')',1,495)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( exp . LexToken(),')',1,495)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( exp empty . LexToken(),')',1,495)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( exp exp02 . LexToken(),')',1,495)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( exp0 . LexToken(),')',1,495)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( exp0 empty . LexToken(),')',1,495)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( exp0 expression2 . LexToken(),')',1,495)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 209
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 209
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( expression . LexToken(),')',1,495)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { ID . OP_ARGS ( expression ) . LexToken(;,';',1,496)
   yacc.py: 471:Action : Reduce rule [container_operation -> ID . OP_ARGS ( expression )] with ['primes','.','insert','(',None,')'] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 430:Defaulted state 89: Reduce using 65
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { container_operation . LexToken(;,';',1,496)
   yacc.py: 471:Action : Reduce rule [statement1 -> container_operation] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { statement1 . LexToken(;,';',1,496)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { statement1 ; . LexToken(},'}',1,502)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { statement . LexToken(},'}',1,502)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 101
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { statement empty . LexToken(},'}',1,502)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { statement statement_aux . LexToken(},'}',1,502)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 225
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 225
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { statement_aux . LexToken(},'}',1,502)
   yacc.py: 445:Action : Shift and goto state 231
   yacc.py: 410:
   yacc.py: 411:State  : 231
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) { statement_aux } . LexToken(WHILE,'while',1,508)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 221
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 221
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) block . LexToken(WHILE,'while',1,508)
   yacc.py: 474:Action : Reduce rule [n_if_3 -> <empty>] with [] and goto state 226
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 226
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) block n_if_3 . LexToken(WHILE,'while',1,508)
   yacc.py: 471:Action : Reduce rule [condition1 -> n_if_3] with [None] and goto state 228
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement IF ( expression n_while_2 ) block condition1 . LexToken(WHILE,'while',1,508)
   yacc.py: 471:Action : Reduce rule [condition -> IF ( expression n_while_2 ) block condition1] with ['if','(',None,None,')',None,None] and goto state 92
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement condition . LexToken(WHILE,'while',1,508)
   yacc.py: 471:Action : Reduce rule [statement2 -> condition] with [None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement2 . LexToken(WHILE,'while',1,508)
   yacc.py: 471:Action : Reduce rule [statement -> statement2] with [None] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement . LexToken(WHILE,'while',1,508)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 430:Defaulted state 77: Reduce using 38
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE . None
   yacc.py: 474:Action : Reduce rule [n_while_1 -> <empty>] with [] and goto state 111
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 . LexToken((,'(',1,513)
   yacc.py: 445:Action : Shift and goto state 163
   yacc.py: 410:
   yacc.py: 411:State  : 163
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( . LexToken(ID,'i',1,514)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( empty . LexToken(ID,'i',1,514)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not . LexToken(ID,'i',1,514)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not ID . LexToken(*,'*',1,516)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not ID empty . LexToken(*,'*',1,516)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not varcte . LexToken(*,'*',1,516)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor . LexToken(*,'*',1,516)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv . LexToken(*,'*',1,516)
   yacc.py: 445:Action : Shift and goto state 197
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv * . LexToken(ID,'j',1,518)
   yacc.py: 471:Action : Reduce rule [muldiv -> *] with ['*'] and goto state 200
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 200
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv muldiv . LexToken(ID,'j',1,518)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv muldiv ID . LexToken(<,'<',1,520)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv muldiv ID empty . LexToken(<,'<',1,520)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['j',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c73878> ('j')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv muldiv varcte . LexToken(<,'<',1,520)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['j'] and goto state 213
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 213
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv muldiv factor . LexToken(<,'<',1,520)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 223
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 223
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv muldiv factor n_quad_muldiv . LexToken(<,'<',1,520)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv muldiv factor n_quad_muldiv n_quad_not . LexToken(<,'<',1,520)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 229
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 229
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv muldiv factor n_quad_muldiv term2 . LexToken(<,'<',1,520)
   yacc.py: 471:Action : Reduce rule [term2 -> muldiv factor n_quad_muldiv term2] with [None,None,None,None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term_not factor n_quad_muldiv term2 . LexToken(<,'<',1,520)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term . LexToken(<,'<',1,520)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term empty . LexToken(<,'<',1,520)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( term exp2 . LexToken(<,'<',1,520)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp . LexToken(<,'<',1,520)
   yacc.py: 445:Action : Shift and goto state 158
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp < . LexToken(ID,'n',1,522)
   yacc.py: 471:Action : Reduce rule [relop -> <] with ['<'] and goto state 153
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop . LexToken(ID,'n',1,522)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop empty . LexToken(ID,'n',1,522)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop term_not . LexToken(ID,'n',1,522)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop term_not ID . LexToken(),')',1,523)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop term_not ID empty . LexToken(),')',1,523)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['n',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8a800> ('n')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop term_not varcte . LexToken(),')',1,523)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['n'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop term_not factor . LexToken(),')',1,523)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv . LexToken(),')',1,523)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,523)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop term_not factor n_quad_muldiv term2 . LexToken(),')',1,523)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop term . LexToken(),')',1,523)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop term empty . LexToken(),')',1,523)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop term exp2 . LexToken(),')',1,523)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp relop exp . LexToken(),')',1,523)
   yacc.py: 471:Action : Reduce rule [exp02 -> relop exp] with [None,None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp exp02 . LexToken(),')',1,523)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp0 . LexToken(),')',1,523)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp0 empty . LexToken(),')',1,523)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( exp0 expression2 . LexToken(),')',1,523)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 183
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression . LexToken(),')',1,523)
   yacc.py: 445:Action : Shift and goto state 205
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 430:Defaulted state 205: Reduce using 39
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) . None
   yacc.py: 474:Action : Reduce rule [n_while_2 -> <empty>] with [] and goto state 217
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 217
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 . LexToken({,'{',1,524)
   yacc.py: 445:Action : Shift and goto state 220
   yacc.py: 410:
   yacc.py: 411:State  : 220
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { . LexToken(ID,'M',1,532)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID . LexToken([,'[',1,533)
   yacc.py: 445:Action : Shift and goto state 124
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ . LexToken(ID,'i',1,534)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ empty . LexToken(ID,'i',1,534)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not . LexToken(ID,'i',1,534)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not ID . LexToken(*,'*',1,536)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not ID empty . LexToken(*,'*',1,536)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not varcte . LexToken(*,'*',1,536)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor . LexToken(*,'*',1,536)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv . LexToken(*,'*',1,536)
   yacc.py: 445:Action : Shift and goto state 197
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv * . LexToken(ID,'j',1,538)
   yacc.py: 471:Action : Reduce rule [muldiv -> *] with ['*'] and goto state 200
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 200
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv muldiv . LexToken(ID,'j',1,538)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv muldiv ID . LexToken(],']',1,539)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv muldiv ID empty . LexToken(],']',1,539)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['j',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c73878> ('j')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv muldiv varcte . LexToken(],']',1,539)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['j'] and goto state 213
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 213
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv muldiv factor . LexToken(],']',1,539)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 223
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 223
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv muldiv factor n_quad_muldiv . LexToken(],']',1,539)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv muldiv factor n_quad_muldiv n_quad_not . LexToken(],']',1,539)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 229
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 229
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv muldiv factor n_quad_muldiv term2 . LexToken(],']',1,539)
   yacc.py: 471:Action : Reduce rule [term2 -> muldiv factor n_quad_muldiv term2] with [None,None,None,None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term_not factor n_quad_muldiv term2 . LexToken(],']',1,539)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term . LexToken(],']',1,539)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term empty . LexToken(],']',1,539)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ term exp2 . LexToken(],']',1,539)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp . LexToken(],']',1,539)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp empty . LexToken(],']',1,539)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp exp02 . LexToken(],']',1,539)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp0 . LexToken(],']',1,539)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp0 empty . LexToken(],']',1,539)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ exp0 expression2 . LexToken(],']',1,539)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 172
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 172
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ expression . LexToken(],']',1,539)
   yacc.py: 445:Action : Shift and goto state 192
   yacc.py: 410:
   yacc.py: 411:State  : 192
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { ID [ expression ] . LexToken(ASSIGNATOR,':=',1,541)
   yacc.py: 471:Action : Reduce rule [map_access -> ID [ expression ]] with ['M','[',None,']'] and goto state 80
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access . LexToken(ASSIGNATOR,':=',1,541)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR . LexToken(CTE_BOOL,'false',1,544)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 166
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign . LexToken(CTE_BOOL,'false',1,544)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign empty . LexToken(CTE_BOOL,'false',1,544)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not . LexToken(CTE_BOOL,'false',1,544)
   yacc.py: 445:Action : Shift and goto state 139
   yacc.py: 410:
   yacc.py: 411:State  : 139
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not CTE_BOOL . LexToken(;,';',1,549)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_BOOL] with ['false'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not varcte1 . LexToken(;,';',1,549)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not varcte . LexToken(;,';',1,549)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not factor . LexToken(;,';',1,549)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(;,';',1,549)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,549)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,549)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term . LexToken(;,';',1,549)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,549)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,549)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 187
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 187
   yacc.py: 430:Defaulted state 187: Reduce using 138
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_access ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,549)
   yacc.py: 471:Action : Reduce rule [map_assignment -> map_access ASSIGNATOR n_quad_assign exp] with [None,':=',None,None] and goto state 94
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 430:Defaulted state 94: Reduce using 68
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { map_assignment . LexToken(;,';',1,549)
   yacc.py: 471:Action : Reduce rule [statement1 -> map_assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement1 . LexToken(;,';',1,549)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement1 ; . LexToken(ID,'j',1,557)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement . LexToken(ID,'j',1,557)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement ID . LexToken(ASSIGNATOR,':=',1,559)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['j'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f3085c73878> ('j')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 . LexToken(ASSIGNATOR,':=',1,559)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR . LexToken(ID,'j',1,562)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign . LexToken(ID,'j',1,562)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign empty . LexToken(ID,'j',1,562)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(ID,'j',1,562)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not ID . LexToken(+,'+',1,564)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not ID empty . LexToken(+,'+',1,564)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['j',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c73878> ('j')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(+,'+',1,564)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['j'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(+,'+',1,564)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(+,'+',1,564)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(+,'+',1,564)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(+,'+',1,564)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term . LexToken(+,'+',1,564)
   yacc.py: 445:Action : Shift and goto state 142
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term + . LexToken(CTE_INT,'1',1,566)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub . LexToken(CTE_INT,'1',1,566)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub empty . LexToken(CTE_INT,'1',1,566)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not . LexToken(CTE_INT,'1',1,566)
   yacc.py: 445:Action : Shift and goto state 136
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not CTE_INT . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['1'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not varcte1 . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not varcte . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor . LexToken(;,';',1,567)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv . LexToken(;,';',1,567)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv term2 . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 177
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term . LexToken(;,';',1,567)
   yacc.py: 474:Action : Reduce rule [n_quad_addsub -> <empty>] with [] and goto state 201
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub . LexToken(;,';',1,567)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub empty . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 214
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 214
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub exp2 . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term n_quad_addsub exp2] with [None,None,None,None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,567)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,567)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['j',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement assignment . LexToken(;,';',1,567)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement1 . LexToken(;,';',1,567)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement1 ; . LexToken(},'}',1,573)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement . LexToken(},'}',1,573)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 101
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement empty . LexToken(},'}',1,573)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement_aux . LexToken(},'}',1,573)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement_aux . LexToken(},'}',1,573)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 225
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 225
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement_aux . LexToken(},'}',1,573)
   yacc.py: 445:Action : Shift and goto state 231
   yacc.py: 410:
   yacc.py: 411:State  : 231
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 { statement_aux } . LexToken(ID,'i',1,579)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 224
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 224
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 block . LexToken(ID,'i',1,579)
   yacc.py: 474:Action : Reduce rule [n_while_3 -> <empty>] with [] and goto state 230
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement WHILE n_while_1 ( expression ) n_while_2 block n_while_3 . LexToken(ID,'i',1,579)
   yacc.py: 471:Action : Reduce rule [while -> WHILE n_while_1 ( expression ) n_while_2 block n_while_3] with ['while',None,'(',None,')',None,None,None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement while . LexToken(ID,'i',1,579)
   yacc.py: 471:Action : Reduce rule [statement2 -> while] with [None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement2 . LexToken(ID,'i',1,579)
   yacc.py: 471:Action : Reduce rule [statement -> statement2] with [None] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement . LexToken(ID,'i',1,579)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement ID . LexToken(ASSIGNATOR,':=',1,581)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['i'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 . LexToken(ASSIGNATOR,':=',1,581)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR . LexToken(ID,'i',1,584)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign . LexToken(ID,'i',1,584)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign empty . LexToken(ID,'i',1,584)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(ID,'i',1,584)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not ID . LexToken(+,'+',1,586)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not ID empty . LexToken(+,'+',1,586)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['i',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(+,'+',1,586)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['i'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(+,'+',1,586)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(+,'+',1,586)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(+,'+',1,586)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(+,'+',1,586)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term . LexToken(+,'+',1,586)
   yacc.py: 445:Action : Shift and goto state 142
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term + . LexToken(CTE_INT,'1',1,588)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 144
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub . LexToken(CTE_INT,'1',1,588)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub empty . LexToken(CTE_INT,'1',1,588)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not . LexToken(CTE_INT,'1',1,588)
   yacc.py: 445:Action : Shift and goto state 136
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not CTE_INT . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['1'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not varcte1 . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not varcte . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor . LexToken(;,';',1,589)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv . LexToken(;,';',1,589)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term_not factor n_quad_muldiv term2 . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 177
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term . LexToken(;,';',1,589)
   yacc.py: 474:Action : Reduce rule [n_quad_addsub -> <empty>] with [] and goto state 201
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub . LexToken(;,';',1,589)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub empty . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 214
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 214
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term addsub term n_quad_addsub exp2 . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term n_quad_addsub exp2] with [None,None,None,None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,589)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,589)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['i',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement assignment . LexToken(;,';',1,589)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement1 . LexToken(;,';',1,589)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement1 ; . LexToken(},'}',1,593)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement . LexToken(},'}',1,593)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 101
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement empty . LexToken(},'}',1,593)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement statement_aux . LexToken(},'}',1,593)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement statement_aux . LexToken(},'}',1,593)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement statement_aux . LexToken(},'}',1,593)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement statement_aux . LexToken(},'}',1,593)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 225
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 225
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement_aux . LexToken(},'}',1,593)
   yacc.py: 445:Action : Shift and goto state 231
   yacc.py: 410:
   yacc.py: 411:State  : 231
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 { statement_aux } . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 224
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 224
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 block . LexToken(},'}',1,595)
   yacc.py: 474:Action : Reduce rule [n_while_3 -> <empty>] with [] and goto state 230
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement WHILE n_while_1 ( expression ) n_while_2 block n_while_3 . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [while -> WHILE n_while_1 ( expression ) n_while_2 block n_while_3] with ['while',None,'(',None,')',None,None,None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement while . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [statement2 -> while] with [None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement statement2 . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [statement -> statement2] with [None] and goto state 82
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement statement . LexToken(},'}',1,595)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 84
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 430:Defaulted state 84: Reduce using 23
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement statement empty . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [proc4 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 430:Defaulted state 115: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement statement proc4 . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 430:Defaulted state 115: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement statement proc4 . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 430:Defaulted state 115: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement statement proc4 . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 430:Defaulted state 115: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement statement proc4 . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 430:Defaulted state 115: Reduce using 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter statement proc4 . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 20
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var n_quad_counter proc4 . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [proc3 -> n_quad_counter proc4] with [None,None] and goto state 97
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 19
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { var proc3 . LexToken(},'}',1,595)
   yacc.py: 471:Action : Reduce rule [proc3 -> var proc3] with ['int i j',None] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { proc3 . LexToken(},'}',1,595)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 proc1 ) { proc3 } . LexToken(MAIN,'main',1,598)
   yacc.py: 471:Action : Reduce rule [procA -> proc1 ) { proc3 }] with [None,')','{',None,'}'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc VOID proca2 procA . LexToken(MAIN,'main',1,598)
   yacc.py: 471:Action : Reduce rule [proc -> VOID proca2 procA] with ['void',None,None] and goto state 15
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 15
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc . LexToken(MAIN,'main',1,598)
   yacc.py: 445:Action : Shift and goto state 24
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 430:Defaulted state 24: Reduce using 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN . None
   yacc.py: 474:Action : Reduce rule [n_clear_scope -> <empty>] with [] and goto state 39
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 430:Defaulted state 39: Reduce using 132
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope . None
   yacc.py: 474:Action : Reduce rule [n_main_quad2 -> <empty>] with [] and goto state 54
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 . LexToken({,'{',1,603)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { . LexToken(INT,'int',1,607)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { INT . LexToken(ID,'limit',1,611)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 65
   yacc.py: 506:Result : <str @ 0x7f30846455d0> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { datatype . LexToken(ID,'limit',1,611)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { datatype ID . LexToken(;,';',1,616)
   yacc.py: 445:Action : Shift and goto state 53
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { datatype ID ; . LexToken(INT,'int',1,620)
   yacc.py: 471:Action : Reduce rule [var1 -> ID ;] with ['limit',';'] and goto state 37
   yacc.py: 506:Result : <str @ 0x7f30844a69f0> ('limit')
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { datatype var1 . LexToken(INT,'int',1,620)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int','limit'] and goto state 70
   yacc.py: 506:Result : <str @ 0x7f30844a6a20> ('int limit')
   yacc.py: 410:
   yacc.py: 411:State  : 70
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { var . LexToken(INT,'int',1,620)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { var INT . LexToken(ID,'i',1,624)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 65
   yacc.py: 506:Result : <str @ 0x7f3084645558> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { var datatype . LexToken(ID,'i',1,624)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { var datatype ID . LexToken(;,';',1,625)
   yacc.py: 445:Action : Shift and goto state 53
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { var datatype ID ; . LexToken(ID,'limit',1,629)
   yacc.py: 471:Action : Reduce rule [var1 -> ID ;] with ['i',';'] and goto state 37
   yacc.py: 506:Result : <str @ 0x7f3085c8aaa8> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { var datatype var1 . LexToken(ID,'limit',1,629)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int','i'] and goto state 70
   yacc.py: 506:Result : <str @ 0x7f30844a6720> ('int i')
   yacc.py: 410:
   yacc.py: 411:State  : 70
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { var var . LexToken(ID,'limit',1,629)
   yacc.py: 471:Action : Reduce rule [vars -> var] with ['int i'] and goto state 102
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { var vars . LexToken(ID,'limit',1,629)
   yacc.py: 471:Action : Reduce rule [vars -> var vars] with ['int limit',None] and goto state 68
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars . LexToken(ID,'limit',1,629)
   yacc.py: 471:Action : Reduce rule [vars_aux -> vars] with [None] and goto state 69
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux . LexToken(ID,'limit',1,629)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux ID . LexToken(ASSIGNATOR,':=',1,635)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['limit'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f30844a6510> ('limit')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 . LexToken(ASSIGNATOR,':=',1,635)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR . LexToken(CTE_INT,'100',1,638)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign . LexToken(CTE_INT,'100',1,638)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign empty . LexToken(CTE_INT,'100',1,638)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(CTE_INT,'100',1,638)
   yacc.py: 445:Action : Shift and goto state 136
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not CTE_INT . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [varcte1 -> CTE_INT] with ['100'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not varcte1 . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [varcte -> varcte1] with [None] and goto state 130
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(;,';',1,641)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(;,';',1,641)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv n_quad_not . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term . LexToken(;,';',1,641)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,641)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,641)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['limit',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux assignment . LexToken(;,';',1,641)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement1 . LexToken(;,';',1,641)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement1 ; . LexToken(ID,'sieve',1,646)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement . LexToken(ID,'sieve',1,646)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement ID . LexToken((,'(',1,651)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement ID ( . LexToken(ID,'limit',1,652)
   yacc.py: 471:Action : Reduce rule [n_era_size -> ID (] with ['sieve','('] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size . LexToken(ID,'limit',1,652)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 121
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 121
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size empty . LexToken(ID,'limit',1,652)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size term_not . LexToken(ID,'limit',1,652)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size term_not ID . LexToken(),')',1,657)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size term_not ID empty . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['limit',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f30844a6a20> ('limit')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size term_not varcte . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['limit'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size term_not factor . LexToken(),')',1,657)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size term_not factor n_quad_muldiv . LexToken(),')',1,657)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size term_not factor n_quad_muldiv term2 . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size term . LexToken(),')',1,657)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size term empty . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size term exp2 . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size exp . LexToken(),')',1,657)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size exp empty . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size exp exp02 . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size exp0 . LexToken(),')',1,657)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size exp0 empty . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size exp0 expression2 . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 119
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size expression . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [n_verify_argument -> expression] with [None] and goto state 120
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size n_verify_argument . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [function_call2 -> n_verify_argument] with [None] and goto state 117
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 430:Defaulted state 117: Reduce using 52
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size function_call2 . LexToken(),')',1,657)
   yacc.py: 471:Action : Reduce rule [function_call1 -> function_call2] with [None] and goto state 118
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size function_call1 . LexToken(),')',1,657)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement n_era_size function_call1 ) . LexToken(;,';',1,658)
   yacc.py: 471:Action : Reduce rule [function_call -> n_era_size function_call1 )] with [None,None,')'] and goto state 76
   yacc.py: 506:Result : <str @ 0x7f3084605360> ('&VOID')
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 430:Defaulted state 76: Reduce using 69
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement function_call . LexToken(;,';',1,658)
   yacc.py: 471:Action : Reduce rule [statement1 -> function_call] with ['&VOID'] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement1 . LexToken(;,';',1,658)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement1 ; . LexToken(PRINT,'print',1,662)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement . LexToken(PRINT,'print',1,662)
   yacc.py: 445:Action : Shift and goto state 78
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT . LexToken((,'(',1,667)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( . LexToken(ID,'primes',1,668)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( empty . LexToken(ID,'primes',1,668)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( term_not . LexToken(ID,'primes',1,668)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( term_not ID . LexToken(),')',1,674)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( term_not ID empty . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['primes',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f30844a6510> ('primes')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( term_not varcte . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['primes'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( term_not factor . LexToken(),')',1,674)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( term_not factor n_quad_muldiv . LexToken(),')',1,674)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( term_not factor n_quad_muldiv term2 . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( term . LexToken(),')',1,674)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( term empty . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( term exp2 . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( exp . LexToken(),')',1,674)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( exp empty . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( exp exp02 . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( exp0 . LexToken(),')',1,674)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( exp0 empty . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( exp0 expression2 . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( expression . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [n_output_quad -> expression] with [None] and goto state 164
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 164
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( n_output_quad . LexToken(),')',1,674)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 186
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 430:Defaulted state 186: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( n_output_quad empty . LexToken(),')',1,674)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 184
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 184
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( n_output_quad output1 . LexToken(),')',1,674)
   yacc.py: 445:Action : Shift and goto state 206
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 430:Defaulted state 206: Reduce using 45
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement PRINT ( n_output_quad output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( n_output_quad output1 )] with ['print','(',None,None,')'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 430:Defaulted state 96: Reduce using 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement1 . LexToken(;,';',1,675)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement1 ; . LexToken(ID,'fibonacci',1,680)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement . LexToken(ID,'fibonacci',1,680)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement ID . LexToken((,'(',1,689)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement ID ( . LexToken(ID,'limit',1,690)
   yacc.py: 471:Action : Reduce rule [n_era_size -> ID (] with ['fibonacci','('] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size . LexToken(ID,'limit',1,690)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 121
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 121
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size empty . LexToken(ID,'limit',1,690)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size term_not . LexToken(ID,'limit',1,690)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size term_not ID . LexToken(),')',1,695)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size term_not ID empty . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['limit',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f30844a68d0> ('limit')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size term_not varcte . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['limit'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size term_not factor . LexToken(),')',1,695)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size term_not factor n_quad_muldiv . LexToken(),')',1,695)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size term_not factor n_quad_muldiv term2 . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size term . LexToken(),')',1,695)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size term empty . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size term exp2 . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size exp . LexToken(),')',1,695)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size exp empty . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size exp exp02 . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size exp0 . LexToken(),')',1,695)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size exp0 empty . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size exp0 expression2 . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 119
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size expression . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [n_verify_argument -> expression] with [None] and goto state 120
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size n_verify_argument . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [function_call2 -> n_verify_argument] with [None] and goto state 117
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 430:Defaulted state 117: Reduce using 52
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size function_call2 . LexToken(),')',1,695)
   yacc.py: 471:Action : Reduce rule [function_call1 -> function_call2] with [None] and goto state 118
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size function_call1 . LexToken(),')',1,695)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement n_era_size function_call1 ) . LexToken(;,';',1,696)
   yacc.py: 471:Action : Reduce rule [function_call -> n_era_size function_call1 )] with [None,None,')'] and goto state 76
   yacc.py: 506:Result : <str @ 0x7f3084605360> ('&VOID')
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 430:Defaulted state 76: Reduce using 69
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement function_call . LexToken(;,';',1,696)
   yacc.py: 471:Action : Reduce rule [statement1 -> function_call] with ['&VOID'] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement1 . LexToken(;,';',1,696)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement1 ; . LexToken(PRINT,'print',1,700)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement . LexToken(PRINT,'print',1,700)
   yacc.py: 445:Action : Shift and goto state 78
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT . LexToken((,'(',1,705)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( . LexToken(ID,'fib',1,706)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( empty . LexToken(ID,'fib',1,706)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( term_not . LexToken(ID,'fib',1,706)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( term_not ID . LexToken(),')',1,709)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( term_not ID empty . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['fib',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3084645558> ('fib')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( term_not varcte . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['fib'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( term_not factor . LexToken(),')',1,709)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( term_not factor n_quad_muldiv . LexToken(),')',1,709)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( term_not factor n_quad_muldiv term2 . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( term . LexToken(),')',1,709)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( term empty . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( term exp2 . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( exp . LexToken(),')',1,709)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( exp empty . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( exp exp02 . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( exp0 . LexToken(),')',1,709)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( exp0 empty . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( exp0 expression2 . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( expression . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [n_output_quad -> expression] with [None] and goto state 164
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 164
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( n_output_quad . LexToken(),')',1,709)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 186
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 430:Defaulted state 186: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( n_output_quad empty . LexToken(),')',1,709)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 184
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 184
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( n_output_quad output1 . LexToken(),')',1,709)
   yacc.py: 445:Action : Shift and goto state 206
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 430:Defaulted state 206: Reduce using 45
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement PRINT ( n_output_quad output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( n_output_quad output1 )] with ['print','(',None,None,')'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 430:Defaulted state 96: Reduce using 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement1 . LexToken(;,';',1,710)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement1 ; . LexToken(ID,'intersection',1,715)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement . LexToken(ID,'intersection',1,715)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement ID . LexToken(ASSIGNATOR,':=',1,728)
   yacc.py: 471:Action : Reduce rule [assignment2 -> ID] with ['intersection'] and goto state 81
   yacc.py: 506:Result : <str @ 0x7f30844a7730> ('intersection')
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 . LexToken(ASSIGNATOR,':=',1,728)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR . LexToken(ID,'primes',1,731)
   yacc.py: 474:Action : Reduce rule [n_quad_assign -> <empty>] with [] and goto state 167
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign . LexToken(ID,'primes',1,731)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign empty . LexToken(ID,'primes',1,731)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not . LexToken(ID,'primes',1,731)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not ID . LexToken(SET_MATH_MULDIV,'.*',1,738)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not ID empty . LexToken(SET_MATH_MULDIV,'.*',1,738)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['primes',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f30844a62a0> ('primes')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not varcte . LexToken(SET_MATH_MULDIV,'.*',1,738)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['primes'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor . LexToken(SET_MATH_MULDIV,'.*',1,738)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv . LexToken(SET_MATH_MULDIV,'.*',1,738)
   yacc.py: 445:Action : Shift and goto state 195
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv SET_MATH_MULDIV . LexToken(ID,'fib',1,741)
   yacc.py: 471:Action : Reduce rule [muldiv -> SET_MATH_MULDIV] with ['.*'] and goto state 200
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 200
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv . LexToken(ID,'fib',1,741)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv ID . LexToken(;,';',1,744)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv ID empty . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['fib',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f3084645c38> ('fib')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv varcte . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['fib'] and goto state 213
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 213
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor . LexToken(;,';',1,744)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 223
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 223
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv . LexToken(;,';',1,744)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv n_quad_not . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 229
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 229
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv muldiv factor n_quad_muldiv term2 . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [term2 -> muldiv factor n_quad_muldiv term2] with [None,None,None,None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term_not factor n_quad_muldiv term2 . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term . LexToken(;,';',1,744)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term empty . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign term exp2 . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign exp . LexToken(;,';',1,744)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign exp empty . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign exp exp02 . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 . LexToken(;,';',1,744)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 empty . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign exp0 expression2 . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 188
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 188
   yacc.py: 430:Defaulted state 188: Reduce using 29
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment2 ASSIGNATOR n_quad_assign expression . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [assignment -> assignment2 ASSIGNATOR n_quad_assign expression] with ['intersection',':=',None,None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 430:Defaulted state 90: Reduce using 62
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement assignment . LexToken(;,';',1,744)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement1 . LexToken(;,';',1,744)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement1 ; . LexToken(PRINT,'print',1,748)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement . LexToken(PRINT,'print',1,748)
   yacc.py: 445:Action : Shift and goto state 78
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT . LexToken((,'(',1,753)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( . LexToken(ID,'intersection',1,754)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 109
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( empty . LexToken(ID,'intersection',1,754)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( term_not . LexToken(ID,'intersection',1,754)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( term_not ID . LexToken(),')',1,766)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 176
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( term_not ID empty . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [varcte -> ID empty] with ['intersection',None] and goto state 130
   yacc.py: 506:Result : <str @ 0x7f30844a7730> ('intersection')
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( term_not varcte . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [factor -> varcte] with ['intersection'] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( term_not factor . LexToken(),')',1,766)
   yacc.py: 474:Action : Reduce rule [n_quad_muldiv -> <empty>] with [] and goto state 175
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( term_not factor n_quad_muldiv . LexToken(),')',1,766)
   yacc.py: 474:Action : Reduce rule [n_quad_not -> <empty>] with [] and goto state 198
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( term_not factor n_quad_muldiv n_quad_not . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [term2 -> n_quad_not] with [None] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( term_not factor n_quad_muldiv term2 . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor n_quad_muldiv term2] with [None,None,None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( term . LexToken(),')',1,766)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 146
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( term empty . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( term exp2 . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( exp . LexToken(),')',1,766)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 159
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( exp empty . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( exp exp02 . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 105
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( exp0 . LexToken(),')',1,766)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 151
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( exp0 empty . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [expression2 -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( exp0 expression2 . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression2] with [None,None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( expression . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [n_output_quad -> expression] with [None] and goto state 164
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 164
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( n_output_quad . LexToken(),')',1,766)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 186
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 430:Defaulted state 186: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( n_output_quad empty . LexToken(),')',1,766)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 184
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 184
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( n_output_quad output1 . LexToken(),')',1,766)
   yacc.py: 445:Action : Shift and goto state 206
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 430:Defaulted state 206: Reduce using 45
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement PRINT ( n_output_quad output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( n_output_quad output1 )] with ['print','(',None,None,')'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 430:Defaulted state 96: Reduce using 64
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement statement1 . LexToken(;,';',1,767)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement statement1 ; . LexToken(},'}',1,770)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 100
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement statement . LexToken(},'}',1,770)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 101
   yacc.py: 548:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 130
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement statement empty . LexToken(},'}',1,770)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement statement statement_aux . LexToken(},'}',1,770)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement statement_aux . LexToken(},'}',1,770)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement statement_aux . LexToken(},'}',1,770)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement statement_aux . LexToken(},'}',1,770)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement statement_aux . LexToken(},'}',1,770)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement statement_aux . LexToken(},'}',1,770)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 127
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 430:Defaulted state 127: Reduce using 129
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement statement_aux . LexToken(},'}',1,770)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 99
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement_aux . LexToken(},'}',1,770)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 430:Defaulted state 126: Reduce using 131
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc MAIN n_clear_scope n_main_quad2 { vars_aux statement_aux } . None
   yacc.py: 471:Action : Reduce rule [main -> MAIN n_clear_scope n_main_quad2 { vars_aux statement_aux }] with ['main',None,None,'{',None,None,'}'] and goto state 14
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 430:Defaulted state 14: Reduce using 6
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc main . None
   yacc.py: 471:Action : Reduce rule [program2 -> main] with [None] and goto state 34
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 34
   yacc.py: 430:Defaulted state 34: Reduce using 5
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc proc program2 . None
   yacc.py: 471:Action : Reduce rule [program2 -> proc program2] with [None,None] and goto state 34
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 34
   yacc.py: 430:Defaulted state 34: Reduce using 5
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var proc program2 . None
   yacc.py: 471:Action : Reduce rule [program2 -> proc program2] with [None,None] and goto state 11
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 430:Defaulted state 11: Reduce using 4
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var program2 . None
   yacc.py: 471:Action : Reduce rule [program1 -> program2] with [None] and goto state 33
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 430:Defaulted state 33: Reduce using 3
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var var program1 . None
   yacc.py: 471:Action : Reduce rule [program1 -> var program1] with ['set<int> fib',None] and goto state 33
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 430:Defaulted state 33: Reduce using 3
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var var program1 . None
   yacc.py: 471:Action : Reduce rule [program1 -> var program1] with [<str @ 0x7f30844aac90>,None] and goto state 33
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 430:Defaulted state 33: Reduce using 3
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var var program1 . None
   yacc.py: 471:Action : Reduce rule [program1 -> var program1] with [<str @ 0x7f30844a71f0>,None] and goto state 33
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 430:Defaulted state 33: Reduce using 3
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad var program1 . None
   yacc.py: 471:Action : Reduce rule [program1 -> var program1] with [<str @ 0x7f3084518110>,None] and goto state 10
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 430:Defaulted state 10: Reduce using 1
   yacc.py: 435:Stack  : PROGRAM ID ; n_main_quad program1 . None
   yacc.py: 471:Action : Reduce rule [program -> PROGRAM ID ; n_main_quad program1] with ['program','aPlusB',';',None,None] and goto state 1
   yacc.py: 506:Result : <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 435:Stack  : program . $end
   yacc.py: 571:Done   : Returning <NoneType @ 0x5653e7ad0560> (None)
   yacc.py: 572:PLY: PARSE DEBUG END
