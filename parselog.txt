   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 435:Stack  : PROGRAM . LexToken(ID,'fibonacci',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : PROGRAM ID . LexToken(;,';',1,17)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 435:Stack  : PROGRAM ID ; . LexToken(INT,'int',1,19)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; INT . LexToken(ID,'varA',1,23)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 8
   yacc.py: 506:Result : <str @ 0x7fcc46cb2298> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : PROGRAM ID ; datatype . LexToken(ID,'varA',1,23)
   yacc.py: 445:Action : Shift and goto state 26
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : PROGRAM ID ; datatype ID . LexToken(,,',',1,27)
   yacc.py: 445:Action : Shift and goto state 34
   yacc.py: 410:
   yacc.py: 411:State  : 34
   yacc.py: 435:Stack  : PROGRAM ID ; datatype ID , . LexToken(ID,'varB',1,29)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; datatype ID , ID . LexToken(;,';',1,33)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; datatype ID , ID ; . LexToken(FLOAT,'float',1,35)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; datatype ID , ID var2 . LexToken(FLOAT,'float',1,35)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['varB',None] and goto state 46
   yacc.py: 506:Result : <str @ 0x7fcc46cb2340> ('varB')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : PROGRAM ID ; datatype ID , var1 . LexToken(FLOAT,'float',1,35)
   yacc.py: 471:Action : Reduce rule [var1 -> ID , var1] with ['varA',',','varB'] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc46c787b0> ('varA varB')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; datatype var1 . LexToken(FLOAT,'float',1,35)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int','varA varB'] and goto state 6
   yacc.py: 506:Result : <str @ 0x7fcc46c782f0> ('int varA varB')
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 435:Stack  : PROGRAM ID ; var . LexToken(FLOAT,'float',1,35)
   yacc.py: 445:Action : Shift and goto state 12
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 435:Stack  : PROGRAM ID ; var FLOAT . LexToken(ID,'b',1,41)
   yacc.py: 471:Action : Reduce rule [datatype -> FLOAT] with ['float'] and goto state 8
   yacc.py: 506:Result : <str @ 0x7fcc46cb2420> ('float')
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : PROGRAM ID ; var datatype . LexToken(ID,'b',1,41)
   yacc.py: 445:Action : Shift and goto state 26
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : PROGRAM ID ; var datatype ID . LexToken(;,';',1,42)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var datatype ID ; . LexToken(INT,'int',1,45)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var datatype ID var2 . LexToken(INT,'int',1,45)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['b',None] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc48846260> ('b')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var datatype var1 . LexToken(INT,'int',1,45)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['float','b'] and goto state 6
   yacc.py: 506:Result : <str @ 0x7fcc46cb2340> ('float b')
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 435:Stack  : PROGRAM ID ; var var . LexToken(INT,'int',1,45)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var INT . LexToken(ID,'f',1,49)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 8
   yacc.py: 506:Result : <str @ 0x7fcc46cb21f0> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype . LexToken(ID,'f',1,49)
   yacc.py: 445:Action : Shift and goto state 26
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID . LexToken((,'(',1,50)
   yacc.py: 445:Action : Shift and goto state 36
   yacc.py: 410:
   yacc.py: 411:State  : 36
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( . LexToken(INT,'int',1,51)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( INT . LexToken(ID,'x',1,55)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 48
   yacc.py: 506:Result : <str @ 0x7fcc46cb2500> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( datatype . LexToken(ID,'x',1,55)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( datatype ID . LexToken(,,',',1,56)
   yacc.py: 445:Action : Shift and goto state 99
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( datatype ID , . LexToken(STRING,'string',1,58)
   yacc.py: 445:Action : Shift and goto state 14
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( datatype ID , STRING . LexToken(ID,'a',1,65)
   yacc.py: 471:Action : Reduce rule [datatype -> STRING] with ['string'] and goto state 145
   yacc.py: 506:Result : <str @ 0x7fcc46cb24c8> ('string')
   yacc.py: 410:
   yacc.py: 411:State  : 145
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( datatype ID , datatype . LexToken(ID,'a',1,65)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( datatype ID , datatype ID . LexToken(),')',1,66)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 100
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 430:Defaulted state 100: Reduce using 15
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( datatype ID , datatype ID empty . LexToken(),')',1,66)
   yacc.py: 471:Action : Reduce rule [proc2 -> empty] with [None] and goto state 199
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 199
   yacc.py: 430:Defaulted state 199: Reduce using 14
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( datatype ID , datatype ID proc2 . LexToken(),')',1,66)
   yacc.py: 471:Action : Reduce rule [proc2 -> , datatype ID proc2] with [',','string','a',None] and goto state 98
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 430:Defaulted state 98: Reduce using 12
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( datatype ID proc2 . LexToken(),')',1,66)
   yacc.py: 471:Action : Reduce rule [proc1 -> datatype ID proc2] with ['int','x',None] and goto state 47
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 . LexToken(),')',1,66)
   yacc.py: 445:Action : Shift and goto state 76
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) . LexToken({,'{',1,68)
   yacc.py: 445:Action : Shift and goto state 97
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { . LexToken(INT,'int',1,72)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { INT . LexToken(ID,'b',1,76)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7fcc46cb2538> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { datatype . LexToken(ID,'b',1,76)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { datatype ID . LexToken(;,';',1,77)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { datatype ID ; . LexToken(RETURN,'return',1,81)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { datatype ID var2 . LexToken(RETURN,'return',1,81)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['b',None] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc48846260> ('b')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { datatype var1 . LexToken(RETURN,'return',1,81)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int','b'] and goto state 140
   yacc.py: 506:Result : <str @ 0x7fcc46cb23e8> ('int b')
   yacc.py: 410:
   yacc.py: 411:State  : 140
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var . LexToken(RETURN,'return',1,81)
   yacc.py: 445:Action : Shift and goto state 69
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN . LexToken(ID,'b',1,88)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN empty . LexToken(ID,'b',1,88)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term_not . LexToken(ID,'b',1,88)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term_not empty . LexToken(ID,'b',1,88)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term_not factor3 . LexToken(ID,'b',1,88)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term_not factor3 ID . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['b'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term_not factor3 varcte . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term_not factor2 . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term_not factor . LexToken(;,';',1,89)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term_not factor empty . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term_not factor term2 . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term . LexToken(;,';',1,89)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term empty . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN term exp2 . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN exp . LexToken(;,';',1,89)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN exp empty . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN exp exp02 . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN exp0 . LexToken(;,';',1,89)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN exp0 empty . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN exp0 expression1 . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 430:Defaulted state 86: Reduce using 41
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var RETURN expression . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [return -> RETURN expression] with ['return',None] and goto state 60
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 430:Defaulted state 60: Reduce using 52
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var return . LexToken(;,';',1,89)
   yacc.py: 471:Action : Reduce rule [statement1 -> return] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var statement1 . LexToken(;,';',1,89)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var statement1 ; . LexToken(},'}',1,91)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 142
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var statement . LexToken(},'}',1,91)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 143
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 143
   yacc.py: 430:Defaulted state 143: Reduce using 19
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var statement empty . LexToken(},'}',1,91)
   yacc.py: 471:Action : Reduce rule [proc4 -> empty] with [None] and goto state 180
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 180
   yacc.py: 430:Defaulted state 180: Reduce using 18
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var statement proc4 . LexToken(},'}',1,91)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 430:Defaulted state 141: Reduce using 17
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var proc4 . LexToken(},'}',1,91)
   yacc.py: 471:Action : Reduce rule [proc3 -> proc4] with [None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 430:Defaulted state 179: Reduce using 16
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { var proc3 . LexToken(},'}',1,91)
   yacc.py: 471:Action : Reduce rule [proc3 -> var proc3] with ['int b',None] and goto state 139
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 139
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { proc3 . LexToken(},'}',1,91)
   yacc.py: 445:Action : Shift and goto state 178
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype ID ( proc1 ) { proc3 } . LexToken(SET,'set',1,93)
   yacc.py: 471:Action : Reduce rule [procA -> ID ( proc1 ) { proc3 }] with ['f','(',None,')','{',None,'}'] and goto state 25
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 435:Stack  : PROGRAM ID ; var var datatype procA . LexToken(SET,'set',1,93)
   yacc.py: 471:Action : Reduce rule [proc -> datatype procA] with ['int',None] and goto state 9
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc . LexToken(SET,'set',1,93)
   yacc.py: 445:Action : Shift and goto state 21
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc SET . LexToken(<,'<',1,96)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc SET < . LexToken(INT,'int',1,97)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc SET < INT . LexToken(>,'>',1,100)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 43
   yacc.py: 506:Result : <str @ 0x7fcc46cb2420> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc SET < datatype . LexToken(>,'>',1,100)
   yacc.py: 445:Action : Shift and goto state 74
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc SET < datatype > . LexToken(ID,'allNumbersLessThan',1,102)
   yacc.py: 471:Action : Reduce rule [set_definition -> SET < datatype >] with ['set','<','int','>'] and goto state 16
   yacc.py: 506:Result : <str @ 0x7fcc46c787b0> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc set_definition . LexToken(ID,'allNumbersLessThan',1,102)
   yacc.py: 471:Action : Reduce rule [datatype -> set_definition] with ['set<int>'] and goto state 28
   yacc.py: 506:Result : <str @ 0x7fcc46c787b0> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype . LexToken(ID,'allNumbersLessThan',1,102)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID . LexToken((,'(',1,120)
   yacc.py: 445:Action : Shift and goto state 36
   yacc.py: 410:
   yacc.py: 411:State  : 36
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( . LexToken(INT,'int',1,121)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( INT . LexToken(ID,'x',1,125)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 48
   yacc.py: 506:Result : <str @ 0x7fcc46cb2308> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( datatype . LexToken(ID,'x',1,125)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( datatype ID . LexToken(),')',1,126)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 100
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 430:Defaulted state 100: Reduce using 15
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( datatype ID empty . LexToken(),')',1,126)
   yacc.py: 471:Action : Reduce rule [proc2 -> empty] with [None] and goto state 98
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 430:Defaulted state 98: Reduce using 12
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( datatype ID proc2 . LexToken(),')',1,126)
   yacc.py: 471:Action : Reduce rule [proc1 -> datatype ID proc2] with ['int','x',None] and goto state 47
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 . LexToken(),')',1,126)
   yacc.py: 445:Action : Shift and goto state 76
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) . LexToken({,'{',1,128)
   yacc.py: 445:Action : Shift and goto state 97
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { . LexToken(INT,'int',1,135)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { INT . LexToken(ID,'i',1,139)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7fcc46cb2618> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { datatype . LexToken(ID,'i',1,139)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { datatype ID . LexToken(;,';',1,140)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { datatype ID ; . LexToken(SET,'set',1,147)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { datatype ID var2 . LexToken(SET,'set',1,147)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['i',None] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc488466c0> ('i')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { datatype var1 . LexToken(SET,'set',1,147)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int','i'] and goto state 140
   yacc.py: 506:Result : <str @ 0x7fcc46cb23e8> ('int i')
   yacc.py: 410:
   yacc.py: 411:State  : 140
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var . LexToken(SET,'set',1,147)
   yacc.py: 445:Action : Shift and goto state 21
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var SET . LexToken(<,'<',1,150)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var SET < . LexToken(INT,'int',1,151)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var SET < INT . LexToken(>,'>',1,154)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 43
   yacc.py: 506:Result : <str @ 0x7fcc46cb26f8> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var SET < datatype . LexToken(>,'>',1,154)
   yacc.py: 445:Action : Shift and goto state 74
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var SET < datatype > . LexToken(ID,'numbers',1,156)
   yacc.py: 471:Action : Reduce rule [set_definition -> SET < datatype >] with ['set','<','int','>'] and goto state 16
   yacc.py: 506:Result : <str @ 0x7fcc46c78570> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var set_definition . LexToken(ID,'numbers',1,156)
   yacc.py: 471:Action : Reduce rule [datatype -> set_definition] with ['set<int>'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7fcc46c78570> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var datatype . LexToken(ID,'numbers',1,156)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var datatype ID . LexToken(;,';',1,163)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var datatype ID ; . LexToken(MAP,'map',1,170)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var datatype ID var2 . LexToken(MAP,'map',1,170)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['numbers',None] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc46cb2618> ('numbers')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var datatype var1 . LexToken(MAP,'map',1,170)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['set<int>','numbers'] and goto state 140
   yacc.py: 506:Result : <str @ 0x7fcc46cb0bb8> ('set<int> numbers')
   yacc.py: 410:
   yacc.py: 411:State  : 140
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var . LexToken(MAP,'map',1,170)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var MAP . LexToken(<,'<',1,173)
   yacc.py: 445:Action : Shift and goto state 33
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var MAP < . LexToken(INT,'int',1,174)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var MAP < INT . LexToken(,,',',1,177)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 44
   yacc.py: 506:Result : <str @ 0x7fcc46cb2570> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var MAP < datatype . LexToken(,,',',1,177)
   yacc.py: 445:Action : Shift and goto state 75
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var MAP < datatype , . LexToken(INT,'int',1,179)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var MAP < datatype , INT . LexToken(>,'>',1,182)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 96
   yacc.py: 506:Result : <str @ 0x7fcc46cb2538> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var MAP < datatype , datatype . LexToken(>,'>',1,182)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var MAP < datatype , datatype > . LexToken(ID,'d',1,184)
   yacc.py: 471:Action : Reduce rule [map_definition -> MAP < datatype , datatype >] with ['map','<','int',',','int','>'] and goto state 144
   yacc.py: 506:Result : <str @ 0x7fcc46c78570> ('map<int,int>')
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var map_definition . LexToken(ID,'d',1,184)
   yacc.py: 471:Action : Reduce rule [datatype -> map_definition] with ['map<int,int>'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7fcc46c78570> ('map<int,int>')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var datatype . LexToken(ID,'d',1,184)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var datatype ID . LexToken(;,';',1,185)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var datatype ID ; . LexToken(ID,'i',1,193)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var datatype ID var2 . LexToken(ID,'i',1,193)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['d',None] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc48871308> ('d')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var datatype var1 . LexToken(ID,'i',1,193)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['map<int,int>','d'] and goto state 140
   yacc.py: 506:Result : <str @ 0x7fcc46c8ff70> ('map<int,int> d')
   yacc.py: 410:
   yacc.py: 411:State  : 140
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var . LexToken(ID,'i',1,193)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID . LexToken(ASSIGNATOR,':=',1,195)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR . LexToken(CTE_INT,'1',1,198)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR empty . LexToken(CTE_INT,'1',1,198)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term_not . LexToken(CTE_INT,'1',1,198)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term_not empty . LexToken(CTE_INT,'1',1,198)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term_not factor3 . LexToken(CTE_INT,'1',1,198)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term_not factor3 CTE_INT . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['1'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term_not factor3 varcte . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term_not factor2 . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term_not factor . LexToken(;,';',1,199)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term_not factor empty . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term_not factor term2 . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term . LexToken(;,';',1,199)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term empty . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR term exp2 . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR exp . LexToken(;,';',1,199)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR exp empty . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR exp exp02 . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR exp0 . LexToken(;,';',1,199)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR exp0 empty . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var ID ASSIGNATOR expression . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['i',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var assignment . LexToken(;,';',1,199)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement1 . LexToken(;,';',1,199)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement1 ; . LexToken(ID,'d',1,206)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 142
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement . LexToken(ID,'d',1,206)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement ID . LexToken(.,'.',1,207)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement ID . . LexToken(OPERATION,'size',1,208)
   yacc.py: 445:Action : Shift and goto state 102
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement ID . OPERATION . LexToken((,'(',1,212)
   yacc.py: 445:Action : Shift and goto state 146
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement ID . OPERATION ( . LexToken(),')',1,213)
   yacc.py: 445:Action : Shift and goto state 183
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement ID . OPERATION ( ) . LexToken(;,';',1,214)
   yacc.py: 471:Action : Reduce rule [map_operation -> ID . OPERATION ( )] with ['d','.','size','(',')'] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 430:Defaulted state 62: Reduce using 54
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement map_operation . LexToken(;,';',1,214)
   yacc.py: 471:Action : Reduce rule [statement1 -> map_operation] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement1 . LexToken(;,';',1,214)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement1 ; . LexToken(ID,'d',1,221)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 142
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement . LexToken(ID,'d',1,221)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement ID . LexToken(.,'.',1,222)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement ID . . LexToken(OPERATION,'clear',1,223)
   yacc.py: 445:Action : Shift and goto state 102
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement ID . OPERATION . LexToken((,'(',1,228)
   yacc.py: 445:Action : Shift and goto state 146
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement ID . OPERATION ( . LexToken(),')',1,229)
   yacc.py: 445:Action : Shift and goto state 183
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement ID . OPERATION ( ) . LexToken(;,';',1,230)
   yacc.py: 471:Action : Reduce rule [map_operation -> ID . OPERATION ( )] with ['d','.','clear','(',')'] and goto state 62
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 430:Defaulted state 62: Reduce using 54
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement map_operation . LexToken(;,';',1,230)
   yacc.py: 471:Action : Reduce rule [statement1 -> map_operation] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement1 . LexToken(;,';',1,230)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement1 ; . LexToken(ID,'d',1,237)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 142
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement . LexToken(ID,'d',1,237)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID . LexToken((,'(',1,238)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( . LexToken(CTE_INT,'1',1,239)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 105
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( empty . LexToken(CTE_INT,'1',1,239)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term_not . LexToken(CTE_INT,'1',1,239)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term_not empty . LexToken(CTE_INT,'1',1,239)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term_not factor3 . LexToken(CTE_INT,'1',1,239)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term_not factor3 CTE_INT . LexToken(),')',1,240)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['1'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term_not factor3 varcte . LexToken(),')',1,240)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term_not factor2 . LexToken(),')',1,240)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term_not factor . LexToken(),')',1,240)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term_not factor empty . LexToken(),')',1,240)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term_not factor term2 . LexToken(),')',1,240)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term . LexToken(),')',1,240)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term empty . LexToken(),')',1,240)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( term exp2 . LexToken(),')',1,240)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( exp . LexToken(),')',1,240)
   yacc.py: 445:Action : Shift and goto state 148
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement ID ( exp ) . LexToken(ASSIGNATOR,':=',1,242)
   yacc.py: 471:Action : Reduce rule [map_access -> ID ( exp )] with ['d','(',None,')'] and goto state 70
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 70
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access . LexToken(ASSIGNATOR,':=',1,242)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR . LexToken(ID,'i',1,245)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR empty . LexToken(ID,'i',1,245)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term_not . LexToken(ID,'i',1,245)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term_not empty . LexToken(ID,'i',1,245)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term_not factor3 . LexToken(ID,'i',1,245)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term_not factor3 ID . LexToken(;,';',1,246)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['i'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term_not factor3 varcte . LexToken(;,';',1,246)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term_not factor2 . LexToken(;,';',1,246)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term_not factor . LexToken(;,';',1,246)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term_not factor empty . LexToken(;,';',1,246)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term_not factor term2 . LexToken(;,';',1,246)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term . LexToken(;,';',1,246)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term empty . LexToken(;,';',1,246)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR term exp2 . LexToken(;,';',1,246)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 135
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 430:Defaulted state 135: Reduce using 118
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_access ASSIGNATOR exp . LexToken(;,';',1,246)
   yacc.py: 471:Action : Reduce rule [map_assignment -> map_access ASSIGNATOR exp] with [None,':=',None] and goto state 61
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 430:Defaulted state 61: Reduce using 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement map_assignment . LexToken(;,';',1,246)
   yacc.py: 471:Action : Reduce rule [statement1 -> map_assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement1 . LexToken(;,';',1,246)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement1 ; . LexToken(WHILE,'while',1,253)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 142
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement . LexToken(WHILE,'while',1,253)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE . LexToken((,'(',1,258)
   yacc.py: 445:Action : Shift and goto state 95
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( . LexToken(ID,'i',1,259)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( empty . LexToken(ID,'i',1,259)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term_not . LexToken(ID,'i',1,259)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term_not empty . LexToken(ID,'i',1,259)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term_not factor3 . LexToken(ID,'i',1,259)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term_not factor3 ID . LexToken(LEQ,'<=',1,261)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['i'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term_not factor3 varcte . LexToken(LEQ,'<=',1,261)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term_not factor2 . LexToken(LEQ,'<=',1,261)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term_not factor . LexToken(LEQ,'<=',1,261)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term_not factor empty . LexToken(LEQ,'<=',1,261)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term_not factor term2 . LexToken(LEQ,'<=',1,261)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term . LexToken(LEQ,'<=',1,261)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term empty . LexToken(LEQ,'<=',1,261)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( term exp2 . LexToken(LEQ,'<=',1,261)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp . LexToken(LEQ,'<=',1,261)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp LEQ . LexToken((,'(',1,264)
   yacc.py: 471:Action : Reduce rule [relop -> LEQ] with ['<='] and goto state 116
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop . LexToken((,'(',1,264)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop empty . LexToken((,'(',1,264)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not . LexToken((,'(',1,264)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( . LexToken(ID,'d',1,265)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( empty . LexToken(ID,'d',1,265)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term_not . LexToken(ID,'d',1,265)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term_not empty . LexToken(ID,'d',1,265)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term_not factor3 . LexToken(ID,'d',1,265)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term_not factor3 ID . LexToken(-,'-',1,267)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['d'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term_not factor3 varcte . LexToken(-,'-',1,267)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term_not factor2 . LexToken(-,'-',1,267)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term_not factor . LexToken(-,'-',1,267)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term_not factor empty . LexToken(-,'-',1,267)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term_not factor term2 . LexToken(-,'-',1,267)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term . LexToken(-,'-',1,267)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term - . LexToken(CTE_INT,'4',1,269)
   yacc.py: 471:Action : Reduce rule [addsub -> -] with ['-'] and goto state 125
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub . LexToken(CTE_INT,'4',1,269)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub empty . LexToken(CTE_INT,'4',1,269)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term_not . LexToken(CTE_INT,'4',1,269)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term_not empty . LexToken(CTE_INT,'4',1,269)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term_not factor3 . LexToken(CTE_INT,'4',1,269)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term_not factor3 CTE_INT . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['4'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term_not factor3 varcte . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term_not factor2 . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term_not factor . LexToken(),')',1,270)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term_not factor empty . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term_not factor term2 . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term . LexToken(),')',1,270)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term empty . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 192
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 192
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term addsub term exp2 . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term exp2] with [None,None,None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( term exp2 . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( exp . LexToken(),')',1,270)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( exp empty . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( exp exp02 . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( exp0 . LexToken(),')',1,270)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( exp0 empty . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( exp0 expression1 . LexToken(),')',1,270)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 164
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 164
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( expression . LexToken(),')',1,270)
   yacc.py: 445:Action : Shift and goto state 194
   yacc.py: 410:
   yacc.py: 411:State  : 194
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not ( expression ) . LexToken(),')',1,271)
   yacc.py: 471:Action : Reduce rule [factor -> ( expression )] with ['(',None,')'] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not factor . LexToken(),')',1,271)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not factor empty . LexToken(),')',1,271)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term_not factor term2 . LexToken(),')',1,271)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term . LexToken(),')',1,271)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term empty . LexToken(),')',1,271)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop term exp2 . LexToken(),')',1,271)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop exp . LexToken(),')',1,271)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop exp empty . LexToken(),')',1,271)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop exp exp02 . LexToken(),')',1,271)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 157
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 157
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp relop exp0 . LexToken(),')',1,271)
   yacc.py: 471:Action : Reduce rule [exp02 -> relop exp0] with [None,None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp exp02 . LexToken(),')',1,271)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp0 . LexToken(),')',1,271)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp0 empty . LexToken(),')',1,271)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( exp0 expression1 . LexToken(),')',1,271)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 137
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression . LexToken(),')',1,271)
   yacc.py: 445:Action : Shift and goto state 177
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) . LexToken({,'{',1,273)
   yacc.py: 445:Action : Shift and goto state 197
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { . LexToken(ID,'numbers',1,285)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . LexToken(.,'.',1,292)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . . LexToken(OPERATION,'insert',1,293)
   yacc.py: 445:Action : Shift and goto state 102
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION . LexToken((,'(',1,299)
   yacc.py: 445:Action : Shift and goto state 146
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( . LexToken(ID,'i',1,300)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 185
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 185
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( empty . LexToken(ID,'i',1,300)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not . LexToken(ID,'i',1,300)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not empty . LexToken(ID,'i',1,300)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor3 . LexToken(ID,'i',1,300)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor3 ID . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['i'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor3 varcte . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor2 . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor . LexToken(),')',1,301)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor empty . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor term2 . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term . LexToken(),')',1,301)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term empty . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term exp2 . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp . LexToken(),')',1,301)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp empty . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp exp02 . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp0 . LexToken(),')',1,301)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp0 empty . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp0 expression1 . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 184
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 184
   yacc.py: 430:Defaulted state 184: Reduce using 43
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( expression . LexToken(),')',1,301)
   yacc.py: 471:Action : Reduce rule [set_operation1 -> expression] with [None] and goto state 182
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 182
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( set_operation1 . LexToken(),')',1,301)
   yacc.py: 445:Action : Shift and goto state 200
   yacc.py: 410:
   yacc.py: 411:State  : 200
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { ID . OPERATION ( set_operation1 ) . LexToken(;,';',1,302)
   yacc.py: 471:Action : Reduce rule [set_operation -> ID . OPERATION ( set_operation1 )] with ['numbers','.','insert','(',None,')'] and goto state 58
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 58
   yacc.py: 430:Defaulted state 58: Reduce using 50
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { set_operation . LexToken(;,';',1,302)
   yacc.py: 471:Action : Reduce rule [statement1 -> set_operation] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement1 . LexToken(;,';',1,302)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement1 ; . LexToken(ID,'i',1,314)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement . LexToken(ID,'i',1,314)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID . LexToken(ASSIGNATOR,':=',1,316)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR . LexToken(ID,'i',1,319)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR empty . LexToken(ID,'i',1,319)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term_not . LexToken(ID,'i',1,319)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term_not empty . LexToken(ID,'i',1,319)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term_not factor3 . LexToken(ID,'i',1,319)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term_not factor3 ID . LexToken(+,'+',1,321)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['i'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term_not factor3 varcte . LexToken(+,'+',1,321)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term_not factor2 . LexToken(+,'+',1,321)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term_not factor . LexToken(+,'+',1,321)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term_not factor empty . LexToken(+,'+',1,321)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term_not factor term2 . LexToken(+,'+',1,321)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term . LexToken(+,'+',1,321)
   yacc.py: 445:Action : Shift and goto state 127
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term + . LexToken(CTE_INT,'1',1,323)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 125
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub . LexToken(CTE_INT,'1',1,323)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub empty . LexToken(CTE_INT,'1',1,323)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term_not . LexToken(CTE_INT,'1',1,323)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term_not empty . LexToken(CTE_INT,'1',1,323)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term_not factor3 . LexToken(CTE_INT,'1',1,323)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term_not factor3 CTE_INT . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['1'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term_not factor3 varcte . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term_not factor2 . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term_not factor . LexToken(;,';',1,324)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term_not factor empty . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term_not factor term2 . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term . LexToken(;,';',1,324)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term empty . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 192
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 192
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term addsub term exp2 . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term exp2] with [None,None,None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR term exp2 . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR exp . LexToken(;,';',1,324)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR exp empty . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR exp exp02 . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR exp0 . LexToken(;,';',1,324)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR exp0 empty . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement ID ASSIGNATOR expression . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['i',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement assignment . LexToken(;,';',1,324)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement statement1 . LexToken(;,';',1,324)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement statement1 ; . LexToken(},'}',1,331)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement statement . LexToken(},'}',1,331)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 52
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement statement empty . LexToken(},'}',1,331)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement statement statement_aux . LexToken(},'}',1,331)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement statement_aux . LexToken(},'}',1,331)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 208
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 208
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement_aux . LexToken(},'}',1,331)
   yacc.py: 445:Action : Shift and goto state 211
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) { statement_aux } . LexToken(RETURN,'return',1,338)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 198
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement WHILE ( expression ) block . LexToken(RETURN,'return',1,338)
   yacc.py: 471:Action : Reduce rule [while -> WHILE ( expression ) block] with ['while','(',None,')',None] and goto state 65
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement while . LexToken(RETURN,'return',1,338)
   yacc.py: 471:Action : Reduce rule [statement2 -> while] with [None] and goto state 54
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement2 . LexToken(RETURN,'return',1,338)
   yacc.py: 471:Action : Reduce rule [statement -> statement2] with [None] and goto state 142
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement . LexToken(RETURN,'return',1,338)
   yacc.py: 445:Action : Shift and goto state 69
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN . LexToken(ID,'numbers',1,345)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN empty . LexToken(ID,'numbers',1,345)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term_not . LexToken(ID,'numbers',1,345)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term_not empty . LexToken(ID,'numbers',1,345)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term_not factor3 . LexToken(ID,'numbers',1,345)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term_not factor3 ID . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['numbers'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term_not factor3 varcte . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term_not factor2 . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term_not factor . LexToken(;,';',1,352)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term_not factor empty . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term_not factor term2 . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term . LexToken(;,';',1,352)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term empty . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN term exp2 . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN exp . LexToken(;,';',1,352)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN exp empty . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN exp exp02 . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN exp0 . LexToken(;,';',1,352)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN exp0 empty . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN exp0 expression1 . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 430:Defaulted state 86: Reduce using 41
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement RETURN expression . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [return -> RETURN expression] with ['return',None] and goto state 60
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 430:Defaulted state 60: Reduce using 52
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement return . LexToken(;,';',1,352)
   yacc.py: 471:Action : Reduce rule [statement1 -> return] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement statement1 . LexToken(;,';',1,352)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement statement1 ; . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 142
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement statement . LexToken(},'}',1,354)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 143
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 143
   yacc.py: 430:Defaulted state 143: Reduce using 19
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement statement empty . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [proc4 -> empty] with [None] and goto state 180
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 180
   yacc.py: 430:Defaulted state 180: Reduce using 18
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement statement proc4 . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 180
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 180
   yacc.py: 430:Defaulted state 180: Reduce using 18
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement statement proc4 . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 180
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 180
   yacc.py: 430:Defaulted state 180: Reduce using 18
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement statement proc4 . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 180
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 180
   yacc.py: 430:Defaulted state 180: Reduce using 18
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement statement proc4 . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 180
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 180
   yacc.py: 430:Defaulted state 180: Reduce using 18
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement statement proc4 . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 180
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 180
   yacc.py: 430:Defaulted state 180: Reduce using 18
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var statement proc4 . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [proc4 -> statement proc4] with [None,None] and goto state 141
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 430:Defaulted state 141: Reduce using 17
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var proc4 . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [proc3 -> proc4] with [None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 430:Defaulted state 179: Reduce using 16
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var var proc3 . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [proc3 -> var proc3] with [<str @ 0x7fcc46c8ff70>,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 430:Defaulted state 179: Reduce using 16
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var var proc3 . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [proc3 -> var proc3] with [<str @ 0x7fcc46cb0bb8>,None] and goto state 179
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 179
   yacc.py: 430:Defaulted state 179: Reduce using 16
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { var proc3 . LexToken(},'}',1,354)
   yacc.py: 471:Action : Reduce rule [proc3 -> var proc3] with ['int i',None] and goto state 139
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 139
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { proc3 . LexToken(},'}',1,354)
   yacc.py: 445:Action : Shift and goto state 178
   yacc.py: 410:
   yacc.py: 411:State  : 178
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype ID ( proc1 ) { proc3 } . LexToken(MAIN,'main',1,358)
   yacc.py: 471:Action : Reduce rule [procA -> ID ( proc1 ) { proc3 }] with [<str @ 0x7fcc46cb0b70>,'(',None,')','{',None,'}'] and goto state 25
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc datatype procA . LexToken(MAIN,'main',1,358)
   yacc.py: 471:Action : Reduce rule [proc -> datatype procA] with ['set<int>',None] and goto state 9
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc . LexToken(MAIN,'main',1,358)
   yacc.py: 445:Action : Shift and goto state 20
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN . LexToken({,'{',1,363)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { . LexToken(INT,'int',1,370)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { INT . LexToken(ID,'f1',1,374)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7fcc46cb22d0> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { datatype . LexToken(ID,'f1',1,374)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { datatype ID . LexToken(,,',',1,376)
   yacc.py: 445:Action : Shift and goto state 34
   yacc.py: 410:
   yacc.py: 411:State  : 34
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { datatype ID , . LexToken(ID,'f2',1,378)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { datatype ID , ID . LexToken(,,',',1,380)
   yacc.py: 445:Action : Shift and goto state 34
   yacc.py: 410:
   yacc.py: 411:State  : 34
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { datatype ID , ID , . LexToken(ID,'f3',1,382)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { datatype ID , ID , ID . LexToken(;,';',1,384)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { datatype ID , ID , ID ; . LexToken(INT,'int',1,391)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { datatype ID , ID , ID var2 . LexToken(INT,'int',1,391)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['f3',None] and goto state 46
   yacc.py: 506:Result : <str @ 0x7fcc46cb27a0> ('f3')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { datatype ID , ID , var1 . LexToken(INT,'int',1,391)
   yacc.py: 471:Action : Reduce rule [var1 -> ID , var1] with ['f2',',','f3'] and goto state 46
   yacc.py: 506:Result : <str @ 0x7fcc46cb2880> ('f2 f3')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { datatype ID , var1 . LexToken(INT,'int',1,391)
   yacc.py: 471:Action : Reduce rule [var1 -> ID , var1] with ['f1',',','f2 f3'] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc46c787b0> ('f1 f2 f3')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { datatype var1 . LexToken(INT,'int',1,391)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int','f1 f2 f3'] and goto state 41
   yacc.py: 506:Result : <str @ 0x7fcc46c78570> ('int f1 f2 f3')
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var . LexToken(INT,'int',1,391)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var INT . LexToken(ID,'limit',1,395)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7fcc46cb2a08> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var datatype . LexToken(ID,'limit',1,395)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var datatype ID . LexToken(;,';',1,400)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var datatype ID ; . LexToken(INT,'int',1,407)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var datatype ID var2 . LexToken(INT,'int',1,407)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['limit',None] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc46cb27d8> ('limit')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var datatype var1 . LexToken(INT,'int',1,407)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int','limit'] and goto state 41
   yacc.py: 506:Result : <str @ 0x7fcc46c787b0> ('int limit')
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var . LexToken(INT,'int',1,407)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var INT . LexToken(ID,'cont',1,411)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7fcc46cb2880> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var datatype . LexToken(ID,'cont',1,411)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var datatype ID . LexToken(;,';',1,415)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var datatype ID ; . LexToken(FLOAT,'float',1,422)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var datatype ID var2 . LexToken(FLOAT,'float',1,422)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['cont',None] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc46cb28f0> ('cont')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var datatype var1 . LexToken(FLOAT,'float',1,422)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['int','cont'] and goto state 41
   yacc.py: 506:Result : <str @ 0x7fcc46c8ff70> ('int cont')
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var . LexToken(FLOAT,'float',1,422)
   yacc.py: 445:Action : Shift and goto state 12
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var FLOAT . LexToken(ID,'p',1,428)
   yacc.py: 471:Action : Reduce rule [datatype -> FLOAT] with ['float'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7fcc46cb27d8> ('float')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var datatype . LexToken(ID,'p',1,428)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var datatype ID . LexToken(,,',',1,429)
   yacc.py: 445:Action : Shift and goto state 34
   yacc.py: 410:
   yacc.py: 411:State  : 34
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var datatype ID , . LexToken(ID,'x',1,431)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var datatype ID , ID . LexToken(;,';',1,432)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var datatype ID , ID ; . LexToken(SET,'set',1,439)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var datatype ID , ID var2 . LexToken(SET,'set',1,439)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['x',None] and goto state 46
   yacc.py: 506:Result : <str @ 0x7fcc488d9ce0> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var datatype ID , var1 . LexToken(SET,'set',1,439)
   yacc.py: 471:Action : Reduce rule [var1 -> ID , var1] with ['p',',','x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc46cb2880> ('p x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var datatype var1 . LexToken(SET,'set',1,439)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['float','p x'] and goto state 41
   yacc.py: 506:Result : <str @ 0x7fcc46c8fef0> ('float p x')
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var . LexToken(SET,'set',1,439)
   yacc.py: 445:Action : Shift and goto state 21
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var SET . LexToken(<,'<',1,442)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var SET < . LexToken(INT,'int',1,443)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var SET < INT . LexToken(>,'>',1,446)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 43
   yacc.py: 506:Result : <str @ 0x7fcc46cb2688> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var SET < datatype . LexToken(>,'>',1,446)
   yacc.py: 445:Action : Shift and goto state 74
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var SET < datatype > . LexToken(ID,'fibonacciNumbers',1,448)
   yacc.py: 471:Action : Reduce rule [set_definition -> SET < datatype >] with ['set','<','int','>'] and goto state 16
   yacc.py: 506:Result : <str @ 0x7fcc46c8f270> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var set_definition . LexToken(ID,'fibonacciNumbers',1,448)
   yacc.py: 471:Action : Reduce rule [datatype -> set_definition] with ['set<int>'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7fcc46c8f270> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var datatype . LexToken(ID,'fibonacciNumbers',1,448)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var datatype ID . LexToken(;,';',1,464)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var datatype ID ; . LexToken(SET,'set',1,471)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var datatype ID var2 . LexToken(SET,'set',1,471)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with [<str @ 0x7fcc46cb0b70>,None] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc46cb0b70> ('fibonacciNumbers')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var datatype var1 . LexToken(SET,'set',1,471)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['set<int>',<str @ 0x7fcc46cb0b70>] and goto state 41
   yacc.py: 506:Result : <str @ 0x7fcc46c87cb0> ('set<int> fibonacciNumbers')
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var . LexToken(SET,'set',1,471)
   yacc.py: 445:Action : Shift and goto state 21
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var SET . LexToken(<,'<',1,474)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var SET < . LexToken(INT,'int',1,475)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var SET < INT . LexToken(>,'>',1,478)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 43
   yacc.py: 506:Result : <str @ 0x7fcc46cb27d8> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var SET < datatype . LexToken(>,'>',1,478)
   yacc.py: 445:Action : Shift and goto state 74
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var SET < datatype > . LexToken(ID,'allNumbers',1,480)
   yacc.py: 471:Action : Reduce rule [set_definition -> SET < datatype >] with ['set','<','int','>'] and goto state 16
   yacc.py: 506:Result : <str @ 0x7fcc46c8fe70> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var set_definition . LexToken(ID,'allNumbers',1,480)
   yacc.py: 471:Action : Reduce rule [datatype -> set_definition] with ['set<int>'] and goto state 42
   yacc.py: 506:Result : <str @ 0x7fcc46c8fe70> ('set<int>')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var datatype . LexToken(ID,'allNumbers',1,480)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var datatype ID . LexToken(;,';',1,490)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var datatype ID ; . LexToken(MAP,'map',1,497)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var datatype ID var2 . LexToken(MAP,'map',1,497)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['allNumbers',None] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc46c8f270> ('allNumbers')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var datatype var1 . LexToken(MAP,'map',1,497)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with ['set<int>','allNumbers'] and goto state 41
   yacc.py: 506:Result : <str @ 0x7fcc46cb0b70> ('set<int> allNumbers')
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var . LexToken(MAP,'map',1,497)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var MAP . LexToken(<,'<',1,500)
   yacc.py: 445:Action : Shift and goto state 33
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var MAP < . LexToken(INT,'int',1,501)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var MAP < INT . LexToken(,,',',1,504)
   yacc.py: 471:Action : Reduce rule [datatype -> INT] with ['int'] and goto state 44
   yacc.py: 506:Result : <str @ 0x7fcc46cb2998> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var MAP < datatype . LexToken(,,',',1,504)
   yacc.py: 445:Action : Shift and goto state 75
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var MAP < datatype , . LexToken(STRING,'string',1,506)
   yacc.py: 445:Action : Shift and goto state 14
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var MAP < datatype , STRING . LexToken(>,'>',1,512)
   yacc.py: 471:Action : Reduce rule [datatype -> STRING] with ['string'] and goto state 96
   yacc.py: 506:Result : <str @ 0x7fcc46cb2378> ('string')
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var MAP < datatype , datatype . LexToken(>,'>',1,512)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var MAP < datatype , datatype > . LexToken(ID,'a',1,514)
   yacc.py: 471:Action : Reduce rule [map_definition -> MAP < datatype , datatype >] with ['map','<','int',',','string','>'] and goto state 17
   yacc.py: 506:Result : <str @ 0x7fcc46c8fe70> ('map<int,string>')
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var map_definition . LexToken(ID,'a',1,514)
   yacc.py: 471:Action : Reduce rule [datatype -> map_definition] with [<str @ 0x7fcc46c8fe70>] and goto state 42
   yacc.py: 506:Result : <str @ 0x7fcc46c8fe70> ('map<int,string>')
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var datatype . LexToken(ID,'a',1,514)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var datatype ID . LexToken(;,';',1,515)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var datatype ID ; . LexToken(ID,'f1',1,524)
   yacc.py: 471:Action : Reduce rule [var2 -> ;] with [';'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var datatype ID var2 . LexToken(ID,'f1',1,524)
   yacc.py: 471:Action : Reduce rule [var1 -> ID var2] with ['a',None] and goto state 24
   yacc.py: 506:Result : <str @ 0x7fcc48808ce0> ('a')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var datatype var1 . LexToken(ID,'f1',1,524)
   yacc.py: 471:Action : Reduce rule [var -> datatype var1] with [<str @ 0x7fcc46c8fe70>,'a'] and goto state 41
   yacc.py: 506:Result : <str @ 0x7fcc46cb0bb8> ('map<int,string> a')
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var var . LexToken(ID,'f1',1,524)
   yacc.py: 471:Action : Reduce rule [vars -> var] with [<str @ 0x7fcc46cb0bb8>] and goto state 73
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var var vars . LexToken(ID,'f1',1,524)
   yacc.py: 471:Action : Reduce rule [vars -> var vars] with [<str @ 0x7fcc46cb0b70>,None] and goto state 73
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var var vars . LexToken(ID,'f1',1,524)
   yacc.py: 471:Action : Reduce rule [vars -> var vars] with [<str @ 0x7fcc46c87cb0>,None] and goto state 73
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var var vars . LexToken(ID,'f1',1,524)
   yacc.py: 471:Action : Reduce rule [vars -> var vars] with ['float p x',None] and goto state 73
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var var vars . LexToken(ID,'f1',1,524)
   yacc.py: 471:Action : Reduce rule [vars -> var vars] with ['int cont',None] and goto state 73
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var var vars . LexToken(ID,'f1',1,524)
   yacc.py: 471:Action : Reduce rule [vars -> var vars] with ['int limit',None] and goto state 73
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { var vars . LexToken(ID,'f1',1,524)
   yacc.py: 471:Action : Reduce rule [vars -> var vars] with ['int f1 f2 f3',None] and goto state 39
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars . LexToken(ID,'f1',1,524)
   yacc.py: 471:Action : Reduce rule [vars_aux -> vars] with [None] and goto state 38
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux . LexToken(ID,'f1',1,524)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID . LexToken(ASSIGNATOR,':=',1,527)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR . LexToken(CTE_INT,'0',1,530)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR empty . LexToken(CTE_INT,'0',1,530)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term_not . LexToken(CTE_INT,'0',1,530)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term_not empty . LexToken(CTE_INT,'0',1,530)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term_not factor3 . LexToken(CTE_INT,'0',1,530)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term_not factor3 CTE_INT . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['0'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term_not factor3 varcte . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term_not factor2 . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term_not factor . LexToken(;,';',1,531)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term_not factor empty . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term_not factor term2 . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term . LexToken(;,';',1,531)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term empty . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR term exp2 . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR exp . LexToken(;,';',1,531)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR exp empty . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR exp exp02 . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR exp0 . LexToken(;,';',1,531)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR exp0 empty . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux ID ASSIGNATOR expression . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['f1',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux assignment . LexToken(;,';',1,531)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement1 . LexToken(;,';',1,531)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement1 ; . LexToken(ID,'f2',1,538)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement . LexToken(ID,'f2',1,538)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID . LexToken(ASSIGNATOR,':=',1,541)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR . LexToken(CTE_INT,'1',1,544)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR empty . LexToken(CTE_INT,'1',1,544)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term_not . LexToken(CTE_INT,'1',1,544)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term_not empty . LexToken(CTE_INT,'1',1,544)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term_not factor3 . LexToken(CTE_INT,'1',1,544)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term_not factor3 CTE_INT . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['1'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term_not factor3 varcte . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term_not factor2 . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term_not factor . LexToken(;,';',1,545)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term_not factor empty . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term_not factor term2 . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term . LexToken(;,';',1,545)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term empty . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR term exp2 . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR exp . LexToken(;,';',1,545)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR exp empty . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR exp exp02 . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR exp0 . LexToken(;,';',1,545)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR exp0 empty . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement ID ASSIGNATOR expression . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['f2',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement assignment . LexToken(;,';',1,545)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement1 . LexToken(;,';',1,545)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement1 ; . LexToken(ID,'f3',1,552)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement . LexToken(ID,'f3',1,552)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID . LexToken(ASSIGNATOR,':=',1,555)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR . LexToken(ID,'f1',1,558)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR empty . LexToken(ID,'f1',1,558)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term_not . LexToken(ID,'f1',1,558)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term_not empty . LexToken(ID,'f1',1,558)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term_not factor3 . LexToken(ID,'f1',1,558)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term_not factor3 ID . LexToken(+,'+',1,561)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['f1'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term_not factor3 varcte . LexToken(+,'+',1,561)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term_not factor2 . LexToken(+,'+',1,561)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term_not factor . LexToken(+,'+',1,561)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term_not factor empty . LexToken(+,'+',1,561)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term_not factor term2 . LexToken(+,'+',1,561)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term . LexToken(+,'+',1,561)
   yacc.py: 445:Action : Shift and goto state 127
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term + . LexToken(ID,'f2',1,563)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 125
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub . LexToken(ID,'f2',1,563)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub empty . LexToken(ID,'f2',1,563)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term_not . LexToken(ID,'f2',1,563)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term_not empty . LexToken(ID,'f2',1,563)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term_not factor3 . LexToken(ID,'f2',1,563)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term_not factor3 ID . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['f2'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term_not factor3 varcte . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term_not factor2 . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term_not factor . LexToken(;,';',1,565)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term_not factor empty . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term_not factor term2 . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term . LexToken(;,';',1,565)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term empty . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 192
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 192
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term addsub term exp2 . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term exp2] with [None,None,None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR term exp2 . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR exp . LexToken(;,';',1,565)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR exp empty . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR exp exp02 . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR exp0 . LexToken(;,';',1,565)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR exp0 empty . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement ID ASSIGNATOR expression . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['f3',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement assignment . LexToken(;,';',1,565)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement1 . LexToken(;,';',1,565)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement1 ; . LexToken(READ,'read',1,572)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement . LexToken(READ,'read',1,572)
   yacc.py: 445:Action : Shift and goto state 67
   yacc.py: 410:
   yacc.py: 411:State  : 67
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement READ . LexToken((,'(',1,576)
   yacc.py: 445:Action : Shift and goto state 84
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement READ ( . LexToken(ID,'limit',1,577)
   yacc.py: 445:Action : Shift and goto state 108
   yacc.py: 410:
   yacc.py: 411:State  : 108
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement READ ( ID . LexToken(),')',1,582)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 152
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 152
   yacc.py: 430:Defaulted state 152: Reduce using 32
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement READ ( ID empty . LexToken(),')',1,582)
   yacc.py: 471:Action : Reduce rule [input1 -> empty] with [None] and goto state 150
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement READ ( ID input1 . LexToken(),')',1,582)
   yacc.py: 445:Action : Shift and goto state 187
   yacc.py: 410:
   yacc.py: 411:State  : 187
   yacc.py: 430:Defaulted state 187: Reduce using 30
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement READ ( ID input1 ) . None
   yacc.py: 471:Action : Reduce rule [input -> READ ( ID input1 )] with ['read','(','limit',None,')'] and goto state 56
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 430:Defaulted state 56: Reduce using 48
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement input . None
   yacc.py: 471:Action : Reduce rule [statement1 -> input] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement1 . LexToken(;,';',1,583)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement1 ; . LexToken(ID,'a',1,590)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement . LexToken(ID,'a',1,590)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID . LexToken((,'(',1,591)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( . LexToken(CTE_INT,'3',1,592)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 105
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( empty . LexToken(CTE_INT,'3',1,592)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term_not . LexToken(CTE_INT,'3',1,592)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term_not empty . LexToken(CTE_INT,'3',1,592)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term_not factor3 . LexToken(CTE_INT,'3',1,592)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term_not factor3 CTE_INT . LexToken(),')',1,593)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['3'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term_not factor3 varcte . LexToken(),')',1,593)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term_not factor2 . LexToken(),')',1,593)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term_not factor . LexToken(),')',1,593)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term_not factor empty . LexToken(),')',1,593)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term_not factor term2 . LexToken(),')',1,593)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term . LexToken(),')',1,593)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term empty . LexToken(),')',1,593)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( term exp2 . LexToken(),')',1,593)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( exp . LexToken(),')',1,593)
   yacc.py: 445:Action : Shift and goto state 148
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement ID ( exp ) . LexToken(ASSIGNATOR,':=',1,595)
   yacc.py: 471:Action : Reduce rule [map_access -> ID ( exp )] with ['a','(',None,')'] and goto state 70
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 70
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access . LexToken(ASSIGNATOR,':=',1,595)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR . LexToken(CTE_INT,'3',1,598)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR empty . LexToken(CTE_INT,'3',1,598)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not . LexToken(CTE_INT,'3',1,598)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not empty . LexToken(CTE_INT,'3',1,598)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor3 . LexToken(CTE_INT,'3',1,598)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor3 CTE_INT . LexToken(*,'*',1,600)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['3'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor3 varcte . LexToken(*,'*',1,600)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor2 . LexToken(*,'*',1,600)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor . LexToken(*,'*',1,600)
   yacc.py: 445:Action : Shift and goto state 162
   yacc.py: 410:
   yacc.py: 411:State  : 162
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor * . LexToken(ID,'allNumbers',1,602)
   yacc.py: 471:Action : Reduce rule [muldiv -> *] with ['*'] and goto state 160
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 160
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv . LexToken(ID,'allNumbers',1,602)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv empty . LexToken(ID,'allNumbers',1,602)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor3 . LexToken(ID,'allNumbers',1,602)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor3 ID . LexToken(.,'.',1,612)
   yacc.py: 445:Action : Shift and goto state 195
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor3 ID . . LexToken(OPERATION,'size',1,613)
   yacc.py: 445:Action : Shift and goto state 204
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor3 ID . OPERATION . LexToken((,'(',1,617)
   yacc.py: 445:Action : Shift and goto state 209
   yacc.py: 410:
   yacc.py: 411:State  : 209
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor3 ID . OPERATION ( . LexToken(),')',1,618)
   yacc.py: 445:Action : Shift and goto state 183
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor3 ID . OPERATION ( ) . LexToken(;,';',1,619)
   yacc.py: 471:Action : Reduce rule [map_operation -> ID . OPERATION ( )] with ['allNumbers','.','size','(',')'] and goto state 174
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 174
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor3 map_operation . LexToken(;,';',1,619)
   yacc.py: 471:Action : Reduce rule [varcte -> map_operation] with [None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor3 varcte . LexToken(;,';',1,619)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor2 . LexToken(;,';',1,619)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 193
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 193
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor . LexToken(;,';',1,619)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor empty . LexToken(;,';',1,619)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 203
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor muldiv factor term2 . LexToken(;,';',1,619)
   yacc.py: 471:Action : Reduce rule [term2 -> muldiv factor term2] with [None,None,None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term_not factor term2 . LexToken(;,';',1,619)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term . LexToken(;,';',1,619)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term empty . LexToken(;,';',1,619)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR term exp2 . LexToken(;,';',1,619)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 135
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 430:Defaulted state 135: Reduce using 118
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_access ASSIGNATOR exp . LexToken(;,';',1,619)
   yacc.py: 471:Action : Reduce rule [map_assignment -> map_access ASSIGNATOR exp] with [None,':=',None] and goto state 61
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 430:Defaulted state 61: Reduce using 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement map_assignment . LexToken(;,';',1,619)
   yacc.py: 471:Action : Reduce rule [statement1 -> map_assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement1 . LexToken(;,';',1,619)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement1 ; . LexToken(PRINT,'print',1,626)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement . LexToken(PRINT,'print',1,626)
   yacc.py: 445:Action : Shift and goto state 68
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT . LexToken((,'(',1,631)
   yacc.py: 445:Action : Shift and goto state 85
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( . LexToken(ID,'a',1,632)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( empty . LexToken(ID,'a',1,632)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not . LexToken(ID,'a',1,632)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not empty . LexToken(ID,'a',1,632)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 . LexToken(ID,'a',1,632)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID . LexToken((,'(',1,633)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( . LexToken(CTE_INT,'3',1,634)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 105
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( empty . LexToken(CTE_INT,'3',1,634)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term_not . LexToken(CTE_INT,'3',1,634)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term_not empty . LexToken(CTE_INT,'3',1,634)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term_not factor3 . LexToken(CTE_INT,'3',1,634)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term_not factor3 CTE_INT . LexToken(),')',1,635)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['3'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term_not factor3 varcte . LexToken(),')',1,635)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term_not factor2 . LexToken(),')',1,635)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term_not factor . LexToken(),')',1,635)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term_not factor empty . LexToken(),')',1,635)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term_not factor term2 . LexToken(),')',1,635)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term . LexToken(),')',1,635)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term empty . LexToken(),')',1,635)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( term exp2 . LexToken(),')',1,635)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( exp . LexToken(),')',1,635)
   yacc.py: 445:Action : Shift and goto state 148
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 ID ( exp ) . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [map_access -> ID ( exp )] with ['a','(',None,')'] and goto state 173
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 map_access . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [varcte -> map_access] with [None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor3 varcte . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor2 . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor . LexToken(),')',1,636)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor empty . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term_not factor term2 . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term . LexToken(),')',1,636)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term empty . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( term exp2 . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( exp . LexToken(),')',1,636)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( exp empty . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( exp exp02 . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( exp0 . LexToken(),')',1,636)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( exp0 empty . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( exp0 expression1 . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( expression . LexToken(),')',1,636)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 155
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 430:Defaulted state 155: Reduce using 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( expression empty . LexToken(),')',1,636)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 153
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( expression output1 . LexToken(),')',1,636)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 33
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement PRINT ( expression output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( expression output1 )] with ['print','(',None,None,')'] and goto state 57
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 430:Defaulted state 57: Reduce using 49
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement1 . LexToken(;,';',1,637)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement1 ; . LexToken(ID,'allNumbers',1,646)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement . LexToken(ID,'allNumbers',1,646)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID . LexToken(ASSIGNATOR,':=',1,657)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR . LexToken(ID,'allNumbersLessThan',1,660)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR empty . LexToken(ID,'allNumbersLessThan',1,660)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not . LexToken(ID,'allNumbersLessThan',1,660)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not empty . LexToken(ID,'allNumbersLessThan',1,660)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 . LexToken(ID,'allNumbersLessThan',1,660)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID . LexToken((,'(',1,678)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( . LexToken(ID,'limit',1,679)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 105
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( empty . LexToken(ID,'limit',1,679)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term_not . LexToken(ID,'limit',1,679)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term_not empty . LexToken(ID,'limit',1,679)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term_not factor3 . LexToken(ID,'limit',1,679)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term_not factor3 ID . LexToken(),')',1,684)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['limit'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term_not factor3 varcte . LexToken(),')',1,684)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term_not factor2 . LexToken(),')',1,684)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term_not factor . LexToken(),')',1,684)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term_not factor empty . LexToken(),')',1,684)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term_not factor term2 . LexToken(),')',1,684)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term . LexToken(),')',1,684)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term empty . LexToken(),')',1,684)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( term exp2 . LexToken(),')',1,684)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( exp . LexToken(),')',1,684)
   yacc.py: 445:Action : Shift and goto state 148
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID ( exp ) . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [map_access -> ID ( exp )] with [<str @ 0x7fcc46cb0bb8>,'(',None,')'] and goto state 173
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 map_access . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [varcte -> map_access] with [None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 varcte . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor2 . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor . LexToken(;,';',1,685)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor empty . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term_not factor term2 . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term . LexToken(;,';',1,685)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term empty . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR term exp2 . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR exp . LexToken(;,';',1,685)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR exp empty . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR exp exp02 . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR exp0 . LexToken(;,';',1,685)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR exp0 empty . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement ID ASSIGNATOR expression . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['allNumbers',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement assignment . LexToken(;,';',1,685)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement1 . LexToken(;,';',1,685)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement1 ; . LexToken(ID,'something',1,692)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement . LexToken(ID,'something',1,692)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID . LexToken((,'(',1,701)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( . LexToken(CTE_INT,'123',1,702)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 105
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( empty . LexToken(CTE_INT,'123',1,702)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term_not . LexToken(CTE_INT,'123',1,702)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term_not empty . LexToken(CTE_INT,'123',1,702)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term_not factor3 . LexToken(CTE_INT,'123',1,702)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term_not factor3 CTE_INT . LexToken(,,',',1,705)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['123'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term_not factor3 varcte . LexToken(,,',',1,705)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term_not factor2 . LexToken(,,',',1,705)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term_not factor . LexToken(,,',',1,705)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term_not factor empty . LexToken(,,',',1,705)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term_not factor term2 . LexToken(,,',',1,705)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term . LexToken(,,',',1,705)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term empty . LexToken(,,',',1,705)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( term exp2 . LexToken(,,',',1,705)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( exp . LexToken(,,',',1,705)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( exp empty . LexToken(,,',',1,705)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( exp exp02 . LexToken(,,',',1,705)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( exp0 . LexToken(,,',',1,705)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( exp0 empty . LexToken(,,',',1,705)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( exp0 expression1 . LexToken(,,',',1,705)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression . LexToken(,,',',1,705)
   yacc.py: 445:Action : Shift and goto state 149
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , . LexToken(CTE_STRING,'"a"',1,707)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , empty . LexToken(CTE_STRING,'"a"',1,707)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term_not . LexToken(CTE_STRING,'"a"',1,707)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term_not empty . LexToken(CTE_STRING,'"a"',1,707)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term_not factor3 . LexToken(CTE_STRING,'"a"',1,707)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term_not factor3 CTE_STRING . LexToken(,,',',1,710)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_STRING] with ['"a"'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term_not factor3 varcte . LexToken(,,',',1,710)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term_not factor2 . LexToken(,,',',1,710)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term_not factor . LexToken(,,',',1,710)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term_not factor empty . LexToken(,,',',1,710)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term_not factor term2 . LexToken(,,',',1,710)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term . LexToken(,,',',1,710)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term empty . LexToken(,,',',1,710)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , term exp2 . LexToken(,,',',1,710)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , exp . LexToken(,,',',1,710)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , exp empty . LexToken(,,',',1,710)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , exp exp02 . LexToken(,,',',1,710)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , exp0 . LexToken(,,',',1,710)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , exp0 empty . LexToken(,,',',1,710)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , exp0 expression1 . LexToken(,,',',1,710)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression . LexToken(,,',',1,710)
   yacc.py: 445:Action : Shift and goto state 149
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , . LexToken(ID,'allNumbers',1,712)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , empty . LexToken(ID,'allNumbers',1,712)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term_not . LexToken(ID,'allNumbers',1,712)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term_not empty . LexToken(ID,'allNumbers',1,712)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term_not factor3 . LexToken(ID,'allNumbers',1,712)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term_not factor3 ID . LexToken(,,',',1,722)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['allNumbers'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term_not factor3 varcte . LexToken(,,',',1,722)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term_not factor2 . LexToken(,,',',1,722)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term_not factor . LexToken(,,',',1,722)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term_not factor empty . LexToken(,,',',1,722)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term_not factor term2 . LexToken(,,',',1,722)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term . LexToken(,,',',1,722)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term empty . LexToken(,,',',1,722)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , term exp2 . LexToken(,,',',1,722)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , exp . LexToken(,,',',1,722)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , exp empty . LexToken(,,',',1,722)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , exp exp02 . LexToken(,,',',1,722)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , exp0 . LexToken(,,',',1,722)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , exp0 empty . LexToken(,,',',1,722)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , exp0 expression1 . LexToken(,,',',1,722)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression . LexToken(,,',',1,722)
   yacc.py: 445:Action : Shift and goto state 149
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , . LexToken(ID,'b',1,724)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , empty . LexToken(ID,'b',1,724)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not . LexToken(ID,'b',1,724)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not empty . LexToken(ID,'b',1,724)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor3 . LexToken(ID,'b',1,724)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor3 ID . LexToken(.,'.',1,725)
   yacc.py: 445:Action : Shift and goto state 195
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor3 ID . . LexToken(OPERATION,'size',1,726)
   yacc.py: 445:Action : Shift and goto state 204
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor3 ID . OPERATION . LexToken((,'(',1,730)
   yacc.py: 445:Action : Shift and goto state 209
   yacc.py: 410:
   yacc.py: 411:State  : 209
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor3 ID . OPERATION ( . LexToken(),')',1,731)
   yacc.py: 445:Action : Shift and goto state 183
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor3 ID . OPERATION ( ) . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [map_operation -> ID . OPERATION ( )] with ['b','.','size','(',')'] and goto state 174
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 174
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor3 map_operation . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [varcte -> map_operation] with [None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor3 varcte . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor2 . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor . LexToken(),')',1,732)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor empty . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term_not factor term2 . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term . LexToken(),')',1,732)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term empty . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , term exp2 . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , exp . LexToken(),')',1,732)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , exp empty . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , exp exp02 . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , exp0 . LexToken(),')',1,732)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , exp0 empty . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , exp0 expression1 . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , expression . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [function_call2 -> expression] with [None] and goto state 186
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 430:Defaulted state 186: Reduce using 39
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , expression , function_call2 . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [function_call2 -> expression , function_call2] with [None,',',None] and goto state 186
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 430:Defaulted state 186: Reduce using 39
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , expression , function_call2 . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [function_call2 -> expression , function_call2] with [None,',',None] and goto state 186
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 430:Defaulted state 186: Reduce using 39
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( expression , function_call2 . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [function_call2 -> expression , function_call2] with [None,',',None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 430:Defaulted state 106: Reduce using 38
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( function_call2 . LexToken(),')',1,732)
   yacc.py: 471:Action : Reduce rule [function_call1 -> function_call2] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( function_call1 . LexToken(),')',1,732)
   yacc.py: 445:Action : Shift and goto state 147
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement ID ( function_call1 ) . LexToken(;,';',1,733)
   yacc.py: 471:Action : Reduce rule [function_call -> ID ( function_call1 )] with ['something','(',None,')'] and goto state 63
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 430:Defaulted state 63: Reduce using 55
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement function_call . LexToken(;,';',1,733)
   yacc.py: 471:Action : Reduce rule [statement1 -> function_call] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement1 . LexToken(;,';',1,733)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement1 ; . LexToken(PRINT,'print',1,741)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement . LexToken(PRINT,'print',1,741)
   yacc.py: 445:Action : Shift and goto state 68
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT . LexToken((,'(',1,746)
   yacc.py: 445:Action : Shift and goto state 85
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( . LexToken(CTE_BOOL,'true',1,747)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( empty . LexToken(CTE_BOOL,'true',1,747)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term_not . LexToken(CTE_BOOL,'true',1,747)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term_not empty . LexToken(CTE_BOOL,'true',1,747)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term_not factor3 . LexToken(CTE_BOOL,'true',1,747)
   yacc.py: 445:Action : Shift and goto state 169
   yacc.py: 410:
   yacc.py: 411:State  : 169
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term_not factor3 CTE_BOOL . LexToken(EQ,'==',1,752)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_BOOL] with ['true'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term_not factor3 varcte . LexToken(EQ,'==',1,752)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term_not factor2 . LexToken(EQ,'==',1,752)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term_not factor . LexToken(EQ,'==',1,752)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term_not factor empty . LexToken(EQ,'==',1,752)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term_not factor term2 . LexToken(EQ,'==',1,752)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term . LexToken(EQ,'==',1,752)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term empty . LexToken(EQ,'==',1,752)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( term exp2 . LexToken(EQ,'==',1,752)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp . LexToken(EQ,'==',1,752)
   yacc.py: 445:Action : Shift and goto state 121
   yacc.py: 410:
   yacc.py: 411:State  : 121
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp EQ . LexToken(CTE_BOOL,'false',1,755)
   yacc.py: 471:Action : Reduce rule [relop -> EQ] with ['=='] and goto state 116
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop . LexToken(CTE_BOOL,'false',1,755)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop empty . LexToken(CTE_BOOL,'false',1,755)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term_not . LexToken(CTE_BOOL,'false',1,755)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term_not empty . LexToken(CTE_BOOL,'false',1,755)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term_not factor3 . LexToken(CTE_BOOL,'false',1,755)
   yacc.py: 445:Action : Shift and goto state 169
   yacc.py: 410:
   yacc.py: 411:State  : 169
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term_not factor3 CTE_BOOL . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_BOOL] with ['false'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term_not factor3 varcte . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term_not factor2 . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term_not factor . LexToken(),')',1,760)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term_not factor empty . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term_not factor term2 . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term . LexToken(),')',1,760)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term empty . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop term exp2 . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop exp . LexToken(),')',1,760)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop exp empty . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop exp exp02 . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 157
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 157
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp relop exp0 . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [exp02 -> relop exp0] with [None,None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp exp02 . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp0 . LexToken(),')',1,760)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp0 empty . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( exp0 expression1 . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( expression . LexToken(),')',1,760)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 155
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 430:Defaulted state 155: Reduce using 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( expression empty . LexToken(),')',1,760)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 153
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( expression output1 . LexToken(),')',1,760)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 33
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement PRINT ( expression output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( expression output1 )] with ['print','(',None,None,')'] and goto state 57
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 430:Defaulted state 57: Reduce using 49
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement1 . LexToken(;,';',1,761)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement1 ; . LexToken(WHILE,'while',1,769)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement . LexToken(WHILE,'while',1,769)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE . LexToken((,'(',1,774)
   yacc.py: 445:Action : Shift and goto state 95
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( . LexToken(ID,'f3',1,775)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( empty . LexToken(ID,'f3',1,775)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term_not . LexToken(ID,'f3',1,775)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term_not empty . LexToken(ID,'f3',1,775)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term_not factor3 . LexToken(ID,'f3',1,775)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term_not factor3 ID . LexToken(LEQ,'<=',1,778)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['f3'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term_not factor3 varcte . LexToken(LEQ,'<=',1,778)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term_not factor2 . LexToken(LEQ,'<=',1,778)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term_not factor . LexToken(LEQ,'<=',1,778)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term_not factor empty . LexToken(LEQ,'<=',1,778)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term_not factor term2 . LexToken(LEQ,'<=',1,778)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term . LexToken(LEQ,'<=',1,778)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term empty . LexToken(LEQ,'<=',1,778)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( term exp2 . LexToken(LEQ,'<=',1,778)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp . LexToken(LEQ,'<=',1,778)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp LEQ . LexToken(ID,'limit',1,781)
   yacc.py: 471:Action : Reduce rule [relop -> LEQ] with ['<='] and goto state 116
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop . LexToken(ID,'limit',1,781)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop empty . LexToken(ID,'limit',1,781)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term_not . LexToken(ID,'limit',1,781)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term_not empty . LexToken(ID,'limit',1,781)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term_not factor3 . LexToken(ID,'limit',1,781)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term_not factor3 ID . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['limit'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term_not factor3 varcte . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term_not factor2 . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term_not factor . LexToken(),')',1,786)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term_not factor empty . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term_not factor term2 . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term . LexToken(),')',1,786)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term empty . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop term exp2 . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop exp . LexToken(),')',1,786)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop exp empty . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop exp exp02 . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 157
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 157
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp relop exp0 . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [exp02 -> relop exp0] with [None,None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp exp02 . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp0 . LexToken(),')',1,786)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp0 empty . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( exp0 expression1 . LexToken(),')',1,786)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 137
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression . LexToken(),')',1,786)
   yacc.py: 445:Action : Shift and goto state 177
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) . LexToken({,'{',1,788)
   yacc.py: 445:Action : Shift and goto state 197
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { . LexToken(ID,'fibonacciNumbers',1,800)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . LexToken(.,'.',1,816)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . . LexToken(OPERATION,'insert',1,817)
   yacc.py: 445:Action : Shift and goto state 102
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION . LexToken((,'(',1,823)
   yacc.py: 445:Action : Shift and goto state 146
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( . LexToken(ID,'f3',1,824)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 185
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 185
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( empty . LexToken(ID,'f3',1,824)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not . LexToken(ID,'f3',1,824)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not empty . LexToken(ID,'f3',1,824)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor3 . LexToken(ID,'f3',1,824)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor3 ID . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['f3'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor3 varcte . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor2 . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor . LexToken(),')',1,826)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor empty . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term_not factor term2 . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term . LexToken(),')',1,826)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term empty . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( term exp2 . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp . LexToken(),')',1,826)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp empty . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp exp02 . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp0 . LexToken(),')',1,826)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp0 empty . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( exp0 expression1 . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 184
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 184
   yacc.py: 430:Defaulted state 184: Reduce using 43
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( expression . LexToken(),')',1,826)
   yacc.py: 471:Action : Reduce rule [set_operation1 -> expression] with [None] and goto state 182
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 182
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( set_operation1 . LexToken(),')',1,826)
   yacc.py: 445:Action : Shift and goto state 200
   yacc.py: 410:
   yacc.py: 411:State  : 200
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { ID . OPERATION ( set_operation1 ) . LexToken(;,';',1,827)
   yacc.py: 471:Action : Reduce rule [set_operation -> ID . OPERATION ( set_operation1 )] with [<str @ 0x7fcc46cb0bb8>,'.','insert','(',None,')'] and goto state 58
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 58
   yacc.py: 430:Defaulted state 58: Reduce using 50
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { set_operation . LexToken(;,';',1,827)
   yacc.py: 471:Action : Reduce rule [statement1 -> set_operation] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement1 . LexToken(;,';',1,827)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement1 ; . LexToken(PRINT,'print',1,839)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement . LexToken(PRINT,'print',1,839)
   yacc.py: 445:Action : Shift and goto state 68
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT . LexToken((,'(',1,844)
   yacc.py: 445:Action : Shift and goto state 85
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( . LexToken(ID,'f3',1,845)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( empty . LexToken(ID,'f3',1,845)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term_not . LexToken(ID,'f3',1,845)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term_not empty . LexToken(ID,'f3',1,845)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term_not factor3 . LexToken(ID,'f3',1,845)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term_not factor3 ID . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['f3'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term_not factor3 varcte . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term_not factor2 . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term_not factor . LexToken(),')',1,847)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term_not factor empty . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term_not factor term2 . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term . LexToken(),')',1,847)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term empty . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( term exp2 . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( exp . LexToken(),')',1,847)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( exp empty . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( exp exp02 . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( exp0 . LexToken(),')',1,847)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( exp0 empty . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( exp0 expression1 . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( expression . LexToken(),')',1,847)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 155
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 430:Defaulted state 155: Reduce using 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( expression empty . LexToken(),')',1,847)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 153
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( expression output1 . LexToken(),')',1,847)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 33
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement PRINT ( expression output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( expression output1 )] with ['print','(',None,None,')'] and goto state 57
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 430:Defaulted state 57: Reduce using 49
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement1 . LexToken(;,';',1,848)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement1 ; . LexToken(PRINT,'print',1,860)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement . LexToken(PRINT,'print',1,860)
   yacc.py: 445:Action : Shift and goto state 68
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT . LexToken((,'(',1,865)
   yacc.py: 445:Action : Shift and goto state 85
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( . LexToken(CTE_STRING,'""',1,866)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( empty . LexToken(CTE_STRING,'""',1,866)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term_not . LexToken(CTE_STRING,'""',1,866)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term_not empty . LexToken(CTE_STRING,'""',1,866)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term_not factor3 . LexToken(CTE_STRING,'""',1,866)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term_not factor3 CTE_STRING . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_STRING] with ['""'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term_not factor3 varcte . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term_not factor2 . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term_not factor . LexToken(),')',1,868)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term_not factor empty . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term_not factor term2 . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term . LexToken(),')',1,868)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term empty . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( term exp2 . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( exp . LexToken(),')',1,868)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( exp empty . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( exp exp02 . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( exp0 . LexToken(),')',1,868)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( exp0 empty . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( exp0 expression1 . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( expression . LexToken(),')',1,868)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 155
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 430:Defaulted state 155: Reduce using 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( expression empty . LexToken(),')',1,868)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 153
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( expression output1 . LexToken(),')',1,868)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 33
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement PRINT ( expression output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( expression output1 )] with ['print','(',None,None,')'] and goto state 57
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 430:Defaulted state 57: Reduce using 49
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement1 . LexToken(;,';',1,869)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement1 ; . LexToken(ID,'f1',1,881)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement . LexToken(ID,'f1',1,881)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID . LexToken(ASSIGNATOR,':=',1,884)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR . LexToken(ID,'f2',1,887)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR empty . LexToken(ID,'f2',1,887)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term_not . LexToken(ID,'f2',1,887)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term_not empty . LexToken(ID,'f2',1,887)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term_not factor3 . LexToken(ID,'f2',1,887)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term_not factor3 ID . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['f2'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term_not factor3 varcte . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term_not factor2 . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term_not factor . LexToken(;,';',1,889)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term_not factor empty . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term_not factor term2 . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term . LexToken(;,';',1,889)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term empty . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR term exp2 . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR exp . LexToken(;,';',1,889)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR exp empty . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR exp exp02 . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR exp0 . LexToken(;,';',1,889)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR exp0 empty . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement ID ASSIGNATOR expression . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['f1',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement assignment . LexToken(;,';',1,889)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement1 . LexToken(;,';',1,889)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement1 ; . LexToken(ID,'f2',1,901)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement . LexToken(ID,'f2',1,901)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID . LexToken(ASSIGNATOR,':=',1,904)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR . LexToken(ID,'f3',1,907)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR empty . LexToken(ID,'f3',1,907)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term_not . LexToken(ID,'f3',1,907)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term_not empty . LexToken(ID,'f3',1,907)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term_not factor3 . LexToken(ID,'f3',1,907)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term_not factor3 ID . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['f3'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term_not factor3 varcte . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term_not factor2 . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term_not factor . LexToken(;,';',1,909)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term_not factor empty . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term_not factor term2 . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term . LexToken(;,';',1,909)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term empty . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR term exp2 . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR exp . LexToken(;,';',1,909)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR exp empty . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR exp exp02 . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR exp0 . LexToken(;,';',1,909)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR exp0 empty . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement ID ASSIGNATOR expression . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['f2',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement assignment . LexToken(;,';',1,909)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement1 . LexToken(;,';',1,909)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement1 ; . LexToken(ID,'f3',1,921)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement . LexToken(ID,'f3',1,921)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID . LexToken(ASSIGNATOR,':=',1,924)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR . LexToken(ID,'f1',1,927)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR empty . LexToken(ID,'f1',1,927)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term_not . LexToken(ID,'f1',1,927)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term_not empty . LexToken(ID,'f1',1,927)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term_not factor3 . LexToken(ID,'f1',1,927)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID . LexToken(+,'+',1,930)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['f1'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term_not factor3 varcte . LexToken(+,'+',1,930)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term_not factor2 . LexToken(+,'+',1,930)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term_not factor . LexToken(+,'+',1,930)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term_not factor empty . LexToken(+,'+',1,930)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term_not factor term2 . LexToken(+,'+',1,930)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term . LexToken(+,'+',1,930)
   yacc.py: 445:Action : Shift and goto state 127
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term + . LexToken(ID,'f2',1,932)
   yacc.py: 471:Action : Reduce rule [addsub -> +] with ['+'] and goto state 125
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub . LexToken(ID,'f2',1,932)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub empty . LexToken(ID,'f2',1,932)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term_not . LexToken(ID,'f2',1,932)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term_not empty . LexToken(ID,'f2',1,932)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor3 . LexToken(ID,'f2',1,932)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor3 ID . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['f2'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor3 varcte . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor2 . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor . LexToken(;,';',1,934)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor empty . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor term2 . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term . LexToken(;,';',1,934)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term empty . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 192
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 192
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term addsub term exp2 . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term exp2] with [None,None,None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR term exp2 . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR exp . LexToken(;,';',1,934)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR exp empty . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR exp exp02 . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR exp0 . LexToken(;,';',1,934)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR exp0 empty . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement ID ASSIGNATOR expression . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['f3',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement assignment . LexToken(;,';',1,934)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement statement1 . LexToken(;,';',1,934)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement statement1 ; . LexToken(},'}',1,941)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement statement . LexToken(},'}',1,941)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 52
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement statement empty . LexToken(},'}',1,941)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement statement statement_aux . LexToken(},'}',1,941)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement statement_aux . LexToken(},'}',1,941)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement statement_aux . LexToken(},'}',1,941)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement statement_aux . LexToken(},'}',1,941)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement statement_aux . LexToken(},'}',1,941)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement statement_aux . LexToken(},'}',1,941)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 208
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 208
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement_aux . LexToken(},'}',1,941)
   yacc.py: 445:Action : Shift and goto state 211
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) { statement_aux } . LexToken(IF,'if',1,948)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 198
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement WHILE ( expression ) block . LexToken(IF,'if',1,948)
   yacc.py: 471:Action : Reduce rule [while -> WHILE ( expression ) block] with ['while','(',None,')',None] and goto state 65
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement while . LexToken(IF,'if',1,948)
   yacc.py: 471:Action : Reduce rule [statement2 -> while] with [None] and goto state 54
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement2 . LexToken(IF,'if',1,948)
   yacc.py: 471:Action : Reduce rule [statement -> statement2] with [None] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement . LexToken(IF,'if',1,948)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF . LexToken((,'(',1,950)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( . LexToken(ID,'a',1,951)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( empty . LexToken(ID,'a',1,951)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not . LexToken(ID,'a',1,951)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not empty . LexToken(ID,'a',1,951)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor3 . LexToken(ID,'a',1,951)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor3 ID . LexToken((,'(',1,952)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor3 ID ( . LexToken(),')',1,953)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 105
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor3 ID ( empty . LexToken(),')',1,953)
   yacc.py: 471:Action : Reduce rule [function_call1 -> empty] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor3 ID ( function_call1 . LexToken(),')',1,953)
   yacc.py: 445:Action : Shift and goto state 147
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor3 ID ( function_call1 ) . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [function_call -> ID ( function_call1 )] with ['a','(',None,')'] and goto state 172
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 172
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor3 function_call . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [varcte -> function_call] with [None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor3 varcte . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor2 . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor . LexToken(),')',1,954)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor empty . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term_not factor term2 . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term . LexToken(),')',1,954)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term empty . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( term exp2 . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( exp . LexToken(),')',1,954)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( exp empty . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( exp exp02 . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( exp0 . LexToken(),')',1,954)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( exp0 empty . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( exp0 expression1 . LexToken(),')',1,954)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 136
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression . LexToken(),')',1,954)
   yacc.py: 445:Action : Shift and goto state 176
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) . LexToken({,'{',1,956)
   yacc.py: 445:Action : Shift and goto state 197
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { . LexToken(IF,'if',1,965)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF . LexToken((,'(',1,967)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( . LexToken(CTE_INT,'3',1,968)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( empty . LexToken(CTE_INT,'3',1,968)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term_not . LexToken(CTE_INT,'3',1,968)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term_not empty . LexToken(CTE_INT,'3',1,968)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term_not factor3 . LexToken(CTE_INT,'3',1,968)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term_not factor3 CTE_INT . LexToken(<,'<',1,970)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['3'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term_not factor3 varcte . LexToken(<,'<',1,970)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term_not factor2 . LexToken(<,'<',1,970)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term_not factor . LexToken(<,'<',1,970)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term_not factor empty . LexToken(<,'<',1,970)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term_not factor term2 . LexToken(<,'<',1,970)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term . LexToken(<,'<',1,970)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term empty . LexToken(<,'<',1,970)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( term exp2 . LexToken(<,'<',1,970)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp . LexToken(<,'<',1,970)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp < . LexToken(CTE_INT,'4',1,972)
   yacc.py: 471:Action : Reduce rule [relop -> <] with ['<'] and goto state 116
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop . LexToken(CTE_INT,'4',1,972)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop empty . LexToken(CTE_INT,'4',1,972)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term_not . LexToken(CTE_INT,'4',1,972)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term_not empty . LexToken(CTE_INT,'4',1,972)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term_not factor3 . LexToken(CTE_INT,'4',1,972)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term_not factor3 CTE_INT . LexToken(AND,'&&',1,974)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['4'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term_not factor3 varcte . LexToken(AND,'&&',1,974)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term_not factor2 . LexToken(AND,'&&',1,974)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term_not factor . LexToken(AND,'&&',1,974)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term_not factor empty . LexToken(AND,'&&',1,974)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term_not factor term2 . LexToken(AND,'&&',1,974)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term . LexToken(AND,'&&',1,974)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term empty . LexToken(AND,'&&',1,974)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop term exp2 . LexToken(AND,'&&',1,974)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop exp . LexToken(AND,'&&',1,974)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop exp empty . LexToken(AND,'&&',1,974)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop exp exp02 . LexToken(AND,'&&',1,974)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 157
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 157
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp relop exp0 . LexToken(AND,'&&',1,974)
   yacc.py: 471:Action : Reduce rule [exp02 -> relop exp0] with [None,None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp exp02 . LexToken(AND,'&&',1,974)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 . LexToken(AND,'&&',1,974)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 AND . LexToken(CTE_INT,'5',1,977)
   yacc.py: 471:Action : Reduce rule [logop -> AND] with ['&&'] and goto state 111
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop . LexToken(CTE_INT,'5',1,977)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop empty . LexToken(CTE_INT,'5',1,977)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term_not . LexToken(CTE_INT,'5',1,977)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term_not empty . LexToken(CTE_INT,'5',1,977)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term_not factor3 . LexToken(CTE_INT,'5',1,977)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term_not factor3 CTE_INT . LexToken(>,'>',1,979)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['5'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term_not factor3 varcte . LexToken(>,'>',1,979)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term_not factor2 . LexToken(>,'>',1,979)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term_not factor . LexToken(>,'>',1,979)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term_not factor empty . LexToken(>,'>',1,979)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term_not factor term2 . LexToken(>,'>',1,979)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term . LexToken(>,'>',1,979)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term empty . LexToken(>,'>',1,979)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop term exp2 . LexToken(>,'>',1,979)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp . LexToken(>,'>',1,979)
   yacc.py: 445:Action : Shift and goto state 119
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp > . LexToken(CTE_INT,'9',1,981)
   yacc.py: 471:Action : Reduce rule [relop -> >] with ['>'] and goto state 116
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop . LexToken(CTE_INT,'9',1,981)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop empty . LexToken(CTE_INT,'9',1,981)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term_not . LexToken(CTE_INT,'9',1,981)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term_not empty . LexToken(CTE_INT,'9',1,981)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term_not factor3 . LexToken(CTE_INT,'9',1,981)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term_not factor3 CTE_INT . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['9'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term_not factor3 varcte . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term_not factor2 . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term_not factor . LexToken(),')',1,982)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term_not factor empty . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term_not factor term2 . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term . LexToken(),')',1,982)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term empty . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop term exp2 . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop exp . LexToken(),')',1,982)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop exp empty . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop exp exp02 . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 157
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 157
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp relop exp0 . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [exp02 -> relop exp0] with [None,None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp exp02 . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 156
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp0 . LexToken(),')',1,982)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp0 empty . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 191
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 logop exp0 expression1 . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [expression1 -> logop exp0 expression1] with [None,None,None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( exp0 expression1 . LexToken(),')',1,982)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 136
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression . LexToken(),')',1,982)
   yacc.py: 445:Action : Shift and goto state 176
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) . LexToken({,'{',1,984)
   yacc.py: 445:Action : Shift and goto state 197
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { . LexToken(ID,'p',1,995)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID . LexToken(ASSIGNATOR,':=',1,997)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR . LexToken(CTE_INT,'3',1,1000)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR empty . LexToken(CTE_INT,'3',1,1000)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term_not . LexToken(CTE_INT,'3',1,1000)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term_not empty . LexToken(CTE_INT,'3',1,1000)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term_not factor3 . LexToken(CTE_INT,'3',1,1000)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term_not factor3 CTE_INT . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['3'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term_not factor3 varcte . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term_not factor2 . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term_not factor . LexToken(;,';',1,1001)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term_not factor empty . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term_not factor term2 . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term . LexToken(;,';',1,1001)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term empty . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR term exp2 . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR exp . LexToken(;,';',1,1001)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR exp empty . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR exp exp02 . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR exp0 . LexToken(;,';',1,1001)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR exp0 empty . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { ID ASSIGNATOR expression . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['p',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { assignment . LexToken(;,';',1,1001)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { statement1 . LexToken(;,';',1,1001)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { statement1 ; . LexToken(},'}',1,1010)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { statement . LexToken(},'}',1,1010)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 52
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { statement empty . LexToken(},'}',1,1010)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { statement statement_aux . LexToken(},'}',1,1010)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 208
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 208
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { statement_aux . LexToken(},'}',1,1010)
   yacc.py: 445:Action : Shift and goto state 211
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) { statement_aux } . LexToken(ELSE,'else',1,1012)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block . LexToken(ELSE,'else',1,1012)
   yacc.py: 445:Action : Shift and goto state 206
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE . LexToken({,'{',1,1017)
   yacc.py: 445:Action : Shift and goto state 197
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { . LexToken(PRINT,'print',1,1028)
   yacc.py: 445:Action : Shift and goto state 68
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT . LexToken((,'(',1,1033)
   yacc.py: 445:Action : Shift and goto state 85
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( . LexToken(CTE_STRING,'"nothing"',1,1034)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( empty . LexToken(CTE_STRING,'"nothing"',1,1034)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term_not . LexToken(CTE_STRING,'"nothing"',1,1034)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term_not empty . LexToken(CTE_STRING,'"nothing"',1,1034)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term_not factor3 . LexToken(CTE_STRING,'"nothing"',1,1034)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term_not factor3 CTE_STRING . LexToken(,,',',1,1043)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_STRING] with ['"nothing"'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term_not factor3 varcte . LexToken(,,',',1,1043)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term_not factor2 . LexToken(,,',',1,1043)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term_not factor . LexToken(,,',',1,1043)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term_not factor empty . LexToken(,,',',1,1043)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term_not factor term2 . LexToken(,,',',1,1043)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term . LexToken(,,',',1,1043)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term empty . LexToken(,,',',1,1043)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( term exp2 . LexToken(,,',',1,1043)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( exp . LexToken(,,',',1,1043)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( exp empty . LexToken(,,',',1,1043)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( exp exp02 . LexToken(,,',',1,1043)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( exp0 . LexToken(,,',',1,1043)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( exp0 empty . LexToken(,,',',1,1043)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( exp0 expression1 . LexToken(,,',',1,1043)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression . LexToken(,,',',1,1043)
   yacc.py: 445:Action : Shift and goto state 154
   yacc.py: 410:
   yacc.py: 411:State  : 154
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , . LexToken(CTE_INT,'123',1,1045)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , empty . LexToken(CTE_INT,'123',1,1045)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term_not . LexToken(CTE_INT,'123',1,1045)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term_not empty . LexToken(CTE_INT,'123',1,1045)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term_not factor3 . LexToken(CTE_INT,'123',1,1045)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term_not factor3 CTE_INT . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['123'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term_not factor3 varcte . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term_not factor2 . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term_not factor . LexToken(),')',1,1048)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term_not factor empty . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term_not factor term2 . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term . LexToken(),')',1,1048)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term empty . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , term exp2 . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , exp . LexToken(),')',1,1048)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , exp empty . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , exp exp02 . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , exp0 . LexToken(),')',1,1048)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , exp0 empty . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , exp0 expression1 . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 190
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , expression . LexToken(),')',1,1048)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 155
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 430:Defaulted state 155: Reduce using 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , expression empty . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 202
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 202
   yacc.py: 430:Defaulted state 202: Reduce using 34
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression , expression output1 . LexToken(),')',1,1048)
   yacc.py: 471:Action : Reduce rule [output1 -> , expression output1] with [',',None,None] and goto state 153
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression output1 . LexToken(),')',1,1048)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 33
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { PRINT ( expression output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( expression output1 )] with ['print','(',None,None,')'] and goto state 57
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 430:Defaulted state 57: Reduce using 49
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { statement1 . LexToken(;,';',1,1049)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { statement1 ; . LexToken(},'}',1,1058)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { statement . LexToken(},'}',1,1058)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 52
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { statement empty . LexToken(},'}',1,1058)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { statement statement_aux . LexToken(},'}',1,1058)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 208
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 208
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { statement_aux . LexToken(},'}',1,1058)
   yacc.py: 445:Action : Shift and goto state 211
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE { statement_aux } . LexToken(},'}',1,1065)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 210
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 210
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block ELSE block . LexToken(},'}',1,1065)
   yacc.py: 471:Action : Reduce rule [condition1 -> ELSE block] with ['else',None] and goto state 205
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { IF ( expression ) block condition1 . LexToken(},'}',1,1065)
   yacc.py: 471:Action : Reduce rule [condition -> IF ( expression ) block condition1] with ['if','(',None,')',None,None] and goto state 64
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { condition . LexToken(},'}',1,1065)
   yacc.py: 471:Action : Reduce rule [statement2 -> condition] with [None] and goto state 54
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { statement2 . LexToken(},'}',1,1065)
   yacc.py: 471:Action : Reduce rule [statement -> statement2] with [None] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { statement . LexToken(},'}',1,1065)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 52
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { statement empty . LexToken(},'}',1,1065)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { statement statement_aux . LexToken(},'}',1,1065)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 208
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 208
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { statement_aux . LexToken(},'}',1,1065)
   yacc.py: 445:Action : Shift and goto state 211
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) { statement_aux } . LexToken(ELSE,'else',1,1067)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block . LexToken(ELSE,'else',1,1067)
   yacc.py: 445:Action : Shift and goto state 206
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE . LexToken({,'{',1,1072)
   yacc.py: 445:Action : Shift and goto state 197
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { . LexToken(IF,'if',1,1082)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF . LexToken((,'(',1,1084)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( . LexToken(CTE_INT,'3',1,1085)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( empty . LexToken(CTE_INT,'3',1,1085)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term_not . LexToken(CTE_INT,'3',1,1085)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term_not empty . LexToken(CTE_INT,'3',1,1085)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term_not factor3 . LexToken(CTE_INT,'3',1,1085)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term_not factor3 CTE_INT . LexToken(),')',1,1086)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['3'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term_not factor3 varcte . LexToken(),')',1,1086)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term_not factor2 . LexToken(),')',1,1086)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term_not factor . LexToken(),')',1,1086)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term_not factor empty . LexToken(),')',1,1086)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term_not factor term2 . LexToken(),')',1,1086)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term . LexToken(),')',1,1086)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term empty . LexToken(),')',1,1086)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( term exp2 . LexToken(),')',1,1086)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( exp . LexToken(),')',1,1086)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( exp empty . LexToken(),')',1,1086)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( exp exp02 . LexToken(),')',1,1086)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( exp0 . LexToken(),')',1,1086)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( exp0 empty . LexToken(),')',1,1086)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( exp0 expression1 . LexToken(),')',1,1086)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 136
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression . LexToken(),')',1,1086)
   yacc.py: 445:Action : Shift and goto state 176
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) . LexToken({,'{',1,1088)
   yacc.py: 445:Action : Shift and goto state 197
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { . LexToken(ID,'b',1,1100)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID . LexToken(ASSIGNATOR,':=',1,1102)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR . LexToken(CTE_INT,'4',1,1105)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR empty . LexToken(CTE_INT,'4',1,1105)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term_not . LexToken(CTE_INT,'4',1,1105)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term_not empty . LexToken(CTE_INT,'4',1,1105)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term_not factor3 . LexToken(CTE_INT,'4',1,1105)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term_not factor3 CTE_INT . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['4'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term_not factor3 varcte . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term_not factor2 . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term_not factor . LexToken(;,';',1,1106)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term_not factor empty . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term_not factor term2 . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term . LexToken(;,';',1,1106)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term empty . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR term exp2 . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR exp . LexToken(;,';',1,1106)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR exp empty . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR exp exp02 . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR exp0 . LexToken(;,';',1,1106)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR exp0 empty . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { ID ASSIGNATOR expression . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['b',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { assignment . LexToken(;,';',1,1106)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { statement1 . LexToken(;,';',1,1106)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { statement1 ; . LexToken(},'}',1,1116)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { statement . LexToken(},'}',1,1116)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 52
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { statement empty . LexToken(},'}',1,1116)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { statement statement_aux . LexToken(},'}',1,1116)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 208
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 208
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { statement_aux . LexToken(},'}',1,1116)
   yacc.py: 445:Action : Shift and goto state 211
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) { statement_aux } . LexToken(ELSE,'else',1,1126)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 196
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block . LexToken(ELSE,'else',1,1126)
   yacc.py: 445:Action : Shift and goto state 206
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE . LexToken({,'{',1,1131)
   yacc.py: 445:Action : Shift and goto state 197
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { . LexToken(ID,'opsdf',1,1143)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID . LexToken((,'(',1,1148)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( . LexToken(CTE_STRING,'"asdasd"',1,1149)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 105
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( empty . LexToken(CTE_STRING,'"asdasd"',1,1149)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term_not . LexToken(CTE_STRING,'"asdasd"',1,1149)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term_not empty . LexToken(CTE_STRING,'"asdasd"',1,1149)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term_not factor3 . LexToken(CTE_STRING,'"asdasd"',1,1149)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term_not factor3 CTE_STRING . LexToken(,,',',1,1157)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_STRING] with ['"asdasd"'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term_not factor3 varcte . LexToken(,,',',1,1157)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term_not factor2 . LexToken(,,',',1,1157)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term_not factor . LexToken(,,',',1,1157)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term_not factor empty . LexToken(,,',',1,1157)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term_not factor term2 . LexToken(,,',',1,1157)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term . LexToken(,,',',1,1157)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term empty . LexToken(,,',',1,1157)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( term exp2 . LexToken(,,',',1,1157)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( exp . LexToken(,,',',1,1157)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( exp empty . LexToken(,,',',1,1157)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( exp exp02 . LexToken(,,',',1,1157)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( exp0 . LexToken(,,',',1,1157)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( exp0 empty . LexToken(,,',',1,1157)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( exp0 expression1 . LexToken(,,',',1,1157)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression . LexToken(,,',',1,1157)
   yacc.py: 445:Action : Shift and goto state 149
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , . LexToken(ID,'a',1,1159)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , empty . LexToken(ID,'a',1,1159)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not . LexToken(ID,'a',1,1159)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not empty . LexToken(ID,'a',1,1159)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 . LexToken(ID,'a',1,1159)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID . LexToken((,'(',1,1160)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( . LexToken(ID,'fa',1,1161)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 105
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( empty . LexToken(ID,'fa',1,1161)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not . LexToken(ID,'fa',1,1161)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not empty . LexToken(ID,'fa',1,1161)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 . LexToken(ID,'fa',1,1161)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID . LexToken((,'(',1,1163)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( . LexToken(CTE_STRING,'"asd"',1,1164)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 105
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( empty . LexToken(CTE_STRING,'"asd"',1,1164)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term_not . LexToken(CTE_STRING,'"asd"',1,1164)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term_not empty . LexToken(CTE_STRING,'"asd"',1,1164)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term_not factor3 . LexToken(CTE_STRING,'"asd"',1,1164)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term_not factor3 CTE_STRING . LexToken(,,',',1,1169)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_STRING] with ['"asd"'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term_not factor3 varcte . LexToken(,,',',1,1169)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term_not factor2 . LexToken(,,',',1,1169)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term_not factor . LexToken(,,',',1,1169)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term_not factor empty . LexToken(,,',',1,1169)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term_not factor term2 . LexToken(,,',',1,1169)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term . LexToken(,,',',1,1169)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term empty . LexToken(,,',',1,1169)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( term exp2 . LexToken(,,',',1,1169)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( exp . LexToken(,,',',1,1169)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( exp empty . LexToken(,,',',1,1169)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( exp exp02 . LexToken(,,',',1,1169)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( exp0 . LexToken(,,',',1,1169)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( exp0 empty . LexToken(,,',',1,1169)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( exp0 expression1 . LexToken(,,',',1,1169)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression . LexToken(,,',',1,1169)
   yacc.py: 445:Action : Shift and goto state 149
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , . LexToken(CTE_INT,'123',1,1171)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , empty . LexToken(CTE_INT,'123',1,1171)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term_not . LexToken(CTE_INT,'123',1,1171)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term_not empty . LexToken(CTE_INT,'123',1,1171)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term_not factor3 . LexToken(CTE_INT,'123',1,1171)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term_not factor3 CTE_INT . LexToken(,,',',1,1174)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['123'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term_not factor3 varcte . LexToken(,,',',1,1174)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term_not factor2 . LexToken(,,',',1,1174)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term_not factor . LexToken(,,',',1,1174)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term_not factor empty . LexToken(,,',',1,1174)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term_not factor term2 . LexToken(,,',',1,1174)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term . LexToken(,,',',1,1174)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term empty . LexToken(,,',',1,1174)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , term exp2 . LexToken(,,',',1,1174)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , exp . LexToken(,,',',1,1174)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , exp empty . LexToken(,,',',1,1174)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , exp exp02 . LexToken(,,',',1,1174)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , exp0 . LexToken(,,',',1,1174)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , exp0 empty . LexToken(,,',',1,1174)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , exp0 expression1 . LexToken(,,',',1,1174)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression . LexToken(,,',',1,1174)
   yacc.py: 445:Action : Shift and goto state 149
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , . LexToken(CTE_INT,'543',1,1176)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , empty . LexToken(CTE_INT,'543',1,1176)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term_not . LexToken(CTE_INT,'543',1,1176)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term_not empty . LexToken(CTE_INT,'543',1,1176)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term_not factor3 . LexToken(CTE_INT,'543',1,1176)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term_not factor3 CTE_INT . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [varcte -> CTE_INT] with ['543'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term_not factor3 varcte . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term_not factor2 . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term_not factor . LexToken(),')',1,1179)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term_not factor empty . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term_not factor term2 . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term . LexToken(),')',1,1179)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term empty . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , term exp2 . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , exp . LexToken(),')',1,1179)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , exp empty . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , exp exp02 . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , exp0 . LexToken(),')',1,1179)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , exp0 empty . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , exp0 expression1 . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , expression . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [function_call2 -> expression] with [None] and goto state 186
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 430:Defaulted state 186: Reduce using 39
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , expression , function_call2 . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [function_call2 -> expression , function_call2] with [None,',',None] and goto state 186
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 430:Defaulted state 186: Reduce using 39
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( expression , function_call2 . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [function_call2 -> expression , function_call2] with [None,',',None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 430:Defaulted state 106: Reduce using 38
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( function_call2 . LexToken(),')',1,1179)
   yacc.py: 471:Action : Reduce rule [function_call1 -> function_call2] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( function_call1 . LexToken(),')',1,1179)
   yacc.py: 445:Action : Shift and goto state 147
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 ID ( function_call1 ) . LexToken(-,'-',1,1181)
   yacc.py: 471:Action : Reduce rule [function_call -> ID ( function_call1 )] with ['fa','(',None,')'] and goto state 172
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 172
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 function_call . LexToken(-,'-',1,1181)
   yacc.py: 471:Action : Reduce rule [varcte -> function_call] with [None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor3 varcte . LexToken(-,'-',1,1181)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor2 . LexToken(-,'-',1,1181)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor . LexToken(-,'-',1,1181)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor empty . LexToken(-,'-',1,1181)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term_not factor term2 . LexToken(-,'-',1,1181)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term . LexToken(-,'-',1,1181)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term - . LexToken(ID,'b',1,1183)
   yacc.py: 471:Action : Reduce rule [addsub -> -] with ['-'] and goto state 125
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub . LexToken(ID,'b',1,1183)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub empty . LexToken(ID,'b',1,1183)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not . LexToken(ID,'b',1,1183)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not empty . LexToken(ID,'b',1,1183)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor3 . LexToken(ID,'b',1,1183)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor3 ID . LexToken(.,'.',1,1184)
   yacc.py: 445:Action : Shift and goto state 195
   yacc.py: 410:
   yacc.py: 411:State  : 195
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor3 ID . . LexToken(OPERATION,'size',1,1185)
   yacc.py: 445:Action : Shift and goto state 204
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor3 ID . OPERATION . LexToken((,'(',1,1189)
   yacc.py: 445:Action : Shift and goto state 209
   yacc.py: 410:
   yacc.py: 411:State  : 209
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor3 ID . OPERATION ( . LexToken(),')',1,1190)
   yacc.py: 445:Action : Shift and goto state 183
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor3 ID . OPERATION ( ) . LexToken(),')',1,1191)
   yacc.py: 471:Action : Reduce rule [map_operation -> ID . OPERATION ( )] with ['b','.','size','(',')'] and goto state 174
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 174
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor3 map_operation . LexToken(),')',1,1191)
   yacc.py: 471:Action : Reduce rule [varcte -> map_operation] with [None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor3 varcte . LexToken(),')',1,1191)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor2 . LexToken(),')',1,1191)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor . LexToken(),')',1,1191)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor empty . LexToken(),')',1,1191)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term_not factor term2 . LexToken(),')',1,1191)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term . LexToken(),')',1,1191)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term empty . LexToken(),')',1,1191)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 192
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 192
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term addsub term exp2 . LexToken(),')',1,1191)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term exp2] with [None,None,None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( term exp2 . LexToken(),')',1,1191)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 104
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 104
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( exp . LexToken(),')',1,1191)
   yacc.py: 445:Action : Shift and goto state 148
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 ID ( exp ) . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [map_access -> ID ( exp )] with ['a','(',None,')'] and goto state 173
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 map_access . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [varcte -> map_access] with [None] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor3 varcte . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor2 . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor . LexToken(),')',1,1192)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor empty . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term_not factor term2 . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term . LexToken(),')',1,1192)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term empty . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , term exp2 . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , exp . LexToken(),')',1,1192)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , exp empty . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , exp exp02 . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , exp0 . LexToken(),')',1,1192)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , exp0 empty . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , exp0 expression1 . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 107
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 107
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , expression . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [function_call2 -> expression] with [None] and goto state 186
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 430:Defaulted state 186: Reduce using 39
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( expression , function_call2 . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [function_call2 -> expression , function_call2] with [None,',',None] and goto state 106
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 430:Defaulted state 106: Reduce using 38
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( function_call2 . LexToken(),')',1,1192)
   yacc.py: 471:Action : Reduce rule [function_call1 -> function_call2] with [None] and goto state 103
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( function_call1 . LexToken(),')',1,1192)
   yacc.py: 445:Action : Shift and goto state 147
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { ID ( function_call1 ) . LexToken(;,';',1,1193)
   yacc.py: 471:Action : Reduce rule [function_call -> ID ( function_call1 )] with ['opsdf','(',None,')'] and goto state 63
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 430:Defaulted state 63: Reduce using 55
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { function_call . LexToken(;,';',1,1193)
   yacc.py: 471:Action : Reduce rule [statement1 -> function_call] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { statement1 . LexToken(;,';',1,1193)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { statement1 ; . LexToken(},'}',1,1203)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { statement . LexToken(},'}',1,1203)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 52
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { statement empty . LexToken(},'}',1,1203)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { statement statement_aux . LexToken(},'}',1,1203)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 208
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 208
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { statement_aux . LexToken(},'}',1,1203)
   yacc.py: 445:Action : Shift and goto state 211
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE { statement_aux } . LexToken(},'}',1,1210)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 210
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 210
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block ELSE block . LexToken(},'}',1,1210)
   yacc.py: 471:Action : Reduce rule [condition1 -> ELSE block] with ['else',None] and goto state 205
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { IF ( expression ) block condition1 . LexToken(},'}',1,1210)
   yacc.py: 471:Action : Reduce rule [condition -> IF ( expression ) block condition1] with ['if','(',None,')',None,None] and goto state 64
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { condition . LexToken(},'}',1,1210)
   yacc.py: 471:Action : Reduce rule [statement2 -> condition] with [None] and goto state 54
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { statement2 . LexToken(},'}',1,1210)
   yacc.py: 471:Action : Reduce rule [statement -> statement2] with [None] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { statement . LexToken(},'}',1,1210)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 52
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { statement empty . LexToken(},'}',1,1210)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { statement statement_aux . LexToken(},'}',1,1210)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 208
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 208
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { statement_aux . LexToken(},'}',1,1210)
   yacc.py: 445:Action : Shift and goto state 211
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE { statement_aux } . LexToken(ID,'allNumbers',1,1218)
   yacc.py: 471:Action : Reduce rule [block -> { statement_aux }] with ['{',None,'}'] and goto state 210
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 210
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block ELSE block . LexToken(ID,'allNumbers',1,1218)
   yacc.py: 471:Action : Reduce rule [condition1 -> ELSE block] with ['else',None] and goto state 205
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement IF ( expression ) block condition1 . LexToken(ID,'allNumbers',1,1218)
   yacc.py: 471:Action : Reduce rule [condition -> IF ( expression ) block condition1] with ['if','(',None,')',None,None] and goto state 64
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement condition . LexToken(ID,'allNumbers',1,1218)
   yacc.py: 471:Action : Reduce rule [statement2 -> condition] with [None] and goto state 54
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement2 . LexToken(ID,'allNumbers',1,1218)
   yacc.py: 471:Action : Reduce rule [statement -> statement2] with [None] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement . LexToken(ID,'allNumbers',1,1218)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID . LexToken(ASSIGNATOR,':=',1,1229)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR . LexToken(ID,'allNumbers',1,1232)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR empty . LexToken(ID,'allNumbers',1,1232)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term_not . LexToken(ID,'allNumbers',1,1232)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term_not empty . LexToken(ID,'allNumbers',1,1232)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 . LexToken(ID,'allNumbers',1,1232)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 ID . LexToken(-,'-',1,1243)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['allNumbers'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term_not factor3 varcte . LexToken(-,'-',1,1243)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term_not factor2 . LexToken(-,'-',1,1243)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term_not factor . LexToken(-,'-',1,1243)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term_not factor empty . LexToken(-,'-',1,1243)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term_not factor term2 . LexToken(-,'-',1,1243)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term . LexToken(-,'-',1,1243)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term - . LexToken(ID,'fibonacciNumbers',1,1245)
   yacc.py: 471:Action : Reduce rule [addsub -> -] with ['-'] and goto state 125
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub . LexToken(ID,'fibonacciNumbers',1,1245)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub empty . LexToken(ID,'fibonacciNumbers',1,1245)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term_not . LexToken(ID,'fibonacciNumbers',1,1245)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term_not empty . LexToken(ID,'fibonacciNumbers',1,1245)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor3 . LexToken(ID,'fibonacciNumbers',1,1245)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor3 ID . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with [<str @ 0x7fcc46cbf618>] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor3 varcte . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor2 . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor . LexToken(;,';',1,1261)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor empty . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term_not factor term2 . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 158
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term . LexToken(;,';',1,1261)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term empty . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 192
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 192
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term addsub term exp2 . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [exp2 -> addsub term exp2] with [None,None,None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR term exp2 . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR exp . LexToken(;,';',1,1261)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR exp empty . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR exp exp02 . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR exp0 . LexToken(;,';',1,1261)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR exp0 empty . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR exp0 expression1 . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 101
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 430:Defaulted state 101: Reduce using 26
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement ID ASSIGNATOR expression . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [assignment -> ID ASSIGNATOR expression] with ['allNumbers',':=',None] and goto state 55
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 430:Defaulted state 55: Reduce using 47
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement assignment . LexToken(;,';',1,1261)
   yacc.py: 471:Action : Reduce rule [statement1 -> assignment] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement1 . LexToken(;,';',1,1261)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement1 ; . LexToken(PRINT,'print',1,1268)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement . LexToken(PRINT,'print',1,1268)
   yacc.py: 445:Action : Shift and goto state 68
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT . LexToken((,'(',1,1273)
   yacc.py: 445:Action : Shift and goto state 85
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( . LexToken(ID,'allNumbers',1,1274)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 92
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( empty . LexToken(ID,'allNumbers',1,1274)
   yacc.py: 471:Action : Reduce rule [term_not -> empty] with [None] and goto state 90
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term_not . LexToken(ID,'allNumbers',1,1274)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term_not empty . LexToken(ID,'allNumbers',1,1274)
   yacc.py: 471:Action : Reduce rule [factor3 -> empty] with [None] and goto state 132
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term_not factor3 . LexToken(ID,'allNumbers',1,1274)
   yacc.py: 445:Action : Shift and goto state 166
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term_not factor3 ID . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [varcte -> ID] with ['allNumbers'] and goto state 165
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term_not factor3 varcte . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [factor2 -> factor3 varcte] with [None,None] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term_not factor2 . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [factor -> factor2] with [None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term_not factor . LexToken(),')',1,1284)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 161
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term_not factor empty . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [term2 -> empty] with [None] and goto state 159
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term_not factor term2 . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [term -> term_not factor term2] with [None,None,None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term . LexToken(),')',1,1284)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 126
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term empty . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [exp2 -> empty] with [None] and goto state 124
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( term exp2 . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [exp -> term exp2] with [None,None] and goto state 88
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( exp . LexToken(),')',1,1284)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 117
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( exp empty . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [exp02 -> empty] with [None] and goto state 115
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( exp exp02 . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [exp0 -> exp exp02] with [None,None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( exp0 . LexToken(),')',1,1284)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 112
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( exp0 empty . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [expression1 -> empty] with [None] and goto state 110
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( exp0 expression1 . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [expression -> exp0 expression1] with [None,None] and goto state 109
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( expression . LexToken(),')',1,1284)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 155
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 430:Defaulted state 155: Reduce using 35
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( expression empty . LexToken(),')',1,1284)
   yacc.py: 471:Action : Reduce rule [output1 -> empty] with [None] and goto state 153
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( expression output1 . LexToken(),')',1,1284)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 33
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement PRINT ( expression output1 ) . None
   yacc.py: 471:Action : Reduce rule [output -> PRINT ( expression output1 )] with ['print','(',None,None,')'] and goto state 57
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 430:Defaulted state 57: Reduce using 49
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement output . None
   yacc.py: 471:Action : Reduce rule [statement1 -> output] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement statement1 . LexToken(;,';',1,1285)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement statement1 ; . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement -> statement1 ;] with [None,';'] and goto state 51
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement statement . LexToken(},'}',1,1288)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 52
   yacc.py: 548:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 112
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement statement empty . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> empty] with [None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 430:Defaulted state 79: Reduce using 111
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement statement_aux . LexToken(},'}',1,1288)
   yacc.py: 471:Action : Reduce rule [statement_aux -> statement statement_aux] with [None,None] and goto state 50
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement_aux . LexToken(},'}',1,1288)
   yacc.py: 445:Action : Shift and goto state 78
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 430:Defaulted state 78: Reduce using 113
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc MAIN { vars_aux statement_aux } . None
   yacc.py: 471:Action : Reduce rule [main -> MAIN { vars_aux statement_aux }] with ['main','{',None,None,'}'] and goto state 10
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 430:Defaulted state 10: Reduce using 5
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc main . None
   yacc.py: 471:Action : Reduce rule [program2 -> main] with [None] and goto state 27
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 430:Defaulted state 27: Reduce using 4
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc proc program2 . None
   yacc.py: 471:Action : Reduce rule [program2 -> proc program2] with [None,None] and goto state 27
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 430:Defaulted state 27: Reduce using 4
   yacc.py: 435:Stack  : PROGRAM ID ; var var proc program2 . None
   yacc.py: 471:Action : Reduce rule [program2 -> proc program2] with [None,None] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 430:Defaulted state 7: Reduce using 3
   yacc.py: 435:Stack  : PROGRAM ID ; var var program2 . None
   yacc.py: 471:Action : Reduce rule [program1 -> program2] with [None] and goto state 23
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 430:Defaulted state 23: Reduce using 2
   yacc.py: 435:Stack  : PROGRAM ID ; var var program1 . None
   yacc.py: 471:Action : Reduce rule [program1 -> var program1] with ['float b',None] and goto state 23
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 430:Defaulted state 23: Reduce using 2
   yacc.py: 435:Stack  : PROGRAM ID ; var program1 . None
   yacc.py: 471:Action : Reduce rule [program1 -> var program1] with ['int varA varB',None] and goto state 5
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 430:Defaulted state 5: Reduce using 1
   yacc.py: 435:Stack  : PROGRAM ID ; program1 . None
   yacc.py: 471:Action : Reduce rule [program -> PROGRAM ID ; program1] with ['program','fibonacci',';',None] and goto state 1
   yacc.py: 506:Result : <NoneType @ 0x9d34e0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 435:Stack  : program . $end
   yacc.py: 571:Done   : Returning <NoneType @ 0x9d34e0> (None)
   yacc.py: 572:PLY: PARSE DEBUG END
