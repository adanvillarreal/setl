Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PROGRAM

Grammar

Rule 0     S' -> program
Rule 1     program -> POGRAM ID ; program1
Rule 2     program1 -> program2 program3 main
Rule 3     program2 -> vars
Rule 4     program2 -> empty
Rule 5     program3 -> proc program3
Rule 6     program3 -> empty
Rule 7     vars -> datatype vars1 ; vars2
Rule 8     vars1 -> ID , vars1
Rule 9     vars1 -> ID
Rule 10    vars2 -> vars
Rule 11    vars2 -> empty
Rule 12    proc -> functype ID ( proc1 ) { proc3 proc4 }
Rule 13    proc1 -> datatype ID proc2
Rule 14    proc2 -> , proc1
Rule 15    proc2 -> empty
Rule 16    proc3 -> vars
Rule 17    proc3 -> empty
Rule 18    proc4 -> statement proc4
Rule 19    proc4 -> empty
Rule 20    assignment -> ID ASSIGNATOR expression
Rule 21    condition -> IF ( expression ) block condition1
Rule 22    condition1 -> ELSE block
Rule 23    condition1 -> empty
Rule 24    input -> READ ( ID input1 )
Rule 25    input1 -> , ID input1
Rule 26    input1 -> empty
Rule 27    output -> PRINT ( expression output1 )
Rule 28    output1 -> , expression output1
Rule 29    output1 -> empty
Rule 30    function_call -> ID ( function_call1 )
Rule 31    function_call1 -> function_call2
Rule 32    function_call1 -> empty
Rule 33    function_call2 -> expression , function_call2
Rule 34    function_call2 -> empty
Rule 35    return -> RETURN expression
Rule 36    set_operation -> ID . OPERATION ( set_operation1 )
Rule 37    set_operation1 -> expression
Rule 38    set_operation1 -> empty
Rule 39    statement -> statement1 ;
Rule 40    statement -> statement2
Rule 41    statement1 -> assignment
Rule 42    statement1 -> input
Rule 43    statement1 -> output
Rule 44    statement1 -> set_operation
Rule 45    statement1 -> map_definition
Rule 46    statement1 -> return
Rule 47    statement1 -> map_assignment
Rule 48    statement1 -> map_operation
Rule 49    statement2 -> condition
Rule 50    statement2 -> while
Rule 51    while -> WHILE ( expression ) block
Rule 52    relop -> <
Rule 53    relop -> >
Rule 54    relop -> NOT_EQ
Rule 55    relop -> EQ
Rule 56    relop -> LEQ
Rule 57    relop -> GEQ
Rule 58    logop -> OR
Rule 59    logop -> AND
Rule 60    expression -> exp0 expression2
Rule 61    expression2 -> logop exp0 expression2
Rule 62    expression2 -> empty
Rule 63    exp0 -> exp exp02
Rule 64    exp02 -> relop exp02
Rule 65    exp02 -> empty
Rule 66    exp -> term exp2
Rule 67    addsub -> +
Rule 68    addsub -> -
Rule 69    muldiv -> *
Rule 70    muldiv -> /
Rule 71    exp2 -> addsub term exp2
Rule 72    exp2 -> empty
Rule 73    term -> term_not factor term2
Rule 74    term2 -> muldiv factor term2
Rule 75    term2 -> empty
Rule 76    term_not -> !
Rule 77    term_not -> empty
Rule 78    factor -> ( expression )
Rule 79    factor -> factor2
Rule 80    factor2 -> factor3 varcte
Rule 81    factor3 -> addsub
Rule 82    factor3 -> empty
Rule 83    varcte -> ID
Rule 84    varcte -> CTE_INT
Rule 85    varcte -> CTE_FLOAT
Rule 86    varcte -> CTE_BOOL
Rule 87    varcte -> CTE_STRING
Rule 88    varcte -> CTE_CHAR
Rule 89    varcte -> function_call
Rule 90    varcte -> map_access
Rule 91    varcte -> map_operation
Rule 92    varcte -> set_operation
Rule 93    datatype -> INT
Rule 94    datatype -> FLOAT
Rule 95    datatype -> BOOL
Rule 96    datatype -> STRING
Rule 97    datatype -> CHAR
Rule 98    datatype -> set_definition
Rule 99    datatype -> map_definition
Rule 100   set_definition -> SET < datatype >
Rule 101   functype -> datatype
Rule 102   functype -> VOID
Rule 103   block -> { statement_aux }
Rule 104   statement_aux -> statement statement_aux
Rule 105   statement_aux -> empty
Rule 106   main -> MAIN { vars_aux statement_aux }
Rule 107   vars_aux -> vars
Rule 108   vars_aux -> empty
Rule 109   map_definition -> MAP < datatype , datatype >
Rule 110   map_access -> ID ( exp )
Rule 111   map_assignment -> map_access ASSIGNATOR exp
Rule 112   map_operation -> ID . OPERATION ( )
Rule 113   empty -> <empty>

Terminals, with rules where they appear

!                    : 76
(                    : 12 21 24 27 30 36 51 78 110 112
)                    : 12 21 24 27 30 36 51 78 110 112
*                    : 69
+                    : 67
,                    : 8 14 25 28 33 109
-                    : 68
.                    : 36 112
/                    : 70
;                    : 1 7 39
<                    : 52 100 109
>                    : 53 100 109
AND                  : 59
ASSIGNATOR           : 20 111
BOOL                 : 95
CHAR                 : 97
CTE_BOOL             : 86
CTE_CHAR             : 88
CTE_FLOAT            : 85
CTE_INT              : 84
CTE_STRING           : 87
ELSE                 : 22
EQ                   : 55
FLOAT                : 94
GEQ                  : 57
ID                   : 1 8 9 12 13 20 24 25 30 36 83 110 112
IF                   : 21
INT                  : 93
LEQ                  : 56
MAIN                 : 106
MAP                  : 109
NOT_EQ               : 54
OPERATION            : 36 112
OR                   : 58
PRINT                : 27
PROGRAM              : 
READ                 : 24
RETURN               : 35
SET                  : 100
STRING               : 96
VOID                 : 102
WHILE                : 51
error                : 
{                    : 12 103 106
}                    : 12 103 106

Nonterminals, with rules where they appear

POGRAM               : 1
addsub               : 71 81
assignment           : 41
block                : 21 22 51
condition            : 49
condition1           : 21
datatype             : 7 13 100 101 109 109
empty                : 4 6 11 15 17 19 23 26 29 32 34 38 62 65 72 75 77 82 105 108
exp                  : 63 110 111
exp0                 : 60 61
exp02                : 63 64
exp2                 : 66 71
expression           : 20 21 27 28 33 35 37 51 78
expression2          : 60 61
factor               : 73 74
factor2              : 79
factor3              : 80
function_call        : 89
function_call1       : 30
function_call2       : 31 33
functype             : 12
input                : 42
input1               : 24 25
logop                : 61
main                 : 2
map_access           : 90 111
map_assignment       : 47
map_definition       : 45 99
map_operation        : 48 91
muldiv               : 74
output               : 43
output1              : 27 28
proc                 : 5
proc1                : 12 14
proc2                : 13
proc3                : 12
proc4                : 12 18
program              : 0
program1             : 1
program2             : 2
program3             : 2 5
relop                : 64
return               : 46
set_definition       : 98
set_operation        : 44 92
set_operation1       : 36
statement            : 18 104
statement1           : 39
statement2           : 40
statement_aux        : 103 104 106
term                 : 66 71
term2                : 73 74
term_not             : 73
varcte               : 80
vars                 : 3 10 16 107
vars1                : 7 8
vars2                : 7
vars_aux             : 106
while                : 50

